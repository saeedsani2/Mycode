prompt
prompt Creating table GLAS_RELATION_SETUP_T
prompt ====================================
prompt
create table GLAS_RELATION_SETUP_T
(
  org_id              NUMBER not null,
  relation_code       NUMBER not null,
  relation_desc       VARCHAR2(500),
  relation_short_desc VARCHAR2(50),
  gender              VARCHAR2(1),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  self_relation       VARCHAR2(10),
  allow_multiple      VARCHAR2(5),
  marital_status      VARCHAR2(5)
)
;
alter table GLAS_RELATION_SETUP_T
  add constraint PK_RELATION_SETUP_T primary key (ORG_ID, RELATION_CODE);
alter table GLAS_RELATION_SETUP_T
  add constraint FK_RELATION_SETUP_T_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_RULE_TR_TYPE_T
prompt ==================================
prompt
create table GLAS_RULE_TR_TYPE_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  transaction_desc VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_TR_TYPE_T
  add constraint PK_RULE_TR primary key (ORG_ID, TRANSACTION_TYPE);
alter table GLAS_RULE_TR_TYPE_T
  add constraint FK_RTR_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_RULE_ATTRIBUTES_T
prompt =====================================
prompt
create table GLAS_RULE_ATTRIBUTES_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  variable_code    NUMBER not null,
  variable_name    VARCHAR2(50),
  variable_type    VARCHAR2(20),
  variable_query   VARCHAR2(4000),
  variable_formula VARCHAR2(4000),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_ATTRIBUTES_T
  add constraint PK_RULE_ATTR primary key (ORG_ID, TRANSACTION_TYPE, VARIABLE_CODE);
alter table GLAS_RULE_ATTRIBUTES_T
  add constraint FK_RULE_ATTR_TR foreign key (ORG_ID, TRANSACTION_TYPE)
  references GLAS_RULE_TR_TYPE_T (ORG_ID, TRANSACTION_TYPE);

prompt
prompt Creating table GLAS_RULE_CONDITIONS_T
prompt =====================================
prompt
create table GLAS_RULE_CONDITIONS_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  condition_code   NUMBER not null,
  variable_name    VARCHAR2(50),
  cond_operator    VARCHAR2(50),
  variable_value   VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_CONDITIONS_T
  add constraint PK_RULE_CND primary key (ORG_ID, TRANSACTION_TYPE, CONDITION_CODE);
alter table GLAS_RULE_CONDITIONS_T
  add constraint FK_RULE_CND foreign key (ORG_ID, TRANSACTION_TYPE)
  references GLAS_RULE_TR_TYPE_T (ORG_ID, TRANSACTION_TYPE);

prompt
prompt Creating table GLAS_RULE_GROUPSHD_T
prompt ===================================
prompt
create table GLAS_RULE_GROUPSHD_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  group_code       NUMBER not null,
  group_desc       VARCHAR2(50),
  group_type       NUMBER,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_GROUPSHD_T
  add constraint PK_RULE_GRPHD primary key (ORG_ID, TRANSACTION_TYPE, GROUP_CODE);
alter table GLAS_RULE_GROUPSHD_T
  add constraint FK_RULE_GRPHD_TR foreign key (ORG_ID, TRANSACTION_TYPE)
  references GLAS_RULE_TR_TYPE_T (ORG_ID, TRANSACTION_TYPE);

prompt
prompt Creating table GLAS_RULE_GROUPSDTL_T
prompt ====================================
prompt
create table GLAS_RULE_GROUPSDTL_T
(
  org_id            NUMBER not null,
  transaction_type  NUMBER not null,
  group_code        NUMBER not null,
  group_detail_code NUMBER not null,
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_RULE_GROUPSDTL_T
  add constraint PK_RULE_GRPDTL primary key (ORG_ID, TRANSACTION_TYPE, GROUP_CODE, GROUP_DETAIL_CODE);
alter table GLAS_RULE_GROUPSDTL_T
  add constraint FK_RULE_GRPDTL_HD foreign key (ORG_ID, TRANSACTION_TYPE, GROUP_CODE)
  references GLAS_RULE_GROUPSHD_T (ORG_ID, TRANSACTION_TYPE, GROUP_CODE);

prompt
prompt Creating table GLAS_RULE_SETUPHD_T
prompt ==================================
prompt
create table GLAS_RULE_SETUPHD_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  rule_code        NUMBER not null,
  rule_desc        VARCHAR2(500),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_SETUPHD_T
  add constraint PK_RULE_HD primary key (ORG_ID, TRANSACTION_TYPE, RULE_CODE);
alter table GLAS_RULE_SETUPHD_T
  add constraint FK_RULE_HD_TR foreign key (ORG_ID, TRANSACTION_TYPE)
  references GLAS_RULE_TR_TYPE_T (ORG_ID, TRANSACTION_TYPE);

prompt
prompt Creating table GLAS_RULE_SETUP_COND_T
prompt =====================================
prompt
create table GLAS_RULE_SETUP_COND_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  rule_code        NUMBER not null,
  condition_code   NUMBER not null,
  cond_operator    VARCHAR2(10),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_SETUP_COND_T
  add constraint PK_RULE_COND primary key (ORG_ID, TRANSACTION_TYPE, RULE_CODE, CONDITION_CODE);
alter table GLAS_RULE_SETUP_COND_T
  add constraint FK_RULE_COND_HD foreign key (ORG_ID, TRANSACTION_TYPE, RULE_CODE)
  references GLAS_RULE_SETUPHD_T (ORG_ID, TRANSACTION_TYPE, RULE_CODE);

prompt
prompt Creating table GLAS_RULE_SETUP_GROUP_T
prompt ======================================
prompt
create table GLAS_RULE_SETUP_GROUP_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  rule_code        NUMBER not null,
  group_code       VARCHAR2(4000) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_RULE_SETUP_GROUP_T
  add constraint PK_RULE_DTL primary key (ORG_ID, TRANSACTION_TYPE, RULE_CODE, GROUP_CODE);
alter table GLAS_RULE_SETUP_GROUP_T
  add constraint FK_RULE_DTL_HD foreign key (ORG_ID, TRANSACTION_TYPE, RULE_CODE)
  references GLAS_RULE_SETUPHD_T (ORG_ID, TRANSACTION_TYPE, RULE_CODE);

prompt
prompt Creating table GLAS_SERVICE_PROVIDER_T
prompt ======================================
prompt
create table GLAS_SERVICE_PROVIDER_T
(
  org_id           NUMBER not null,
  sp_code          NUMBER not null,
  sp_desc          VARCHAR2(500),
  sp_short_desc    VARCHAR2(50),
  address          VARCHAR2(200),
  email            VARCHAR2(500),
  phone            VARCHAR2(15),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  limit            NUMBER(15,2),
  ntn              VARCHAR2(10),
  sp_type          VARCHAR2(10),
  sp_reference_no  VARCHAR2(10),
  blacklist        VARCHAR2(1)
)
;
alter table GLAS_SERVICE_PROVIDER_T
  add constraint PK_SP_SETUP_T primary key (ORG_ID, SP_CODE);
alter table GLAS_SERVICE_PROVIDER_T
  add constraint FK_SP_SETUP_T_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_SUB_BENEFITS_T
prompt ==================================
prompt
create table GLAS_SUB_BENEFITS_T
(
  org_id           NUMBER not null,
  benefit_code     NUMBER not null,
  sub_benefit_code NUMBER not null,
  sub_benefit_desc VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  application_id   NUMBER not null,
  is_room_limit    VARCHAR2(2)
)
;
alter table GLAS_SUB_BENEFITS_T
  add constraint GLAS_SUB_BENEFITS_T_PK primary key (ORG_ID, APPLICATION_ID, BENEFIT_CODE, SUB_BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PRODUCT_CHARGES_T
prompt =========================================
prompt
create table GLAS_SUB_PRODUCT_CHARGES_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  charge_code       NUMBER not null,
  charge_rate       NUMBER(9,6),
  charge_flat_amt   NUMBER(15,2),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  frequency_code    VARCHAR2(2),
  default_tag       VARCHAR2(1),
  mandatory_tag     VARCHAR2(1),
  chargeable_tag    VARCHAR2(1),
  apply_on          VARCHAR2(1),
  max_amount        NUMBER,
  min_amount        NUMBER
)
;
alter table GLAS_SUB_PRODUCT_CHARGES_T
  add constraint PK_SUB_PR_CHARGES_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, CHARGE_CODE);
alter table GLAS_SUB_PRODUCT_CHARGES_T
  add constraint FK_SUB_PR_SUB_PR_CHRG foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);
alter table GLAS_SUB_PRODUCT_CHARGES_T
  add constraint FK_SUB_PR_SUB_PR_CHRG_CHRG foreign key (ORG_ID, CHARGE_CODE)
  references TK_CHARGES_SETUP_T (ORG_ID, CHARGE_CODE);

prompt
prompt Creating table GLAS_SUB_PRODUCT_FUND_T
prompt ======================================
prompt
create table GLAS_SUB_PRODUCT_FUND_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  fund_code            NUMBER not null,
  fund_share           NUMBER(9,6),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  effective_end_date   DATE,
  effective_start_date DATE,
  fund_share_max       NUMBER(9,6),
  default_tag          VARCHAR2(5)
)
;
alter table GLAS_SUB_PRODUCT_FUND_T
  add constraint PK_SUB_PROD_FUND primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, FUND_CODE);
alter table GLAS_SUB_PRODUCT_FUND_T
  add constraint FK_SB_PROD_FUND_FUND foreign key (ORG_ID, FUND_CODE)
  references FUND_SETUP_T (ORG_ID, FUND_CODE);
alter table GLAS_SUB_PRODUCT_FUND_T
  add constraint FK_SB_PROD_FUND_PROD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PRODUCT_GL_ACCOUNT_T
prompt ============================================
prompt
create table GLAS_SUB_PRODUCT_GL_ACCOUNT_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  mapping_code      VARCHAR2(50) not null,
  gl_code           VARCHAR2(50) not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PRODUCT_GL_ACCOUNT_T
  add constraint PK_SUB_PR_GL_CODE_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, MAPPING_CODE, GL_CODE);
alter table GLAS_SUB_PRODUCT_GL_ACCOUNT_T
  add constraint FK_SUB_PR_SUB_PR_GL foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PRODUCT_RATE_T
prompt ======================================
prompt
create table GLAS_SUB_PRODUCT_RATE_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  type_id           NUMBER not null,
  no_of_years       NUMBER not null,
  rate              NUMBER,
  created_by        VARCHAR2(100),
  creation_date     DATE,
  last_updated_by   VARCHAR2(100),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PRODUCT_RATE_T
  add constraint PK_SUB_PROD_RATE primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TYPE_ID, NO_OF_YEARS);
alter table GLAS_SUB_PRODUCT_RATE_T
  add constraint FK_SB_PROD_RATE_PROD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_BENEFIT_MAP_T
prompt ==========================================
prompt
create table GLAS_SUB_PROD_BENEFIT_MAP_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  benefit_code         NUMBER not null,
  mapping_type         VARCHAR2(2),
  default_tag          VARCHAR2(1),
  class_type           VARCHAR2(2),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  post_retirement      VARCHAR2(1),
  remarks              VARCHAR2(200),
  display_order        NUMBER,
  min_sa               NUMBER,
  max_sa               NUMBER,
  min_age              NUMBER,
  max_age              NUMBER,
  chargable            VARCHAR2(1),
  built_in             VARCHAR2(1),
  min_term             NUMBER,
  max_term             NUMBER,
  maturity_age         NUMBER,
  attachment           VARCHAR2(4000),
  term_wise_tag        VARCHAR2(1),
  sar_on               VARCHAR2(1),
  group_code           VARCHAR2(50),
  loading_factor_type  NUMBER,
  loading_factor_value NUMBER,
  indexation_on        VARCHAR2(1),
  calculation_order    NUMBER,
  wakala_percent       NUMBER,
  sa_type              VARCHAR2(20),
  min_sa_cap           NUMBER,
  max_sa_cap           NUMBER,
  min_rider_term       NUMBER,
  max_rider_term       NUMBER,
  min_payment_term     NUMBER,
  max_payment_term     NUMBER,
  cont_rate_basis      VARCHAR2(1),
  benefit_term_type    VARCHAR2(4),
  max_days_hca         NUMBER,
  applicable_life      NUMBER,
  percent_calc_basis   VARCHAR2(2)
)
;
alter table GLAS_SUB_PROD_BENEFIT_MAP_T
  add constraint PK_SUB_PR_BENEF_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);
alter table GLAS_SUB_PROD_BENEFIT_MAP_T
  add constraint FK_SUB_PR_SUB_PR_BENEFIT foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_BENEFIT_QUES_T
prompt ===========================================
prompt
create table GLAS_SUB_PROD_BENEFIT_QUES_T
(
  org_id            NUMBER,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  benefit_code      NUMBER,
  question_id       NUMBER,
  question_type     VARCHAR2(20),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  display_order     NUMBER
)
;

prompt
prompt Creating table GLAS_SUB_PROD_BENEFIT_RATES_T
prompt ============================================
prompt
create table GLAS_SUB_PROD_BENEFIT_RATES_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  benefit_code      NUMBER not null,
  rate_code         NUMBER not null,
  sum_insured_from  NUMBER,
  gender            VARCHAR2(5),
  smoker_type       VARCHAR2(1),
  class_code        VARCHAR2(10),
  rate              NUMBER(9,6),
  flat_amount       NUMBER(15,2),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  sum_insured_to    NUMBER,
  age_to            NUMBER,
  age_from          NUMBER,
  mortality_rate    NUMBER
)
;
alter table GLAS_SUB_PROD_BENEFIT_RATES_T
  add constraint PK_BF_RATES primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, RATE_CODE);
alter table GLAS_SUB_PROD_BENEFIT_RATES_T
  add constraint FK_BF_RATES_PRODUCT foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_BENF_QUES_T
prompt ========================================
prompt
create table GLAS_SUB_PROD_BENF_QUES_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  benefit_code      NUMBER not null,
  question_id       NUMBER not null,
  question_type     VARCHAR2(20),
  display_order     NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_BENF_QUES_T
  add constraint PK_GLAS_SUB_PROD_BENEF_QUES_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, QUESTION_ID);

prompt
prompt Creating table GLAS_SUB_PROD_BEN_HCA_AMT_T
prompt ==========================================
prompt
create table GLAS_SUB_PROD_BEN_HCA_AMT_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  benefit_code      NUMBER not null,
  serial_no         NUMBER not null,
  daily_amount      NUMBER,
  default_tag       VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_BEN_HCA_AMT_T
  add constraint PK_SUB_PROD_BEN_HCA_MAP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, SERIAL_NO);
alter table GLAS_SUB_PROD_BEN_HCA_AMT_T
  add constraint FK_SUB_PROD_BEN_HCA_MAP_BEN foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_BEN_RIDER_MAP_T
prompt ============================================
prompt
create table GLAS_SUB_PROD_BEN_RIDER_MAP_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  benefit_code       NUMBER not null,
  rider_mapping_code NUMBER not null,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_SUB_PROD_BEN_RIDER_MAP_T
  add constraint PK_SUB_PROD_BEN_RIDER_MAP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, RIDER_MAPPING_CODE);
alter table GLAS_SUB_PROD_BEN_RIDER_MAP_T
  add constraint FK_SUB_PROD_BEN_RIDER_MAP_BEN foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_BNF_SA_T
prompt =====================================
prompt
create table GLAS_SUB_PROD_BNF_SA_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  benefit_code      NUMBER not null,
  sa_percent        NUMBER not null,
  default_tag       VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_BNF_SA_T
  add constraint PK_SUB_PR_BNF_SA_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, SA_PERCENT);
alter table GLAS_SUB_PROD_BNF_SA_T
  add constraint FK_SUB_PR_BNF_SA_BENEFIT foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_EXP_MARGIN_HD_T
prompt ============================================
prompt
create table GLAS_SUB_PROD_EXP_MARGIN_HD_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  hd_code           NUMBER not null,
  volume_size_from  NUMBER,
  volume_size_to    NUMBER,
  minimum_loading   NUMBER,
  remarks           VARCHAR2(250),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_EXP_MARGIN_HD_T
  add constraint PK_SUB_PROD_EXP_MARGIN_HD primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);
alter table GLAS_SUB_PROD_EXP_MARGIN_HD_T
  add constraint FK_SUB_PR_EXP_MARGIN_HD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_EXP_MARGIN_DTL_T
prompt =============================================
prompt
create table GLAS_SUB_PROD_EXP_MARGIN_DTL_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  hd_code            NUMBER not null,
  expense_code       NUMBER not null,
  loading_percentage NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_SUB_PROD_EXP_MARGIN_DTL_T
  add constraint PK_SUB_PROD_EXP_MARGIN_DTL primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE, EXPENSE_CODE);
alter table GLAS_SUB_PROD_EXP_MARGIN_DTL_T
  add constraint FK_SUB_PR_EXP_MARGIN_CODE foreign key (ORG_ID, EXPENSE_CODE)
  references GLAS_EXPENSE_MARGIN_SETUP_T (ORG_ID, MARGIN_CODE);
alter table GLAS_SUB_PROD_EXP_MARGIN_DTL_T
  add constraint FK_SUB_PR_EXP_MARGIN_DTL foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE)
  references GLAS_SUB_PROD_EXP_MARGIN_HD_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_FEATURES_T
prompt =======================================
prompt
create table GLAS_SUB_PROD_FEATURES_T
(
  org_id              NUMBER not null,
  main_product_code   NUMBER not null,
  sub_product_code    NUMBER not null,
  feature_code        NUMBER not null,
  feature_description VARCHAR2(500),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  feature_value       VARCHAR2(50),
  packages_code       NUMBER,
  application_id      NUMBER
)
;
alter table GLAS_SUB_PROD_FEATURES_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, FEATURE_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_LIMIT_SH_RIDER_T
prompt =============================================
prompt
create table GLAS_SUB_PROD_LIMIT_SH_RIDER_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  benefit_code       NUMBER not null,
  rider_mapping_code NUMBER not null,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_SUB_PROD_LIMIT_SH_RIDER_T
  add constraint PK_SUB_PROD_LM_SH_RID primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, RIDER_MAPPING_CODE);
alter table GLAS_SUB_PROD_LIMIT_SH_RIDER_T
  add constraint FK_SUB_PROD_LM_SH_RID_BEN foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_MORT_RT_T
prompt ======================================
prompt
create table GLAS_SUB_PROD_MORT_RT_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  benefit_code       NUMBER not null,
  rate_code          NUMBER not null,
  m_age              NUMBER,
  m_year             NUMBER,
  m_rate             NUMBER,
  gender             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  em_rate            NUMBER,
  ri_rate            NUMBER,
  ri_em_rate         NUMBER,
  indexation_rate_id NUMBER
)
;
alter table GLAS_SUB_PROD_MORT_RT_T
  add constraint PK_SUB_PR_MORT_RT_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, RATE_CODE);
alter table GLAS_SUB_PROD_MORT_RT_T
  add constraint FK_SUB_PR_MORT_RT_BENEFIT foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_NA_CHK_HD_T
prompt ========================================
prompt
create table GLAS_SUB_PROD_NA_CHK_HD_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  header_id         NUMBER not null,
  descrition        VARCHAR2(2500),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_NA_CHK_HD_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_SUB_PROD_OTHER_CONF_T
prompt =========================================
prompt
create table GLAS_SUB_PROD_OTHER_CONF_T
(
  org_id                         NUMBER not null,
  main_product_code              NUMBER not null,
  sub_product_code               NUMBER not null,
  application_id                 NUMBER not null,
  configuration_code             NUMBER not null,
  rider_renewal_cont_rounding    NUMBER,
  rider_first_year_cont_rounding NUMBER,
  created_by                     VARCHAR2(50),
  creation_date                  DATE,
  last_updated_by                VARCHAR2(50),
  last_update_date               DATE,
  claim_amount_rounding          NUMBER,
  term_cont_rounding_type        VARCHAR2(1)
)
;
alter table GLAS_SUB_PROD_OTHER_CONF_T
  add constraint PK_GLAS_SUB_PROD_OTHER_CONF primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, APPLICATION_ID, CONFIGURATION_CODE);
alter table GLAS_SUB_PROD_OTHER_CONF_T
  add constraint FK_GLAS_SUB_PROD_OTHER_CONF foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_PACKAGES_T
prompt =======================================
prompt
create table GLAS_SUB_PROD_PACKAGES_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  packages_code        NUMBER not null,
  packages_description VARCHAR2(500),
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  packages_value       NUMBER,
  application_id       NUMBER
)
;
alter table GLAS_SUB_PROD_PACKAGES_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PACKAGES_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_P_MODE_GRACE_T
prompt ===========================================
prompt
create table GLAS_SUB_PROD_P_MODE_GRACE_T
(
  org_id            NUMBER not null,
  sub_product_code  NUMBER not null,
  payment_mode      VARCHAR2(10) not null,
  grace_period_days NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE not null
)
;
alter table GLAS_SUB_PROD_P_MODE_GRACE_T
  add constraint PK_SUBPM_GRC_SETUP_T primary key (ORG_ID, SUB_PRODUCT_CODE, PAYMENT_MODE);
alter table GLAS_SUB_PROD_P_MODE_GRACE_T
  add constraint FK_SUBP_PAYM_GRC_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_SUB_PROD_P_MODE_LOAD_T
prompt ==========================================
prompt
create table GLAS_SUB_PROD_P_MODE_LOAD_T
(
  org_id                       NUMBER not null,
  sub_product_code             NUMBER not null,
  payment_mode                 VARCHAR2(10) not null,
  loading_rate                 NUMBER(9,6),
  created_by                   VARCHAR2(50),
  creation_date                DATE,
  last_updated_by              VARCHAR2(50),
  last_update_date             DATE not null,
  flat_amount                  NUMBER,
  min_contribution             NUMBER,
  max_contribution             NUMBER,
  grace_period_days            NUMBER,
  days_renew_intimation_before NUMBER,
  days_renew_intimation_after  NUMBER,
  days_auto_renewal_topup      NUMBER
)
;
alter table GLAS_SUB_PROD_P_MODE_LOAD_T
  add constraint PK_SUBPM_LOAD_SETUP_T primary key (ORG_ID, SUB_PRODUCT_CODE, PAYMENT_MODE);
alter table GLAS_SUB_PROD_P_MODE_LOAD_T
  add constraint FK_SUBP_PAYM_LOAD_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table PF_RISK_PROFILE_FACTOR_T
prompt =======================================
prompt
create table PF_RISK_PROFILE_FACTOR_T
(
  org_id        NUMBER not null,
  factor_id     NUMBER not null,
  factor_desc   VARCHAR2(200) not null,
  active        VARCHAR2(1) not null,
  create_user   VARCHAR2(50),
  create_date   TIMESTAMP(6),
  modified_user VARCHAR2(50),
  modified_date TIMESTAMP(6),
  display_order NUMBER
)
;
alter table PF_RISK_PROFILE_FACTOR_T
  add constraint PF_RISK_PROFILE_FACTOR_T_PK primary key (ORG_ID, FACTOR_ID);
alter table PF_RISK_PROFILE_FACTOR_T
  add foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table PF_RISK_PROF_QUESTION_SETUP_T
prompt ============================================
prompt
create table PF_RISK_PROF_QUESTION_SETUP_T
(
  org_id                 NUMBER not null,
  question_id            NUMBER not null,
  question_desc          VARCHAR2(1000),
  risk_profile_factor_id NUMBER not null,
  maximum_score          NUMBER,
  active                 VARCHAR2(1) not null,
  create_user            VARCHAR2(50),
  create_date            TIMESTAMP(6),
  modified_user          VARCHAR2(50),
  modified_date          TIMESTAMP(6),
  valueset_id            NUMBER,
  question_type          VARCHAR2(50),
  question_display_type  VARCHAR2(1),
  sub_standard_on        VARCHAR2(10),
  remarks_on             VARCHAR2(1),
  other_language_desc    NVARCHAR2(2000),
  display_order          NUMBER,
  child_question_on      VARCHAR2(1),
  child_question_id      NUMBER,
  application_id         NUMBER,
  db_feild_name          VARCHAR2(150),
  visible_for_gender     VARCHAR2(1)
)
;
alter table PF_RISK_PROF_QUESTION_SETUP_T
  add constraint PK_RISK_PROF_QUE primary key (ORG_ID, QUESTION_ID);
alter table PF_RISK_PROF_QUESTION_SETUP_T
  add foreign key (ORG_ID, RISK_PROFILE_FACTOR_ID)
  references PF_RISK_PROFILE_FACTOR_T (ORG_ID, FACTOR_ID);

prompt
prompt Creating table GLAS_SUB_PROD_QUESTIONS_T
prompt ========================================
prompt
create table GLAS_SUB_PROD_QUESTIONS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  question_id       NUMBER not null,
  question_type     VARCHAR2(20),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  display_order     NUMBER
)
;
alter table GLAS_SUB_PROD_QUESTIONS_T
  add constraint PK_SUB_PROD_QUEST_MP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, QUESTION_ID);
alter table GLAS_SUB_PROD_QUESTIONS_T
  add constraint FK_RISK_PROF_QUE_PROD foreign key (ORG_ID, QUESTION_ID)
  references PF_RISK_PROF_QUESTION_SETUP_T (ORG_ID, QUESTION_ID);

prompt
prompt Creating table GLAS_SUB_PROD_REFUND_PREM_HD_T
prompt =============================================
prompt
create table GLAS_SUB_PROD_REFUND_PREM_HD_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  hd_code              NUMBER not null,
  remarks              VARCHAR2(250),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table GLAS_SUB_PROD_REFUND_PREM_HD_T
  add constraint PK_SUB_PROD_REFUND_PREM_HD primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);
alter table GLAS_SUB_PROD_REFUND_PREM_HD_T
  add constraint FK_SUB_PR_REFUND_PR_HD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_REFUND_PRM_DTL_T
prompt =============================================
prompt
create table GLAS_SUB_PROD_REFUND_PRM_DTL_T
(
  org_id                 NUMBER not null,
  main_product_code      NUMBER not null,
  sub_product_code       NUMBER not null,
  hd_code                NUMBER not null,
  dtl_code               NUMBER not null,
  attained_period        NUMBER,
  refund_prem_percentage NUMBER,
  effective_start_date   DATE,
  effective_end_date     DATE,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table GLAS_SUB_PROD_REFUND_PRM_DTL_T
  add constraint PK_SUB_PROD_REFUND_PREM_DTL primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE, DTL_CODE);
alter table GLAS_SUB_PROD_REFUND_PRM_DTL_T
  add constraint FK_SUB_PR_REFUND_PR_DTL foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE)
  references GLAS_SUB_PROD_REFUND_PREM_HD_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);

prompt
prompt Creating table GLAS_SUB_PROD_UNDWT_CHECKS_T
prompt ===========================================
prompt
create table GLAS_SUB_PROD_UNDWT_CHECKS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  check_type        NUMBER not null,
  value_type        VARCHAR2(1),
  standard_value1   NUMBER,
  standard_value2   NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_SUB_PROD_UNDWT_CHECKS_T
  add constraint PK_SUB_PROD_UNDWT_CHECKS primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, CHECK_TYPE);
alter table GLAS_SUB_PROD_UNDWT_CHECKS_T
  add constraint FK_SUB_PR_UNDWT_PR foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GLAS_SUB_SCHEME_SETUP_T
prompt ======================================
prompt
create table GLAS_SUB_SCHEME_SETUP_T
(
  org_id           NUMBER not null,
  scheme_code      NUMBER not null,
  sub_scheme_code  NUMBER not null,
  description      VARCHAR2(500),
  short_desc       VARCHAR2(50),
  active           VARCHAR2(1),
  percentage       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_SUB_SCHEME_SETUP_T
  add constraint PK_SUB_SCHEME_SETUP primary key (ORG_ID, SCHEME_CODE, SUB_SCHEME_CODE);
alter table GLAS_SUB_SCHEME_SETUP_T
  add constraint FK_SUB_SCHEME_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_TREATY_BENEFIT_MAPPING_T
prompt ============================================
prompt
create table GLAS_TREATY_BENEFIT_MAPPING_T
(
  org_id              NUMBER not null,
  treaty_code         NUMBER not null,
  treaty_detail_code  NUMBER not null,
  benefit_code        NUMBER not null,
  rate_based_on       VARCHAR2(10),
  basic_benefit_tag   VARCHAR2(1),
  fcl_tag             VARCHAR2(1),
  quota_share         NUMBER(9,6),
  company_retention   NUMBER(15,2),
  commission_rate     NUMBER(9,6),
  age_from            NUMBER(3),
  age_to              NUMBER(3),
  age_from_renewal    NUMBER(3),
  payment_basis       VARCHAR2(2),
  si_percent          NUMBER,
  salary_percent      NUMBER,
  max_amount          NUMBER,
  min_amount          NUMBER,
  waiting_period_days NUMBER,
  benefit_period_days NUMBER,
  scheme_code         NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  amount_limit_type   VARCHAR2(10),
  quota_share_limit   NUMBER(15,2),
  treaty_limit        NUMBER(15,2),
  max_age_renewal     NUMBER,
  charge_rate_type    VARCHAR2(3)
)
;
alter table GLAS_TREATY_BENEFIT_MAPPING_T
  add constraint PK_TREATY_BENIFIT_MAP primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_TREATY_BENEFIT_RATES_T
prompt ==========================================
prompt
create table GLAS_TREATY_BENEFIT_RATES_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  rate_code          NUMBER not null,
  sum_insured_from   NUMBER,
  gender             VARCHAR2(5),
  smoker_type        VARCHAR2(1),
  class_code         VARCHAR2(10),
  rate               NUMBER(9,6),
  flat_amount        NUMBER(15,2),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  sum_insured_to     NUMBER,
  age_to             NUMBER,
  age_from           NUMBER,
  mortality_rate     NUMBER
)
;
alter table GLAS_TREATY_BENEFIT_RATES_T
  add constraint PK_TREATY_BENIFIT_LOAD primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, RATE_CODE);
alter table GLAS_TREATY_BENEFIT_RATES_T
  add constraint FK_TREATY_BENIFIT_LOAD_BENEFIT foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  references GLAS_TREATY_BENEFIT_MAPPING_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_TREATY_BENF_CTRY_LOAD_T
prompt ===========================================
prompt
create table GLAS_TREATY_BENF_CTRY_LOAD_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  country_code       NUMBER not null,
  active             VARCHAR2(1),
  rate               NUMBER(9,6),
  flat_amount        NUMBER(15,2),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_BENF_CTRY_LOAD_T
  add constraint PK_TREATY_BENF_CTRY_LOAD primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, COUNTRY_CODE);
alter table GLAS_TREATY_BENF_CTRY_LOAD_T
  add constraint FK_TREATY_BENF_CTRY_LOAD foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  references GLAS_TREATY_BENEFIT_MAPPING_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  novalidate;

prompt
prompt Creating table GLAS_TREATY_BENF_FORMULA_T
prompt =========================================
prompt
create table GLAS_TREATY_BENF_FORMULA_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  formula_code       NUMBER not null,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_BENF_FORMULA_T
  add constraint PK_TREATY_BENF_FORMULA primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, FORMULA_CODE);
alter table GLAS_TREATY_BENF_FORMULA_T
  add constraint FK_TREATY_BENF_FORMULA_BENF foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  references GLAS_TREATY_BENEFIT_MAPPING_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE);
alter table GLAS_TREATY_BENF_FORMULA_T
  add constraint FK_TREATY_BENF_FORMULA_FRM foreign key (ORG_ID, FORMULA_CODE)
  references GLAS_FORMULA_SETUP_T (ORG_ID, FORMULA_CODE);

prompt
prompt Creating table GLAS_TREATY_BENF_LOADING_T
prompt =========================================
prompt
create table GLAS_TREATY_BENF_LOADING_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  class_code         NUMBER not null,
  active             VARCHAR2(1),
  rate               NUMBER(9,6),
  flat_amount        NUMBER(15,2),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_BENF_LOADING_T
  add constraint PK_TREATY_BENF_LOADING primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, CLASS_CODE);
alter table GLAS_TREATY_BENF_LOADING_T
  add constraint FK_TREATY_BENF_LOADING_BENF foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  references GLAS_TREATY_BENEFIT_MAPPING_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  novalidate;

prompt
prompt Creating table GLAS_TREATY_BEN_REQ_MAP_T
prompt ========================================
prompt
create table GLAS_TREATY_BEN_REQ_MAP_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  hd_code            NUMBER not null,
  undwt_basis        VARCHAR2(1) not null,
  sum_insured_from   INTEGER,
  sum_insured_to     NUMBER not null,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  display_order      NUMBER
)
;
alter table GLAS_TREATY_BEN_REQ_MAP_T
  add constraint GLAS_TREATY__BEN_REQ_MAP_T_PK primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, HD_CODE);
alter table GLAS_TREATY_BEN_REQ_MAP_T
  add constraint FK_TREATY_BEN_REQ_BENEFIT foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE)
  references GLAS_TREATY_BENEFIT_MAPPING_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE);

prompt
prompt Creating table GLAS_TREATY_BEN_REQ_DTL_MAP_T
prompt ============================================
prompt
create table GLAS_TREATY_BEN_REQ_DTL_MAP_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  hd_code            NUMBER not null,
  dtl_code           NUMBER not null,
  age_to             NUMBER(3),
  age_from           NUMBER,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  uw_code            VARCHAR2(5),
  display_order      NUMBER
)
;
alter table GLAS_TREATY_BEN_REQ_DTL_MAP_T
  add constraint GLAS_TRT_BEN_REQ_DTL_MAP_T_PK primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, HD_CODE, DTL_CODE);
alter table GLAS_TREATY_BEN_REQ_DTL_MAP_T
  add constraint FK_TREATY_BEN_REQ_DTL foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, HD_CODE)
  references GLAS_TREATY_BEN_REQ_MAP_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, HD_CODE);

prompt
prompt Creating table GLAS_TREATY_BNFT_SA_AGE_RATES
prompt ============================================
prompt
create table GLAS_TREATY_BNFT_SA_AGE_RATES
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  benefit_code       NUMBER not null,
  rate_code          NUMBER not null,
  rate_sa_code       NUMBER not null,
  age_to             NUMBER,
  age_from           NUMBER,
  gender             VARCHAR2(5),
  smoker_type        VARCHAR2(1),
  rate               NUMBER(9,6),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  mortality_rate     NUMBER
)
;
alter table GLAS_TREATY_BNFT_SA_AGE_RATES
  add constraint PK_TREATY_BENIFIT_RATE_SA primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, RATE_CODE, RATE_SA_CODE);
alter table GLAS_TREATY_BNFT_SA_AGE_RATES
  add constraint FK_TREATY_BENIFIT_RATE_SA foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, RATE_CODE)
  references GLAS_TREATY_BENEFIT_RATES_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BENEFIT_CODE, RATE_CODE);

prompt
prompt Creating table GLAS_TREATY_BROKER_COMM_T
prompt ========================================
prompt
create table GLAS_TREATY_BROKER_COMM_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  broker_code        NUMBER not null,
  comm_payable       NUMBER(7,4),
  based_on           VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_BROKER_COMM_T
  add constraint PK_TREATY_BROKER_SETUP primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, BROKER_CODE);

prompt
prompt Creating table GLAS_TREATY_FCL_T
prompt ================================
prompt
create table GLAS_TREATY_FCL_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  fcl_code           NUMBER not null,
  lives_from         NUMBER,
  lives_to           NUMBER,
  factor             NUMBER(9,6),
  max_limit          NUMBER(15,2),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_FCL_T
  add constraint PK_TREATY_FCL primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, FCL_CODE);
alter table GLAS_TREATY_FCL_T
  add constraint FK_TREATY_FCL_TREATY foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE)
  references GLAS_TREATY_DTL_SETUP_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE);

prompt
prompt Creating table GLAS_TREATY_INSU_POOL_MAP_T
prompt ==========================================
prompt
create table GLAS_TREATY_INSU_POOL_MAP_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  pool_code          NUMBER not null,
  reinsurer_code     NUMBER(*,4),
  pool_share         NUMBER(7,4),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_TREATY_INSU_POOL_MAP_T
  add constraint PK_TREATY_INSURER_POOL_SETUP primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, POOL_CODE);
alter table GLAS_TREATY_INSU_POOL_MAP_T
  add constraint FK_TREATY_INSURER_POOL_K foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_TREATY_REQ_DTL_MAP_T
prompt ========================================
prompt
create table GLAS_TREATY_REQ_DTL_MAP_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  hd_code            NUMBER not null,
  dtl_code           NUMBER not null,
  age_to             NUMBER(3),
  age_from           NUMBER,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  uw_code            VARCHAR2(5),
  display_order      NUMBER
)
;
alter table GLAS_TREATY_REQ_DTL_MAP_T
  add constraint GLAS_TREATY_REQ_DTL_MAP_T_PK primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, HD_CODE, DTL_CODE);

prompt
prompt Creating table GLAS_TREATY_REQ_MAP_T
prompt ====================================
prompt
create table GLAS_TREATY_REQ_MAP_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  hd_code            NUMBER not null,
  undwt_basis        VARCHAR2(1) not null,
  sum_insured_from   INTEGER,
  sum_insured_to     NUMBER not null,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  display_order      NUMBER
)
;
alter table GLAS_TREATY_REQ_MAP_T
  add constraint GLAS_TREATY_REQ_MAP_T_PK primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, HD_CODE);
alter table GLAS_TREATY_REQ_MAP_T
  add constraint FK_TREATY_REQ_MAP_TREATY foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE)
  references GLAS_TREATY_DTL_SETUP_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE);

prompt
prompt Creating table GLAS_TREATY_VOL_DISC_T
prompt =====================================
prompt
create table GLAS_TREATY_VOL_DISC_T
(
  org_id             NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  discount_code      NUMBER not null,
  mapping_type       VARCHAR2(1),
  no_of_lives_from   NUMBER,
  discount_new       NUMBER,
  discount_renewal   NUMBER,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  no_of_lives_to     NUMBER
)
;
alter table GLAS_TREATY_VOL_DISC_T
  add constraint PK_TREATY_VOL_DISC primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, DISCOUNT_CODE);
alter table GLAS_TREATY_VOL_DISC_T
  add constraint FK_TREATY_VOL_DISC_TREATY foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE)
  references GLAS_TREATY_DTL_SETUP_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE);

prompt
prompt Creating table GLAS_TREATY_VOL_DISC_DTL_T
prompt =========================================
prompt
create table GLAS_TREATY_VOL_DISC_DTL_T
(
  org_id               NUMBER not null,
  treaty_code          NUMBER not null,
  treaty_detail_code   NUMBER not null,
  discount_code        NUMBER not null,
  discount_detail_code NUMBER not null,
  benefit_type_code    NUMBER,
  discount_new         NUMBER,
  discount_renewal     NUMBER,
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table GLAS_TREATY_VOL_DISC_DTL_T
  add constraint PK_TREATY_VOL_DTL_DISC primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, DISCOUNT_CODE, DISCOUNT_DETAIL_CODE);
alter table GLAS_TREATY_VOL_DISC_DTL_T
  add constraint FK_TREATY_VOL_DISC_DTL_TREATY foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, DISCOUNT_CODE)
  references GLAS_TREATY_VOL_DISC_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE, DISCOUNT_CODE);

prompt
prompt Creating table GLAS_UNDWT_REQ_SETUP_T
prompt =====================================
prompt
create table GLAS_UNDWT_REQ_SETUP_T
(
  org_id           NUMBER not null,
  req_code         NUMBER not null,
  req_type_code    NUMBER,
  description      VARCHAR2(500),
  short_desc       VARCHAR2(50),
  remarks          VARCHAR2(500),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  attached_file    VARCHAR2(200),
  application_id   NUMBER
)
;
alter table GLAS_UNDWT_REQ_SETUP_T
  add constraint PK_UND_REQ_SETUP primary key (ORG_ID, REQ_CODE);
alter table GLAS_UNDWT_REQ_SETUP_T
  add constraint FK_UND_REQ_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_UNDWT_REQ_DTL_SETUP_T
prompt =========================================
prompt
create table GLAS_UNDWT_REQ_DTL_SETUP_T
(
  org_id            NUMBER not null,
  req_code          NUMBER not null,
  req_dtl_code      NUMBER not null,
  description       VARCHAR2(1000),
  short_desc        VARCHAR2(50),
  remarks           VARCHAR2(500),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  attachment        VARCHAR2(4000),
  medical_test_code NUMBER
)
;
alter table GLAS_UNDWT_REQ_DTL_SETUP_T
  add constraint PK_UND_REQ_DTL_SETUP primary key (ORG_ID, REQ_CODE, REQ_DTL_CODE);
alter table GLAS_UNDWT_REQ_DTL_SETUP_T
  add constraint FK_UND_REQ_DTL_SETUP_REQ foreign key (ORG_ID, REQ_CODE)
  references GLAS_UNDWT_REQ_SETUP_T (ORG_ID, REQ_CODE);

prompt
prompt Creating table GL_ACCOUNT_ADVICE_MAPING_T
prompt =========================================
prompt
create table GL_ACCOUNT_ADVICE_MAPING_T
(
  org_id           NUMBER not null,
  bank_code        NUMBER not null,
  branch_code      NUMBER not null,
  account_code     VARCHAR2(30) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  voucher_code     VARCHAR2(50) not null
)
;
alter table GL_ACCOUNT_ADVICE_MAPING_T
  add constraint GL_ACCOUNT_ADVICE_T_PK primary key (ORG_ID, BANK_CODE, BRANCH_CODE, ACCOUNT_CODE, VOUCHER_CODE);

prompt
prompt Creating table GL_ACCOUNT_MATRIX_HD_T
prompt =====================================
prompt
create table GL_ACCOUNT_MATRIX_HD_T
(
  org_id           NUMBER not null,
  matrix_id        VARCHAR2(50) not null,
  matrix_desc      VARCHAR2(200),
  advice_code      VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  module_code      VARCHAR2(10),
  reversal_tag     VARCHAR2(1)
)
;
alter table GL_ACCOUNT_MATRIX_HD_T
  add constraint PK_GL_ACCOUNT_MATRIX_HD_T primary key (ORG_ID, MATRIX_ID);

prompt
prompt Creating table GL_ACCOUNT_MATRIX_DTL_T
prompt ======================================
prompt
create table GL_ACCOUNT_MATRIX_DTL_T
(
  org_id               NUMBER not null,
  matrix_detail_id     NUMBER not null,
  matrix_id            VARCHAR2(50),
  matrix_detail_desc   VARCHAR2(250),
  coa_code_debit       VARCHAR2(20),
  coa_code_credit      VARCHAR2(20),
  variable_name        VARCHAR2(50),
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  subledger_type       VARCHAR2(30),
  subledger_code       VARCHAR2(50),
  ignore_zero_variable VARCHAR2(1),
  variable_extra_keys  VARCHAR2(500),
  ignore_knockoff      VARCHAR2(1),
  display_order        NUMBER,
  ignore_kockoff       VARCHAR2(1)
)
;
alter table GL_ACCOUNT_MATRIX_DTL_T
  add constraint PK_GL_ACCOUNT_MATRIX_DTL_T primary key (ORG_ID, MATRIX_DETAIL_ID);
alter table GL_ACCOUNT_MATRIX_DTL_T
  add constraint FK_ACCOUNT_MD_COA_CODE_CREDIT foreign key (COA_CODE_CREDIT, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);
alter table GL_ACCOUNT_MATRIX_DTL_T
  add constraint FK_ACCOUNT_MD_COA_CODE_DEBIT foreign key (COA_CODE_DEBIT, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);
alter table GL_ACCOUNT_MATRIX_DTL_T
  add constraint FK_ACCOUNT_MD_MATRIX_ID foreign key (ORG_ID, MATRIX_ID)
  references GL_ACCOUNT_MATRIX_HD_T (ORG_ID, MATRIX_ID);

prompt
prompt Creating table GL_ACCOUNT_MATRIX_SL_VALUES_T
prompt ============================================
prompt
create table GL_ACCOUNT_MATRIX_SL_VALUES_T
(
  org_id           NUMBER not null,
  matrix_detail_id NUMBER not null,
  matrix_id        CHAR(50) not null,
  variable_name    VARCHAR2(50) not null,
  ref_key          VARCHAR2(200) not null,
  sl_type          VARCHAR2(50) not null,
  sl_code          VARCHAR2(50) not null,
  variable_value   VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_ACCOUNT_MATRIX_SL_VALUES_T
  add constraint PK_GL_ACCOUNT_MATRIX_SL_VAL_T primary key (ORG_ID, MATRIX_ID, MATRIX_DETAIL_ID, VARIABLE_NAME, REF_KEY, SL_TYPE, SL_CODE);

prompt
prompt Creating table GL_ACCOUNT_MATRIX_VALUES_T
prompt =========================================
prompt
create table GL_ACCOUNT_MATRIX_VALUES_T
(
  org_id           NUMBER not null,
  matrix_detail_id NUMBER not null,
  matrix_id        VARCHAR2(50) not null,
  variable_name    VARCHAR2(50) not null,
  ref_key          VARCHAR2(200) not null,
  variable_value   VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_ACCOUNT_MATRIX_VALUES_T
  add constraint PK_GL_ACCOUNT_MATRIX_VAL_T primary key (ORG_ID, MATRIX_ID, MATRIX_DETAIL_ID, VARIABLE_NAME, REF_KEY);

prompt
prompt Creating table GL_ADVICE_APPROVAL_HISTORY_T
prompt ===========================================
prompt
create table GL_ADVICE_APPROVAL_HISTORY_T
(
  org_id          NUMBER not null,
  branch_id       NUMBER not null,
  advice_type     VARCHAR2(10) not null,
  fiscal_year     VARCHAR2(10) not null,
  advice_no       VARCHAR2(10) not null,
  s_no            NUMBER not null,
  action_type     VARCHAR2(20),
  action          VARCHAR2(1),
  action_by       VARCHAR2(50),
  action_date     DATE,
  action_comments VARCHAR2(500)
)
;
alter table GL_ADVICE_APPROVAL_HISTORY_T
  add constraint GL_VOUCHER_ADVICE_HISTORY_PK primary key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO, S_NO);

prompt
prompt Creating table GL_ADVICE_ATTACHMENT_T
prompt =====================================
prompt
create table GL_ADVICE_ATTACHMENT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  advice_type      VARCHAR2(10) not null,
  fiscal_year      VARCHAR2(10) not null,
  advice_no        VARCHAR2(10) not null,
  attachment_no    NUMBER not null,
  description      VARCHAR2(200),
  attachment       VARCHAR2(250),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_ADVICE_ATTACHMENT_T
  add constraint GL_ADVICE_ATTACHMENT_NO_T_PK primary key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO, ATTACHMENT_NO);

prompt
prompt Creating table GL_ADVICE_TYPE_T
prompt ===============================
prompt
create table GL_ADVICE_TYPE_T
(
  org_id              NUMBER not null,
  advice_description  VARCHAR2(100) not null,
  advice_type         VARCHAR2(10) not null,
  advice_payment_type VARCHAR2(10) not null,
  target_voucher_type VARCHAR2(10) not null,
  active              VARCHAR2(1) not null,
  created_by          VARCHAR2(50),
  creation_date       TIMESTAMP(6),
  last_updated_by     VARCHAR2(50),
  last_update_date    TIMESTAMP(6),
  auto_tag            VARCHAR2(1),
  knockoff_tag        VARCHAR2(1),
  advice_group        VARCHAR2(10)
)
;
alter table GL_ADVICE_TYPE_T
  add constraint PK_ADVICE_TYPE primary key (ORG_ID, ADVICE_TYPE);

prompt
prompt Creating table GL_ADVICE_HEADER_T
prompt =================================
prompt
create table GL_ADVICE_HEADER_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  advice_type             VARCHAR2(10) not null,
  fiscal_year             VARCHAR2(10) not null,
  advice_no               VARCHAR2(10) not null,
  advice_date             DATE,
  advice_amount           NUMBER,
  advice_description      VARCHAR2(500),
  advice_status           VARCHAR2(1),
  verified_by             VARCHAR2(50),
  verified_date           DATE,
  approved_by             VARCHAR2(50),
  approval_date           DATE,
  voucher_ref_no          VARCHAR2(250),
  canceled_by             VARCHAR2(50),
  cancel_date             DATE,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  adjusted_amount         NUMBER,
  doc_ref_no              VARCHAR2(250),
  matrix_id               VARCHAR2(50),
  exclude_tag             VARCHAR2(1),
  reversed_tag            VARCHAR2(1),
  commission_batch_number VARCHAR2(100)
)
;
alter table GL_ADVICE_HEADER_T
  add constraint GL_ADVICE_HEADER_T_PK primary key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO);
alter table GL_ADVICE_HEADER_T
  add constraint FK_HEADER_ADVICE_TYPE foreign key (ORG_ID, ADVICE_TYPE)
  references GL_ADVICE_TYPE_T (ORG_ID, ADVICE_TYPE);

prompt
prompt Creating table GL_ADVICE_DETAIL_T
prompt =================================
prompt
create table GL_ADVICE_DETAIL_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  advice_type          VARCHAR2(10) not null,
  fiscal_year          VARCHAR2(10) not null,
  advice_no            VARCHAR2(10) not null,
  detail_sr_no         NUMBER not null,
  cost_center_code     VARCHAR2(10),
  row_description      VARCHAR2(500),
  coa_code             VARCHAR2(50),
  debit_base_curr      NUMBER,
  credit_base_curr     NUMBER,
  currency_code        VARCHAR2(10),
  exchange_rate        NUMBER,
  debit_foreign_curr   NUMBER,
  credit_foreign_curr  NUMBER,
  document_reference   VARCHAR2(500),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  instrument_type      VARCHAR2(10),
  instrument_date      DATE,
  instrument_number    VARCHAR2(50),
  instrument_narration VARCHAR2(500),
  drawn_on             VARCHAR2(200),
  policy_year          VARCHAR2(300),
  policy_no            VARCHAR2(300),
  endorsement_no       VARCHAR2(300),
  claim_no             VARCHAR2(300),
  bu                   VARCHAR2(300),
  lob                  VARCHAR2(300),
  location             VARCHAR2(300),
  employee             VARCHAR2(300),
  channel              NUMBER,
  agent                VARCHAR2(300),
  sl_type              VARCHAR2(10),
  sl_code              VARCHAR2(50),
  offset_sl_code       VARCHAR2(50),
  offset_sl_type       VARCHAR2(50),
  offset_coa_code      VARCHAR2(50),
  matrix_id            VARCHAR2(50)
)
;
alter table GL_ADVICE_DETAIL_T
  add constraint GL_ADVICE_DETAIL_T_PK primary key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO, DETAIL_SR_NO);
alter table GL_ADVICE_DETAIL_T
  add constraint GL_ADVICE_DETAIL_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);
alter table GL_ADVICE_DETAIL_T
  add constraint GL_ADVICE_DETAIL_T_FK1 foreign key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO)
  references GL_ADVICE_HEADER_T (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO);

prompt
prompt Creating table GL_ADVICE_SUB_LEDGER_T
prompt =====================================
prompt
create table GL_ADVICE_SUB_LEDGER_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  advice_type         VARCHAR2(10) not null,
  fiscal_year         VARCHAR2(10) not null,
  advice_no           VARCHAR2(10) not null,
  sl_sr_no            NUMBER not null,
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50),
  sl_type             VARCHAR2(10),
  sl_code             VARCHAR2(50),
  sl_description      VARCHAR2(500),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  document_reference  VARCHAR2(500),
  knockoff_amount     NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  ledger_description  VARCHAR2(500),
  policy_year         VARCHAR2(300),
  policy_no           VARCHAR2(300),
  endorsement_no      VARCHAR2(300),
  claim_no            VARCHAR2(300),
  bu                  VARCHAR2(300),
  lob                 VARCHAR2(300),
  location            VARCHAR2(300),
  employee            VARCHAR2(300),
  channel             NUMBER,
  agent               VARCHAR2(300),
  adjusted_amount     NUMBER,
  matrix_id           VARCHAR2(50),
  offset_sl_code      VARCHAR2(50),
  offset_sl_type      VARCHAR2(50),
  refrence_sr_no      NUMBER,
  offset_coa_code     VARCHAR2(50)
)
;
alter table GL_ADVICE_SUB_LEDGER_T
  add constraint GL_ADVICE_SUB_LEDGER_T_PK primary key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO, SL_SR_NO);
alter table GL_ADVICE_SUB_LEDGER_T
  add constraint FK_SL_ADV_TYPE foreign key (ORG_ID, ADVICE_TYPE)
  references GL_ADVICE_TYPE_T (ORG_ID, ADVICE_TYPE);
alter table GL_ADVICE_SUB_LEDGER_T
  add constraint FK_SL_TYPE foreign key (ORG_ID, SL_TYPE, SL_CODE)
  references GL_SUBLEDGER_ACCOUNTS (ORG_ID, SL_TYPE, SL_CODE);
alter table GL_ADVICE_SUB_LEDGER_T
  add constraint GL_ADVICE_SUB_LEDGER_FK1 foreign key (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO)
  references GL_ADVICE_HEADER_T (ORG_ID, BRANCH_ID, ADVICE_TYPE, FISCAL_YEAR, ADVICE_NO);
alter table GL_ADVICE_SUB_LEDGER_T
  add constraint GL_ADVICE_SUB_LEDGER_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);

prompt
prompt Creating table GL_ALT_TYPE_MATRIX_MAP_T
prompt =======================================
prompt
create table GL_ALT_TYPE_MATRIX_MAP_T
(
  org_id           NUMBER not null,
  alteration_type  VARCHAR2(20) not null,
  matrix_id        VARCHAR2(50) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  execution_order  NUMBER,
  takaful_type     VARCHAR2(20),
  application_id   NUMBER not null
)
;
alter table GL_ALT_TYPE_MATRIX_MAP_T
  add constraint GL_ALT_TYPE_MATRIX_MAP_T_PK primary key (ORG_ID, APPLICATION_ID, ALTERATION_TYPE, MATRIX_ID);

prompt
prompt Creating table GL_ALT_TYPE_USER_MAPPING_T
prompt =========================================
prompt
create table GL_ALT_TYPE_USER_MAPPING_T
(
  org_id           NUMBER not null,
  alteration_type  VARCHAR2(50) not null,
  application_id   NUMBER not null,
  serial_code      NUMBER not null,
  userid           NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_ALT_TYPE_USER_MAPPING_T
  add constraint PK_GL_ALT_USER_MAPP_T primary key (ORG_ID, ALTERATION_TYPE, APPLICATION_ID, SERIAL_CODE);

prompt
prompt Creating table GL_BALANCES_DIMENSIONS_T
prompt =======================================
prompt
create table GL_BALANCES_DIMENSIONS_T
(
  org_id              NUMBER,
  branch_id           NUMBER,
  fiscal_year         VARCHAR2(10),
  period_no           VARCHAR2(10),
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50),
  policy_no           VARCHAR2(300),
  claim_no            VARCHAR2(300),
  bu                  VARCHAR2(300),
  lob                 VARCHAR2(300),
  location            VARCHAR2(300),
  employee            VARCHAR2(300),
  channel             NUMBER,
  agent               VARCHAR2(300),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  location_temp       NUMBER
)
;
alter table GL_BALANCES_DIMENSIONS_T
  add constraint GL_BALANCES_HEADER_T_UK unique (ORG_ID, BRANCH_ID, FISCAL_YEAR, PERIOD_NO, COST_CENTER_CODE, COA_CODE, CURRENCY_CODE, POLICY_NO, CLAIM_NO, BU, LOB, LOCATION, EMPLOYEE, CHANNEL, AGENT);

prompt
prompt Creating table GL_BALANCES_HEADER_T
prompt ===================================
prompt
create table GL_BALANCES_HEADER_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  fiscal_year         VARCHAR2(10) not null,
  period_no           VARCHAR2(10) not null,
  cost_center_code    VARCHAR2(10) not null,
  coa_code            VARCHAR2(50) not null,
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10) not null,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  exchange_rate       NUMBER
)
;
alter table GL_BALANCES_HEADER_T
  add constraint GL_BALANCES_HEADER_T_PK primary key (ORG_ID, BRANCH_ID, FISCAL_YEAR, PERIOD_NO, COST_CENTER_CODE, COA_CODE, CURRENCY_CODE);
alter table GL_BALANCES_HEADER_T
  add constraint GL_BALANCES_HEADER_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);

prompt
prompt Creating table GL_BALANCES_SUBLEDGER_T
prompt ======================================
prompt
create table GL_BALANCES_SUBLEDGER_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  fiscal_year         VARCHAR2(10) not null,
  period_no           VARCHAR2(10) not null,
  cost_center_code    VARCHAR2(10) not null,
  coa_code            VARCHAR2(50) not null,
  sl_type             VARCHAR2(10) not null,
  sl_code             VARCHAR2(50) not null,
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10) not null,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  exchange_rate       NUMBER
)
;
alter table GL_BALANCES_SUBLEDGER_T
  add constraint GL_BALANCES_SUBLEDGER_T_PK primary key (ORG_ID, BRANCH_ID, FISCAL_YEAR, PERIOD_NO, COST_CENTER_CODE, COA_CODE, SL_TYPE, SL_CODE, CURRENCY_CODE);
alter table GL_BALANCES_SUBLEDGER_T
  add constraint GL_BALANCES_SUBLEDGER_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);

prompt
prompt Creating table GL_BANK_ACCOUNT_T
prompt ================================
prompt
create table GL_BANK_ACCOUNT_T
(
  org_id            NUMBER not null,
  bank_code         NUMBER not null,
  branch_code       NUMBER not null,
  account_code      VARCHAR2(30) not null,
  account_type      VARCHAR2(1),
  coa_code          VARCHAR2(30),
  account_status    VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  account_title     VARCHAR2(250),
  iban              VARCHAR2(50),
  bank_account_code VARCHAR2(50),
  bank_account_type VARCHAR2(50)
)
;
alter table GL_BANK_ACCOUNT_T
  add constraint G_BANK_ACCOUNT_T_PK primary key (BRANCH_CODE, ORG_ID, BANK_CODE, ACCOUNT_CODE);

prompt
prompt Creating table GL_BANK_RECON_SETUP_T
prompt ====================================
prompt
create table GL_BANK_RECON_SETUP_T
(
  org_id                   NUMBER not null,
  serial_no                NUMBER not null,
  show_clear_transaction   VARCHAR2(1),
  show_void_payments       VARCHAR2(1),
  allow_editing_import     VARCHAR2(1),
  matching_order1          VARCHAR2(1),
  matching_order2          VARCHAR2(1),
  tolerance_amount_manual  NUMBER,
  tolerance_percent_manual NUMBER,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  tolerance_amt_auto_rct   NUMBER,
  tolerance_per_auto_rct   NUMBER,
  tolerance_amt_auto_pay   NUMBER,
  tolerance_per_auto_pay   NUMBER,
  tolerance_amt_auto_cash  NUMBER,
  tolerance_per_auto_cash  NUMBER,
  bank_charges_gl_code     VARCHAR2(50)
)
;
alter table GL_BANK_RECON_SETUP_T
  add constraint PK_BANK_RECON_SETUP_T primary key (ORG_ID, SERIAL_NO);

prompt
prompt Creating table GL_BANK_TRANS_CODES_T
prompt ====================================
prompt
create table GL_BANK_TRANS_CODES_T
(
  org_id               NUMBER not null,
  bank_code            NUMBER not null,
  serial_no            NUMBER not null,
  transaction_type     VARCHAR2(1),
  transaction_code     VARCHAR2(50),
  description          VARCHAR2(500),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table GL_BANK_TRANS_CODES_T
  add primary key (ORG_ID, BANK_CODE, SERIAL_NO);

prompt
prompt Creating table GL_CHEQUE_SERIES_T
prompt =================================
prompt
create table GL_CHEQUE_SERIES_T
(
  org_id               NUMBER not null,
  bank_code            NUMBER not null,
  branch_code          NUMBER not null,
  account_code         NUMBER not null,
  cheque_series_no     NUMBER not null,
  starting_no          VARCHAR2(20),
  ending_no            VARCHAR2(20),
  current_no           VARCHAR2(20),
  effecitve_start_date DATE,
  effecitve_end_date   DATE,
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  voucher_code         VARCHAR2(50) not null
)
;
alter table GL_CHEQUE_SERIES_T
  add constraint GL_CHEQUE_SERIES_PK primary key (ORG_ID, BANK_CODE, BRANCH_CODE, ACCOUNT_CODE, VOUCHER_CODE, CHEQUE_SERIES_NO);

prompt
prompt Creating table GL_DOC_TYPE_ATTACHMENT_MAP_T
prompt ===========================================
prompt
create table GL_DOC_TYPE_ATTACHMENT_MAP_T
(
  org_id           NUMBER not null,
  application_id   NUMBER,
  doc_type         VARCHAR2(20) not null,
  attachment_code  VARCHAR2(50) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  undwt_tag        VARCHAR2(1),
  customer_access  VARCHAR2(1)
)
;
alter table GL_DOC_TYPE_ATTACHMENT_MAP_T
  add constraint PK_GL_DOC_TYPE_ATTACH_MAP_T primary key (ORG_ID, DOC_TYPE, ATTACHMENT_CODE);

prompt
prompt Creating table GL_DOC_TYPE_MATRIX_MAP_T
prompt =======================================
prompt
create table GL_DOC_TYPE_MATRIX_MAP_T
(
  org_id           NUMBER not null,
  doc_type         VARCHAR2(20) not null,
  matrix_id        VARCHAR2(50) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  execution_order  NUMBER,
  takaful_type     VARCHAR2(20) not null,
  application_id   NUMBER not null
)
;
alter table GL_DOC_TYPE_MATRIX_MAP_T
  add constraint GL_DOC_TYPE_MATRIX_MAP_T_PK primary key (ORG_ID, APPLICATION_ID, DOC_TYPE, TAKAFUL_TYPE, MATRIX_ID);

prompt
prompt Creating table GL_FISCAL_YEAR_SETUP_T
prompt =====================================
prompt
create table GL_FISCAL_YEAR_SETUP_T
(
  org_id           NUMBER not null,
  fiscal_year      NUMBER not null,
  year_end_flag    VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  default_tag      VARCHAR2(1),
  date_from        DATE,
  date_to          DATE
)
;
alter table GL_FISCAL_YEAR_SETUP_T
  add constraint PK_FISCAL_YEAR primary key (ORG_ID, FISCAL_YEAR);

prompt
prompt Creating table GL_PERIOD_SETUP_T
prompt ================================
prompt
create table GL_PERIOD_SETUP_T
(
  fiscal_year      VARCHAR2(10) not null,
  periond_number   NUMBER not null,
  from_date        DATE,
  to_date          DATE,
  status           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  org_id           NUMBER not null,
  start_period     VARCHAR2(1),
  branch_id        NUMBER not null,
  freeze_tag       VARCHAR2(1),
  freeze_date      DATE
)
;
alter table GL_PERIOD_SETUP_T
  add constraint GL_PERIOD_SETUP_T_PK primary key (FISCAL_YEAR, PERIOND_NUMBER, ORG_ID, BRANCH_ID);

prompt
prompt Creating table GL_SUBLEDGER_ACC_DETAIL_T
prompt ========================================
prompt
create table GL_SUBLEDGER_ACC_DETAIL_T
(
  org_id               NUMBER not null,
  sl_type              VARCHAR2(20) not null,
  sl_code              VARCHAR2(20) not null,
  sl_sr_no             NUMBER not null,
  entity_type          VARCHAR2(5),
  filer_type           VARCHAR2(2),
  ntn                  VARCHAR2(50),
  sstn                 VARCHAR2(50),
  gstn                 VARCHAR2(50),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  cnic                 VARCHAR2(30),
  payment_mode         VARCHAR2(2),
  bank_name            VARCHAR2(100),
  account_title        VARCHAR2(100),
  account_number       VARCHAR2(100)
)
;
alter table GL_SUBLEDGER_ACC_DETAIL_T
  add constraint GL_SUBLEDGER_ACC_DETAIL_PK primary key (ORG_ID, SL_TYPE, SL_CODE, SL_SR_NO);

prompt
prompt Creating table GL_SUB_LEDGER_ADDRESS_T
prompt ======================================
prompt
create table GL_SUB_LEDGER_ADDRESS_T
(
  org_id           NUMBER not null,
  sl_type          VARCHAR2(20) not null,
  sl_code          VARCHAR2(20) not null,
  address1         VARCHAR2(100),
  address2         VARCHAR2(100),
  city_code        VARCHAR2(10),
  state_code       VARCHAR2(10),
  country_code     VARCHAR2(10),
  zip_code         VARCHAR2(50),
  phone1           VARCHAR2(50),
  phone2           VARCHAR2(50),
  fax1             VARCHAR2(50),
  fax2             VARCHAR2(50),
  email            VARCHAR2(100),
  website          VARCHAR2(150),
  home_phone       NUMBER,
  office_phone     NUMBER,
  house_no         VARCHAR2(50),
  unit_no          VARCHAR2(50),
  building         VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  mobile_phone     NUMBER
)
;
alter table GL_SUB_LEDGER_ADDRESS_T
  add constraint PK_GL_SUB_LED_ADDRESS_T primary key (ORG_ID, SL_TYPE, SL_CODE);

prompt
prompt Creating table GL_VOUCHER_TYPE_T
prompt ================================
prompt
create table GL_VOUCHER_TYPE_T
(
  org_id               NUMBER not null,
  voucher_description  VARCHAR2(100) not null,
  voucher_type         VARCHAR2(10) not null,
  auto_tag             VARCHAR2(1) not null,
  active               VARCHAR2(1) not null,
  created_by           VARCHAR2(50),
  creation_date        TIMESTAMP(6),
  last_updated_by      VARCHAR2(50),
  last_update_date     TIMESTAMP(6),
  voucher_payment_type VARCHAR2(1),
  target_voucher_type  VARCHAR2(5),
  print_audit_trail    VARCHAR2(1)
)
;
alter table GL_VOUCHER_TYPE_T
  add constraint GL_VOUCHER_TYPE_T_PK primary key (ORG_ID, VOUCHER_TYPE);

prompt
prompt Creating table GL_VOUCHER_HEADER_T
prompt ==================================
prompt
create table GL_VOUCHER_HEADER_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  voucher_type        VARCHAR2(10) not null,
  fiscal_year         VARCHAR2(10) not null,
  voucher_no          VARCHAR2(10) not null,
  voucher_date        DATE,
  voucher_amount      NUMBER,
  voucher_description VARCHAR2(500),
  voucher_status      VARCHAR2(1),
  verified_by         VARCHAR2(50),
  verified_date       DATE,
  approved_by         VARCHAR2(50),
  approval_date       DATE,
  canceled_by         VARCHAR2(50),
  cancel_date         DATE,
  reversed_tag        VARCHAR2(1),
  reversed_by         VARCHAR2(50),
  reveral_date        DATE,
  reversal_ref_vch_no VARCHAR2(50),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  manual_tag          VARCHAR2(1),
  matrix_id           VARCHAR2(50),
  doc_ref_no          VARCHAR2(250),
  voucher_ref_no      VARCHAR2(50),
  target_voucher_type VARCHAR2(5),
  exclude_tag         VARCHAR2(1)
)
;
alter table GL_VOUCHER_HEADER_T
  add constraint GL_VOUCHER_HEADER_T_PK primary key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, VOUCHER_NO, FISCAL_YEAR);
alter table GL_VOUCHER_HEADER_T
  add constraint FK_VOUCHER_VCH_TYPE foreign key (ORG_ID, VOUCHER_TYPE)
  references GL_VOUCHER_TYPE_T (ORG_ID, VOUCHER_TYPE);

prompt
prompt Creating table GL_VOUCHER_DETAIL_T
prompt ==================================
prompt
create table GL_VOUCHER_DETAIL_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  voucher_type         VARCHAR2(10) not null,
  fiscal_year          VARCHAR2(10) not null,
  voucher_no           VARCHAR2(10) not null,
  detail_sr_no         NUMBER not null,
  cost_center_code     VARCHAR2(10),
  row_description      VARCHAR2(500),
  coa_code             VARCHAR2(50) not null,
  debit_base_curr      NUMBER,
  credit_base_curr     NUMBER,
  currency_code        VARCHAR2(10),
  exchange_rate        NUMBER,
  debit_foreign_curr   NUMBER,
  credit_foreign_curr  NUMBER,
  document_reference   VARCHAR2(500),
  knockoff_amount      NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  instrument_type      VARCHAR2(10),
  instrument_date      DATE,
  instrument_number    VARCHAR2(50),
  instrument_narration VARCHAR2(500),
  manual_tag           VARCHAR2(1),
  tax_detail_code      NUMBER,
  ref_dtl_no           NUMBER,
  drawn_on             VARCHAR2(100),
  cheque_no            VARCHAR2(50),
  knockoff_ref         VARCHAR2(100),
  policy_year          VARCHAR2(300),
  policy_no            VARCHAR2(300),
  endorsement_no       VARCHAR2(300),
  claim_no             VARCHAR2(300),
  bu                   VARCHAR2(300),
  lob                  VARCHAR2(300),
  location             VARCHAR2(300),
  employee             VARCHAR2(300),
  channel              NUMBER,
  agent                VARCHAR2(300),
  offset_coa_code      VARCHAR2(50),
  matrix_id            VARCHAR2(50),
  subledger_flag       VARCHAR2(1),
  offset_sl_type       VARCHAR2(50),
  offset_sl_code       VARCHAR2(50),
  sl_type              VARCHAR2(50),
  sl_code              VARCHAR2(50),
  refrence_sr_no       NUMBER,
  reconcilation_tag    VARCHAR2(1),
  recon_gl_tag         NUMBER
)
;
alter table GL_VOUCHER_DETAIL_T
  add constraint GL_VOUCHER_DETAIL_T_PK primary key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, FISCAL_YEAR, VOUCHER_NO, DETAIL_SR_NO);
alter table GL_VOUCHER_DETAIL_T
  add constraint FK_VCH_DETAIL_CC foreign key (ORG_ID, COST_CENTER_CODE)
  references TK_COST_CENTER_SETUP_T (ORG_ID, COST_CENTER_CODE);
alter table GL_VOUCHER_DETAIL_T
  add constraint FK_VCH_DETAIL_HEADER foreign key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, VOUCHER_NO, FISCAL_YEAR)
  references GL_VOUCHER_HEADER_T (ORG_ID, BRANCH_ID, VOUCHER_TYPE, VOUCHER_NO, FISCAL_YEAR);
alter table GL_VOUCHER_DETAIL_T
  add constraint GL_VOUCHER_DETAIL_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);

prompt
prompt Creating table GL_SUB_LEDGER_DETAIL_T
prompt =====================================
prompt
create table GL_SUB_LEDGER_DETAIL_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  voucher_type        VARCHAR2(10) not null,
  fiscal_year         VARCHAR2(10) not null,
  voucher_no          VARCHAR2(10) not null,
  detail_sr_no        NUMBER not null,
  sl_sr_no            NUMBER not null,
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50) not null,
  sl_type             VARCHAR2(10),
  sl_code             VARCHAR2(50),
  sl_description      VARCHAR2(500),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  document_reference  VARCHAR2(500),
  knockoff_amount     NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  offset_coa_code     VARCHAR2(50),
  offset_sl_type      VARCHAR2(50),
  offset_sl_code      VARCHAR2(50),
  refrence_sr_no      NUMBER
)
;
alter table GL_SUB_LEDGER_DETAIL_T
  add constraint GL_SUB_LEDGER_DETAIL_T_PK primary key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, FISCAL_YEAR, VOUCHER_NO, DETAIL_SR_NO, SL_SR_NO);
alter table GL_SUB_LEDGER_DETAIL_T
  add constraint FK_VCH_SL_TYPE foreign key (ORG_ID, SL_TYPE, SL_CODE)
  references GL_SUBLEDGER_ACCOUNTS (ORG_ID, SL_TYPE, SL_CODE);
alter table GL_SUB_LEDGER_DETAIL_T
  add constraint GL_SUB_LEDGER_DETAIL_T_COA foreign key (COA_CODE, ORG_ID)
  references CHART_OF_ACCOUNT_GL_T (COA_CODE, ORG_ID);
alter table GL_SUB_LEDGER_DETAIL_T
  add constraint GL_SUB_LEDGER_DETAIL_T_R01 foreign key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, FISCAL_YEAR, VOUCHER_NO, DETAIL_SR_NO)
  references GL_VOUCHER_DETAIL_T (ORG_ID, BRANCH_ID, VOUCHER_TYPE, FISCAL_YEAR, VOUCHER_NO, DETAIL_SR_NO)
  novalidate;

prompt
prompt Creating table GL_TAG_T
prompt =======================
prompt
create table GL_TAG_T
(
  org_id           NUMBER not null,
  gl_tag_code      NUMBER not null,
  gl_tag_name      VARCHAR2(100) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_TAG_T
  add constraint PK_GL_TAG_T primary key (ORG_ID, GL_TAG_CODE);

prompt
prompt Creating table GL_TAX_APPLICAPIBILITY_T
prompt =======================================
prompt
create table GL_TAX_APPLICAPIBILITY_T
(
  regime_id        NUMBER not null,
  tax_code         NUMBER not null,
  jurisdiction_id  NUMBER not null,
  tax_detail_code  NUMBER not null,
  type             VARCHAR2(100) not null,
  serial_number    NUMBER not null,
  value            VARCHAR2(100) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  org_id           NUMBER not null,
  parent_key       VARCHAR2(500)
)
;
alter table GL_TAX_APPLICAPIBILITY_T
  add constraint GL_TAX_APPLICAPIBILITY_T_PK primary key (REGIME_ID, TAX_CODE, JURISDICTION_ID, TAX_DETAIL_CODE, SERIAL_NUMBER, ORG_ID, TYPE, VALUE);

prompt
prompt Creating table GL_TAX_JURISDICTION_SETUP_T
prompt ==========================================
prompt
create table GL_TAX_JURISDICTION_SETUP_T
(
  org_id                   NUMBER not null,
  tax_code                 NUMBER not null,
  jurisdiction_id          NUMBER not null,
  jurisdiction_description VARCHAR2(100),
  active_tag               VARCHAR2(1),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  regime_id                NUMBER not null
)
;
alter table GL_TAX_JURISDICTION_SETUP_T
  add constraint GL_TAX_JURISDICTION_SETUP__PK primary key (ORG_ID, TAX_CODE, REGIME_ID, JURISDICTION_ID);
alter table GL_TAX_JURISDICTION_SETUP_T
  add constraint GL_TAX_JURISDICTION_SETUP_UK1 unique (JURISDICTION_DESCRIPTION, TAX_CODE);

prompt
prompt Creating table GL_TAX_REGIME_SETUP_T
prompt ====================================
prompt
create table GL_TAX_REGIME_SETUP_T
(
  regime_id        NUMBER not null,
  description      VARCHAR2(100),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  org_id           NUMBER not null
)
;
alter table GL_TAX_REGIME_SETUP_T
  add constraint GL_TAX_REGIME_SETUP_T_PK primary key (REGIME_ID, ORG_ID);

prompt
prompt Creating table GL_TAX_SETUP_DETAIL_T
prompt ====================================
prompt
create table GL_TAX_SETUP_DETAIL_T
(
  org_id               NUMBER not null,
  tax_code             NUMBER not null,
  tax_detail_code      NUMBER not null,
  description          VARCHAR2(250),
  coa_code             VARCHAR2(20) not null,
  rate                 NUMBER,
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  jurisdiction_id      NUMBER not null,
  tax_recovery         NUMBER,
  exempted_amount      NUMBER,
  flat_amount          NUMBER,
  regime_id            NUMBER
)
;
alter table GL_TAX_SETUP_DETAIL_T
  add constraint GL_TAX_SETUP_DETAIL_T_PK primary key (ORG_ID, TAX_CODE, TAX_DETAIL_CODE, JURISDICTION_ID);

prompt
prompt Creating table GL_TAX_SETUP_T
prompt =============================
prompt
create table GL_TAX_SETUP_T
(
  org_id           NUMBER not null,
  tax_code         NUMBER not null,
  tax_name         VARCHAR2(250),
  type             VARCHAR2(4),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE not null,
  regime_id        NUMBER not null
)
;
alter table GL_TAX_SETUP_T
  add constraint GL_TAX_SETUP_T_PK primary key (ORG_ID, TAX_CODE, REGIME_ID);

prompt
prompt Creating table GL_VOUCHER_APPROVAL_HISTORY_T
prompt ============================================
prompt
create table GL_VOUCHER_APPROVAL_HISTORY_T
(
  org_id          NUMBER not null,
  branch_id       NUMBER not null,
  voucher_type    VARCHAR2(10) not null,
  fiscal_year     VARCHAR2(10) not null,
  voucher_no      VARCHAR2(10) not null,
  s_no            NUMBER not null,
  action_type     VARCHAR2(20),
  action          VARCHAR2(1),
  action_by       VARCHAR2(50),
  action_date     DATE,
  action_comments VARCHAR2(500)
)
;
alter table GL_VOUCHER_APPROVAL_HISTORY_T
  add constraint GL_VOUCHER_APPROVAL_HISTORY_PK primary key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, FISCAL_YEAR, VOUCHER_NO, S_NO);

prompt
prompt Creating table GL_VOUCHER_ATTACHMENT_T
prompt ======================================
prompt
create table GL_VOUCHER_ATTACHMENT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  voucher_type     VARCHAR2(10) not null,
  fiscal_year      VARCHAR2(10) not null,
  voucher_no       VARCHAR2(10) not null,
  attachment_no    NUMBER not null,
  description      VARCHAR2(250),
  attachment       VARCHAR2(250),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  manual_tag       VARCHAR2(1)
)
;
alter table GL_VOUCHER_ATTACHMENT_T
  add constraint GL_VOUCHER_ATTACHMENT_T_PK primary key (ORG_ID, BRANCH_ID, VOUCHER_TYPE, VOUCHER_NO, FISCAL_YEAR, ATTACHMENT_NO);

prompt
prompt Creating table GOAL_SEEK_LOG_T
prompt ==============================
prompt
create table GOAL_SEEK_LOG_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  document_no        VARCHAR2(10) not null,
  document_year      NUMBER not null,
  application_id     NUMBER not null,
  issue_count        NUMBER not null,
  iterator           NUMBER not null,
  basic_contribution NUMBER,
  cash_value         NUMBER,
  target_cash_value  NUMBER,
  target_year        NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE
)
;
alter table GOAL_SEEK_LOG_T
  add constraint PK_GOAL_SEEK_LOG primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, ITERATOR);

prompt
prompt Creating table GPF_PAYROLL_CALANDER
prompt ===================================
prompt
create table GPF_PAYROLL_CALANDER
(
  org_id             NUMBER not null,
  payrollcalanderid  NUMBER not null,
  payroll_name       VARCHAR2(200),
  periodtype         NUMBER,
  firstperiodenddate DATE,
  numberofyears      NUMBER,
  startdate          DATE,
  enddate            DATE,
  fiscalyear         NUMBER,
  addby              NUMBER,
  adddate            DATE,
  editby             NUMBER,
  editdate           DATE,
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GPF_PAYROLL_CALANDER
  add constraint PK_GPF_PAYROLLCALANDER primary key (ORG_ID, PAYROLLCALANDERID);

prompt
prompt Creating table GPF_PAYROLL_USER_MAPPING_T
prompt =========================================
prompt
create table GPF_PAYROLL_USER_MAPPING_T
(
  org_id            NUMBER not null,
  payrollcalanderid NUMBER not null,
  user_id           NUMBER not null,
  user_role         VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GPF_PAYROLL_USER_MAPPING_T
  add constraint PK_PAYROLL_USER_MAPP primary key (ORG_ID, PAYROLLCALANDERID, USER_ID);

prompt
prompt Creating table GP_LOSS_TYPE_SETUP_T
prompt ===================================
prompt
create table GP_LOSS_TYPE_SETUP_T
(
  org_id           NUMBER not null,
  loss_type_code   NUMBER not null,
  abbreviation     VARCHAR2(50),
  short_name       VARCHAR2(50),
  title            VARCHAR2(50),
  loss_nature      VARCHAR2(20),
  remarks          VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  app_id           NUMBER,
  application_id   NUMBER not null
)
;
alter table GP_LOSS_TYPE_SETUP_T
  add constraint PK_GL_LOSS_TYPE_SETUP_T primary key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table GRADES_USER_MAPPING
prompt ==================================
prompt
create table GRADES_USER_MAPPING
(
  org_id           NUMBER not null,
  gradeid          NUMBER not null,
  employee_id      NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GRADES_USER_MAPPING
  add constraint PK_GRADE_USER_MAP primary key (ORG_ID, GRADEID, EMPLOYEE_ID);

prompt
prompt Creating table GT_ITEM_IPARTY_DTL_T
prompt ===================================
prompt
create table GT_ITEM_IPARTY_DTL_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  item_no          NUMBER not null,
  serial_no        NUMBER not null,
  name_of_party    VARCHAR2(200),
  building_name    VARCHAR2(200),
  street           VARCHAR2(200),
  town             VARCHAR2(200),
  country          VARCHAR2(100),
  post_code        VARCHAR2(100),
  account_no       VARCHAR2(100),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GT_ITEM_IPARTY_DTL_T
  add constraint PK_ITEM_IPARTY_DTL_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, SERIAL_NO);

prompt
prompt Creating table GT_ITEM_JOINT_HOLDER_T
prompt =====================================
prompt
create table GT_ITEM_JOINT_HOLDER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  item_no          NUMBER not null,
  serial_no        NUMBER not null,
  title            VARCHAR2(200),
  first_name       VARCHAR2(200),
  sur_name         VARCHAR2(200),
  dob              VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GT_ITEM_JOINT_HOLDER_T
  add constraint PK_ITEM_JOINT_HOLDER_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, SERIAL_NO);

prompt
prompt Creating table GT_POS_CLAIM_T
prompt =============================
prompt
create table GT_POS_CLAIM_T
(
  org_id           NUMBER not null,
  product_id       NUMBER not null,
  quotation_id     NUMBER not null,
  record_id        NUMBER not null,
  claim_date       DATE,
  claim_type       NUMBER,
  cover_affected   NUMBER,
  claim_cost       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GT_POS_CLAIM_T
  add constraint PK_GT_POS_CLAIM_T primary key (ORG_ID, PRODUCT_ID, QUOTATION_ID, RECORD_ID);

prompt
prompt Creating table GT_POS_IPARTY_T
prompt ==============================
prompt
create table GT_POS_IPARTY_T
(
  org_id           NUMBER not null,
  product_id       NUMBER not null,
  quotation_id     NUMBER not null,
  record_id        NUMBER not null,
  name_of_party    VARCHAR2(200),
  building_name    VARCHAR2(200),
  street           VARCHAR2(200),
  town             VARCHAR2(200),
  country          VARCHAR2(100),
  post_code        VARCHAR2(100),
  account_no       VARCHAR2(100),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GT_POS_IPARTY_T
  add constraint PK_GT_POS_IPARTY_T primary key (ORG_ID, PRODUCT_ID, QUOTATION_ID, RECORD_ID);

prompt
prompt Creating table GT_POS_JOINT_HOLDER_T
prompt ====================================
prompt
create table GT_POS_JOINT_HOLDER_T
(
  org_id           NUMBER not null,
  product_id       NUMBER not null,
  quotation_id     NUMBER not null,
  record_id        NUMBER not null,
  title            VARCHAR2(200),
  first_name       VARCHAR2(200),
  sur_name         VARCHAR2(200),
  dob              VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GT_POS_JOINT_HOLDER_T
  add constraint PK_GT_POS_JOINT_HOLDER_T primary key (ORG_ID, PRODUCT_ID, QUOTATION_ID, RECORD_ID);

prompt
prompt Creating table GT_POS_MASTER_T
prompt ==============================
prompt
create table GT_POS_MASTER_T
(
  org_id                    NUMBER not null,
  product_id                NUMBER not null,
  quotation_id              NUMBER not null,
  house_number              VARCHAR2(150),
  postal_code               VARCHAR2(50),
  own_home                  VARCHAR2(1),
  cover_type                NUMBER,
  cover_start_date          DATE not null,
  property_type             NUMBER,
  no_of_bedroom             NUMBER,
  no_of_bathroom            NUMBER,
  no_of_othr_room           NUMBER,
  build_date                DATE,
  external_wall_made        NUMBER,
  roof_made                 NUMBER,
  roof_flat_percent         NUMBER,
  home_flooded              VARCHAR2(1),
  land_slipped              VARCHAR2(1),
  listed_building           VARCHAR2(1),
  no_of_person_18_and_above NUMBER,
  no_of_person_below_18     NUMBER,
  at_home_time              NUMBER,
  business_done_at_home     NUMBER,
  claim_in_last_5years      VARCHAR2(1),
  no_claim_period_building  NUMBER,
  no_claim_period_content   NUMBER,
  insured_title             NUMBER,
  insured_first_name        VARCHAR2(100),
  insured_sur_name          VARCHAR2(100),
  insured_dob               DATE,
  employment_status         NUMBER,
  is_joint_policy_holder    VARCHAR2(1),
  is_interested_party       VARCHAR2(1),
  payment_mode              NUMBER,
  email_address             VARCHAR2(150),
  mobile_number             VARCHAR2(50),
  promotional_code          VARCHAR2(150),
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_updated_by           VARCHAR2(50),
  last_update_date          DATE,
  total_amount              NUMBER,
  travel_journey_type       NUMBER,
  travel_option             NUMBER,
  trvl_health_stmnt         VARCHAR2(1),
  aviva_policy              VARCHAR2(1),
  assumption_stmnt          VARCHAR2(1)
)
;
alter table GT_POS_MASTER_T
  add constraint PK_GT_POS_MASTER_T primary key (ORG_ID, PRODUCT_ID, QUOTATION_ID);

prompt
prompt Creating table HR_APPR_EMPLOYEE_FEEDBACK_T
prompt ==========================================
prompt
create table HR_APPR_EMPLOYEE_FEEDBACK_T
(
  org_id           NUMBER not null,
  user_id          NUMBER not null,
  employee_plan_id NUMBER not null,
  feedback_status  VARCHAR2(1),
  feedback_comment VARCHAR2(300),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table HR_APPR_EMPLOYEE_FEEDBACK_T
  add constraint PK_EMPLOYEE_FINAL_FEEDBACK_T primary key (ORG_ID, USER_ID, EMPLOYEE_PLAN_ID);

prompt
prompt Creating table HR_DOB_EMAIL_TEMPLATE_DTL_T
prompt ==========================================
prompt
create table HR_DOB_EMAIL_TEMPLATE_DTL_T
(
  org_id            NUMBER not null,
  email_id          NUMBER not null,
  rec_id            NUMBER not null,
  image_description VARCHAR2(50),
  image_upload_path VARCHAR2(200)
)
;
alter table HR_DOB_EMAIL_TEMPLATE_DTL_T
  add constraint PK_HR_DOB_EMAIL_DTL_T primary key (ORG_ID, EMAIL_ID, REC_ID);

prompt
prompt Creating table HR_DOB_EMAIL_TEMPLATE_HD_T
prompt =========================================
prompt
create table HR_DOB_EMAIL_TEMPLATE_HD_T
(
  org_id            NUMBER not null,
  email_id          NUMBER not null,
  email_description VARCHAR2(100),
  email_subject     VARCHAR2(150),
  email_body        VARCHAR2(500),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  signature         VARCHAR2(200),
  signature2        VARCHAR2(200)
)
;
alter table HR_DOB_EMAIL_TEMPLATE_HD_T
  add constraint PK_HR_DOB_EMAIL_HD_T primary key (ORG_ID, EMAIL_ID);

prompt
prompt Creating table ILAS_DOCUMENT_TRACKING_T
prompt =======================================
prompt
create table ILAS_DOCUMENT_TRACKING_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  doc_ref_no       VARCHAR2(100),
  current_status   VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table ILAS_DOCUMENT_TRACKING_T
  add constraint ILAS_DOC_TRACKING_pk primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table ILAS_DOCUMENT_TRACKING_T
  add constraint FK_DOC_TRACK_HD foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table ILAS_RESPONSIBLE_DEPT_SETUP_T
prompt ============================================
prompt
create table ILAS_RESPONSIBLE_DEPT_SETUP_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  dept_code        NUMBER not null,
  dept_desc        VARCHAR2(100),
  display_order    NUMBER,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table ILAS_RESPONSIBLE_DEPT_SETUP_T
  add constraint ILAS_RESPONSIBLE_DEPT_PK primary key (ORG_ID, APPLICATION_ID, DEPT_CODE);

prompt
prompt Creating table ILAS_RESP_DEPT_USER_MAPPING_T
prompt ============================================
prompt
create table ILAS_RESP_DEPT_USER_MAPPING_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  dept_code        NUMBER not null,
  user_id          NUMBER not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table ILAS_RESP_DEPT_USER_MAPPING_T
  add constraint ILAS_RESP_USER_PK primary key (ORG_ID, APPLICATION_ID, DEPT_CODE, USER_ID);

prompt
prompt Creating table ILAS_SUB_PROD_COMM_SETUP_T
prompt =========================================
prompt
create table ILAS_SUB_PROD_COMM_SETUP_T
(
  org_id                      NUMBER not null,
  main_product_code           NUMBER not null,
  sub_product_code            NUMBER not null,
  comm_rate_id                NUMBER not null,
  distributin_channel         VARCHAR2(50) not null,
  channel_model               VARCHAR2(50) not null,
  designation_level           VARCHAR2(50),
  designation_model           VARCHAR2(50),
  policy_term                 NUMBER,
  rate                        NUMBER,
  effective_start_date        DATE,
  effective_end_date          DATE,
  created_by                  VARCHAR2(100),
  creation_date               DATE,
  last_updated_by             VARCHAR2(100),
  last_update_date            DATE,
  jump_tag                    VARCHAR2(1),
  rate_topup                  NUMBER,
  commission_type             VARCHAR2(1),
  commission_nature           VARCHAR2(1),
  jump_tag_adhoc              VARCHAR2(1),
  jump_tag_bus_credit_adhoc   VARCHAR2(100),
  jump_tag_bus_credit_regular VARCHAR2(100),
  bus_credit_regular          NUMBER,
  bus_credit_adhoc            NUMBER,
  pmd_term                    NUMBER,
  header_id                   NUMBER not null
)
;
alter table ILAS_SUB_PROD_COMM_SETUP_T
  add constraint ILAS_SUB_PROD_COMM_SETUP_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DISTRIBUTIN_CHANNEL, CHANNEL_MODEL, HEADER_ID, COMM_RATE_ID);

prompt
prompt Creating table ILAS_SUB_PROD_COMM_SLABS_T
prompt =========================================
prompt
create table ILAS_SUB_PROD_COMM_SLABS_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  comm_rate_id         NUMBER not null,
  code                 NUMBER not null,
  minimum_contribution NUMBER,
  maximum_contribution NUMBER,
  regular_rate         NUMBER,
  adhoc_rate           NUMBER,
  created_by           VARCHAR2(100),
  creation_date        DATE,
  last_updated_by      VARCHAR2(100),
  last_update_date     DATE,
  doc_reference_no     VARCHAR2(30),
  bus_credit_regular   NUMBER,
  bus_credit_adhoc     NUMBER
)
;
alter table ILAS_SUB_PROD_COMM_SLABS_T
  add constraint ILAS_SUB_PROD_COMM_SLABS_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, COMM_RATE_ID, CODE);

prompt
prompt Creating table ILAS_SUB_PROD_RATES_SETUP_T
prompt ==========================================
prompt
create table ILAS_SUB_PROD_RATES_SETUP_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  benefit_code         NUMBER not null,
  rate_type_id         NUMBER not null,
  policy_term          NUMBER not null,
  rate                 NUMBER,
  effective_start_date DATE not null,
  effective_end_date   DATE,
  created_by           VARCHAR2(100),
  creation_date        DATE,
  last_updated_by      VARCHAR2(100),
  last_update_date     DATE,
  indexation_rate_id   NUMBER
)
;
alter table ILAS_SUB_PROD_RATES_SETUP_T
  add constraint ILAS_SUB_PROD_RATES_SETUP_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, RATE_TYPE_ID, POLICY_TERM, EFFECTIVE_START_DATE);
alter table ILAS_SUB_PROD_RATES_SETUP_T
  add constraint FK_ILAS_SUB_PROD_RATES_SETUP foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE)
  references GLAS_SUB_PROD_BENEFIT_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE);

prompt
prompt Creating table IL_ALLOC_TRANS_TYPE_T
prompt ====================================
prompt
create table IL_ALLOC_TRANS_TYPE_T
(
  org_id             NUMBER not null,
  type_code          NUMBER not null,
  type_desc          VARCHAR2(50),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  calculation_type   VARCHAR2(10),
  retakaful_tag      VARCHAR2(1),
  commission_tag     VARCHAR2(1),
  display_order      NUMBER,
  type_code_reversal NUMBER,
  reversal_tag       VARCHAR2(1),
  report_group_code  VARCHAR2(50),
  deduction_type     VARCHAR2(1),
  fund_wise_tag      VARCHAR2(1),
  term_wise_tag      VARCHAR2(1),
  surplus_tag        VARCHAR2(1)
)
;
alter table IL_ALLOC_TRANS_TYPE_T
  add constraint PK_ALLOC_TR_TYPE primary key (ORG_ID, TYPE_CODE);
alter table IL_ALLOC_TRANS_TYPE_T
  add constraint FK_ALLOC_TR_TYPE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_ALLOC_TYPE_SETUP_T
prompt ====================================
prompt
create table IL_ALLOC_TYPE_SETUP_T
(
  org_id           NUMBER not null,
  type_code        NUMBER not null,
  type_desc        VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  report_code      VARCHAR2(50)
)
;
alter table IL_ALLOC_TYPE_SETUP_T
  add constraint PK_ALLOC_TYPE primary key (ORG_ID, TYPE_CODE);
alter table IL_ALLOC_TYPE_SETUP_T
  add constraint FK_ALLOC_TYPE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_ASSIGNEE_CONTACT_T
prompt ====================================
prompt
create table IL_ASSIGNEE_CONTACT_T
(
  org_id           NUMBER not null,
  assignee_code    NUMBER not null,
  serial_no        NUMBER not null,
  person_name      VARCHAR2(500),
  designation      VARCHAR2(250),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_ASSIGNEE_CONTACT_T
  add constraint PK_ASN_CNTCT_T primary key (ORG_ID, ASSIGNEE_CODE, SERIAL_NO);

prompt
prompt Creating table IL_ASSIGNEE_SETUP_T
prompt ==================================
prompt
create table IL_ASSIGNEE_SETUP_T
(
  org_id           NUMBER not null,
  assignee_code    NUMBER not null,
  assignee_name    VARCHAR2(500),
  assignee_type    VARCHAR2(50),
  ntn_no           VARCHAR2(200),
  phone            VARCHAR2(20),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_ASSIGNEE_SETUP_T
  add constraint PK_ASN_SETUP_T primary key (ORG_ID, ASSIGNEE_CODE);

prompt
prompt Creating table IL_AUTO_RENEWAL_LOG_T
prompt ====================================
prompt
create table IL_AUTO_RENEWAL_LOG_T
(
  org_id            NUMBER not null,
  doc_reference_key VARCHAR2(100) not null,
  serial_no         NUMBER not null,
  process_date      DATE,
  process_status    VARCHAR2(15),
  process_message   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  dayend_date       DATE,
  due_date          DATE,
  topup_eff_date    DATE
)
;
alter table IL_AUTO_RENEWAL_LOG_T
  add constraint PK_REN_LOG primary key (ORG_ID, DOC_REFERENCE_KEY, SERIAL_NO);

prompt
prompt Creating table IL_BANK_REP_LOGS_T
prompt =================================
prompt
create table IL_BANK_REP_LOGS_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  serial_no                NUMBER not null,
  bank_representative_code VARCHAR2(150),
  bank_representative_name VARCHAR2(150),
  remarks                  VARCHAR2(550),
  creation_date            DATE,
  created_by               VARCHAR2(50),
  last_update_date         DATE,
  last_updated_by          VARCHAR2(50)
)
;
alter table IL_BANK_REP_LOGS_T
  add constraint PK_IL_BNK_REP_LOG primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);

prompt
prompt Creating table IL_BUNDLE_ATTACHEMENT_T
prompt ======================================
prompt
create table IL_BUNDLE_ATTACHEMENT_T
(
  org_id           NUMBER not null,
  app_id           NUMBER not null,
  attachment_type  VARCHAR2(10) not null,
  owner_type       VARCHAR2(10) not null,
  active_tag       VARCHAR2(1) not null,
  creation_date    DATE,
  created_by       VARCHAR2(150),
  last_update_date DATE,
  last_updated_by  VARCHAR2(150),
  bundle_id        NUMBER not null
)
;
alter table IL_BUNDLE_ATTACHEMENT_T
  add constraint IL_BUNDLE_ATTACHEMENT_T primary key (ORG_ID, APP_ID, ATTACHMENT_TYPE, OWNER_TYPE, BUNDLE_ID);
alter table IL_BUNDLE_ATTACHEMENT_T
  add constraint FK_IL_BUNDLE_ATTACHMENT_BUNDLE_SETUP foreign key (ORG_ID, APP_ID, BUNDLE_ID)
  references BUNDLE_SETUP_T (ORG_ID, APP_ID, BUNDLE_ID);

prompt
prompt Creating table IL_CBC_REASON_SETUP_T
prompt ====================================
prompt
create table IL_CBC_REASON_SETUP_T
(
  org_id           NUMBER not null,
  reason_id        NUMBER not null,
  reason_desc      VARCHAR2(100) not null,
  closure_tag      VARCHAR2(1),
  active           VARCHAR2(1) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_CBC_REASON_SETUP_T
  add constraint PK_IL_CBC_REASON primary key (ORG_ID, REASON_ID);
alter table IL_CBC_REASON_SETUP_T
  add foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_CBC_STATUS_SETUP_T
prompt ====================================
prompt
create table IL_CBC_STATUS_SETUP_T
(
  org_id           NUMBER not null,
  status_id        NUMBER not null,
  status_desc      VARCHAR2(100) not null,
  closure_tag      VARCHAR2(1),
  active           VARCHAR2(1) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_CBC_STATUS_SETUP_T
  add constraint PK_IL_CBC_STATUS primary key (ORG_ID, STATUS_ID);
alter table IL_CBC_STATUS_SETUP_T
  add foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_COMM_CYCLE_HEADER_T
prompt =====================================
prompt
create table IL_COMM_CYCLE_HEADER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  batch_no         NUMBER not null,
  batch_name       VARCHAR2(100),
  batch_date       DATE,
  from_date        DATE,
  to_date          DATE,
  lock_flag        VARCHAR2(20),
  comments         VARCHAR2(100),
  description      VARCHAR2(500),
  posted_user_name VARCHAR2(50),
  post_flag        VARCHAR2(20),
  post_date        DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  allocation_type  NUMBER,
  channel_id       NUMBER,
  model_id         NUMBER,
  partner_id       NUMBER,
  multi_models     VARCHAR2(100)
)
;
alter table IL_COMM_CYCLE_HEADER_T
  add constraint PK_COMM_CYCLE_HEAD primary key (ORG_ID, BRANCH_ID, BATCH_NO);

prompt
prompt Creating table IL_COMM_CYCLE_DETAIL
prompt ===================================
prompt
create table IL_COMM_CYCLE_DETAIL
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  main_product_code   NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  serial_no           NUMBER not null,
  channel_id          NUMBER not null,
  channel_model_id    NUMBER not null,
  agent_code          NUMBER not null,
  commission_cycle_id NUMBER not null,
  doc_reference_no    VARCHAR2(50),
  cycle_level         VARCHAR2(20),
  designation         VARCHAR2(20),
  cycle_type          VARCHAR2(20),
  allocation_category VARCHAR2(50),
  commission_rate     NUMBER(9,6),
  commission_flat_amt NUMBER(15,2),
  commission_amount   NUMBER(15,2),
  agency_type         VARCHAR2(20),
  gross_contribution  NUMBER,
  comm_settled        NUMBER,
  comm_payable        NUMBER,
  comm_pending        NUMBER,
  installment_no      NUMBER,
  payment_amount      NUMBER,
  received_amount     NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  batch_no            NUMBER not null,
  s_no                NUMBER,
  allocation_id       NUMBER,
  cycle_nature        VARCHAR2(10),
  allocation_type     NUMBER
)
;
alter table IL_COMM_CYCLE_DETAIL
  add constraint PK_IL_DOC_COMMISION_CYCLE_DET primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO, BATCH_NO, CHANNEL_ID, CHANNEL_MODEL_ID, AGENT_CODE, COMMISSION_CYCLE_ID);
alter table IL_COMM_CYCLE_DETAIL
  add constraint FK_COMM_CYCLE_HEAD_DETAIL foreign key (ORG_ID, BRANCH_ID, BATCH_NO)
  references IL_COMM_CYCLE_HEADER_T (ORG_ID, BRANCH_ID, BATCH_NO);

prompt
prompt Creating table IL_COMM_CYC_PR_HOLD_HISTORY_T
prompt ============================================
prompt
create table IL_COMM_CYC_PR_HOLD_HISTORY_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  s_no                NUMBER not null,
  serial_no           NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  installment_no      NUMBER,
  action_type         VARCHAR2(20),
  hold_action         VARCHAR2(1),
  action_by           VARCHAR2(50),
  action_date         DATE,
  action_comments     VARCHAR2(500),
  commission_cycle_id NUMBER not null
)
;
alter table IL_COMM_CYC_PR_HOLD_HISTORY_T
  add constraint PK_IL_COMM_CYCLE_HOLD_HISTORY primary key (ORG_ID, BRANCH_ID, S_NO, SERIAL_NO, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, COMMISSION_CYCLE_ID);

prompt
prompt Creating table IL_COMM_UNIT_PROCESS_HD_T
prompt ========================================
prompt
create table IL_COMM_UNIT_PROCESS_HD_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  process_id           NUMBER not null,
  process_date         DATE,
  doc_reference_no     VARCHAR2(50),
  lock_date            DATE,
  lock_by              VARCHAR2(20),
  lock_tag             VARCHAR2(1),
  posting_tag          VARCHAR2(1),
  created_by           VARCHAR2(50),
  created_date         DATE,
  modified_by          VARCHAR2(50),
  modified_date        DATE,
  post_date            DATE,
  posted_user_name     VARCHAR2(50),
  doc_reference_no_key VARCHAR2(500)
)
;
alter table IL_COMM_UNIT_PROCESS_HD_T
  add constraint PK_IL_COMM_UNIT_PROCESS_HD_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_COMM_UNIT_PROCESS_DTL_T
prompt =========================================
prompt
create table IL_COMM_UNIT_PROCESS_DTL_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  process_id        NUMBER not null,
  serial_no         NUMBER not null,
  advice_no         VARCHAR2(10),
  advice_date       DATE,
  advice_type       VARCHAR2(10),
  advice_amount     NUMBER,
  detail_sr_no      NUMBER,
  sl_sr_no          NUMBER,
  fiscal_year       NUMBER,
  commission_amount NUMBER,
  created_by        VARCHAR2(50),
  created_date      DATE,
  modified_by       VARCHAR2(50),
  modified_date     DATE
)
;
alter table IL_COMM_UNIT_PROCESS_DTL_T
  add constraint PK_IL_COMM_UNIT_PROCESS_DTL_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID, SERIAL_NO);
alter table IL_COMM_UNIT_PROCESS_DTL_T
  add constraint FK_IL_COMM_UNIT_PROCESS_DTL_T foreign key (ORG_ID, BRANCH_ID, PROCESS_ID)
  references IL_COMM_UNIT_PROCESS_HD_T (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_CONSENT_DTL_T
prompt ===============================
prompt
create table IL_CONSENT_DTL_T
(
  org_id            NUMBER not null,
  header_rec_id     NUMBER not null,
  detail_id         NUMBER not null,
  checklist_id      NUMBER,
  checklist_status  NUMBER,
  client_ip_address VARCHAR2(100),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_CONSENT_DTL_T
  add constraint PK_IL_CONSENT_DTL_T primary key (ORG_ID, HEADER_REC_ID, DETAIL_ID);

prompt
prompt Creating table IL_CONSENT_HEADER_T
prompt ==================================
prompt
create table IL_CONSENT_HEADER_T
(
  org_id                 NUMBER,
  header_rec_id          NUMBER,
  proposal_master_ref_no VARCHAR2(100),
  url_auth_code          VARCHAR2(500),
  url_status             VARCHAR2(1),
  url_timer              NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;

prompt
prompt Creating table IL_CONSENT_OTP
prompt =============================
prompt
create table IL_CONSENT_OTP
(
  org_id         NUMBER not null,
  rec_id         NUMBER not null,
  auth_code      VARCHAR2(150) not null,
  email_otp_code VARCHAR2(4),
  sim_otp_code   VARCHAR2(4),
  status         VARCHAR2(1)
)
;
alter table IL_CONSENT_OTP
  add constraint PK_IL_CONSENT_OTP primary key (ORG_ID, REC_ID, AUTH_CODE);

prompt
prompt Creating table IL_CUSTOM_FORMS_FIELDS_T
prompt =======================================
prompt
create table IL_CUSTOM_FORMS_FIELDS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  form_id           NUMBER not null,
  field_id          NUMBER not null,
  field_desc        VARCHAR2(500),
  field_type        VARCHAR2(2),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  display_order     NUMBER,
  valueset_id       NUMBER,
  field_db_name     VARCHAR2(500)
)
;
alter table IL_CUSTOM_FORMS_FIELDS_T
  add constraint PK_IL_CUSTOM_FORMS_FIELDS_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, FORM_ID, FIELD_ID);

prompt
prompt Creating table IL_CUSTOM_FORMS_SETUP_T
prompt ======================================
prompt
create table IL_CUSTOM_FORMS_SETUP_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  form_id           NUMBER not null,
  form_desc         VARCHAR2(50),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_CUSTOM_FORMS_SETUP_T
  add constraint PK_IL_CUSTOM_FORMS_SETUP_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, FORM_ID);

prompt
prompt Creating table IL_DAY_END_BULK_LOG_T
prompt ====================================
prompt
create table IL_DAY_END_BULK_LOG_T
(
  org_id            NUMBER not null,
  proposal_no       VARCHAR2(50) not null,
  policy_no         VARCHAR2(50) not null,
  comm_date         DATE,
  issue_date        DATE,
  process_tag       VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  doc_reference_key VARCHAR2(50)
)
;
alter table IL_DAY_END_BULK_LOG_T
  add constraint PK_DAY_END_BULK primary key (ORG_ID, PROPOSAL_NO, POLICY_NO);

prompt
prompt Creating table IL_DAY_END_PROCESSHD_T
prompt =====================================
prompt
create table IL_DAY_END_PROCESSHD_T
(
  org_id             NUMBER not null,
  serial_no          NUMBER not null,
  process_status     VARCHAR2(15),
  process_message    VARCHAR2(500),
  quarterly_stmt_tag VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  dayend_date        DATE,
  process_date       DATE,
  start_date         DATE,
  end_date           DATE
)
;
alter table IL_DAY_END_PROCESSHD_T
  add constraint PK_DAY_END_HD primary key (ORG_ID, SERIAL_NO);

prompt
prompt Creating table IL_DAY_END_PROCESSDTL_T
prompt ======================================
prompt
create table IL_DAY_END_PROCESSDTL_T
(
  org_id            NUMBER not null,
  serial_no         NUMBER not null,
  detail_sr_no      NUMBER not null,
  doc_reference_key VARCHAR2(100) not null,
  process_type      NUMBER,
  process_status    VARCHAR2(15),
  process_message   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE
)
;
alter table IL_DAY_END_PROCESSDTL_T
  add constraint PK_DAY_END_DTL primary key (ORG_ID, SERIAL_NO, DETAIL_SR_NO, DOC_REFERENCE_KEY);
alter table IL_DAY_END_PROCESSDTL_T
  add constraint FK_DAY_END_DTL foreign key (ORG_ID, SERIAL_NO)
  references IL_DAY_END_PROCESSHD_T (ORG_ID, SERIAL_NO);

prompt
prompt Creating table IL_DAY_END_PROCESS_T
prompt ===================================
prompt
create table IL_DAY_END_PROCESS_T
(
  org_id            NUMBER not null,
  doc_reference_key VARCHAR2(100) not null,
  serial_no         NUMBER not null,
  process_date      DATE,
  process_status    VARCHAR2(15),
  process_message   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  dayend_date       DATE
)
;
alter table IL_DAY_END_PROCESS_T
  add constraint PK_DAY_END primary key (ORG_ID, DOC_REFERENCE_KEY, SERIAL_NO);

prompt
prompt Creating table IL_DECISION_REASON_SETUP_T
prompt =========================================
prompt
create table IL_DECISION_REASON_SETUP_T
(
  org_id           NUMBER not null,
  reason_code      NUMBER not null,
  reason_desc      VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DECISION_REASON_SETUP_T
  add constraint PK_IL_DEC_REASON primary key (ORG_ID, REASON_CODE);
alter table IL_DECISION_REASON_SETUP_T
  add constraint FK_IL_DEC_REASON_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_DECISION_SETUP_T
prompt ==================================
prompt
create table IL_DECISION_SETUP_T
(
  org_id                NUMBER not null,
  decision_code         NUMBER not null,
  decision_desc         VARCHAR2(50),
  active                VARCHAR2(1),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  benefit_status        VARCHAR2(1),
  manual_code           NUMBER,
  status_code           NUMBER,
  allow_deci_uw_pending VARCHAR2(1)
)
;
alter table IL_DECISION_SETUP_T
  add constraint PK_IL_DEC_SETUP primary key (ORG_ID, DECISION_CODE);
alter table IL_DECISION_SETUP_T
  add constraint FK_DOC_STATUS_DECISION foreign key (ORG_ID, STATUS_CODE)
  references IL_DOC_STATUS_SETUP_T (ORG_ID, STATUS_CODE);
alter table IL_DECISION_SETUP_T
  add constraint FK_IL_DEC_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_DECISION_REQ_MAP_T
prompt ====================================
prompt
create table IL_DECISION_REQ_MAP_T
(
  org_id           NUMBER not null,
  decision_code    NUMBER not null,
  req_type_code    NUMBER not null,
  req_code         NUMBER not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DECISION_REQ_MAP_T
  add constraint PK_IL_DEC_REQ_MAP primary key (ORG_ID, DECISION_CODE, REQ_TYPE_CODE, REQ_CODE);
alter table IL_DECISION_REQ_MAP_T
  add constraint FK_IL_DEC_REQ_MAP_DEC foreign key (ORG_ID, DECISION_CODE)
  references IL_DECISION_SETUP_T (ORG_ID, DECISION_CODE);
alter table IL_DECISION_REQ_MAP_T
  add constraint FK_IL_DEC_REQ_MAP_REQ foreign key (ORG_ID, REQ_CODE)
  references GLAS_UNDWT_REQ_SETUP_T (ORG_ID, REQ_CODE);

prompt
prompt Creating table IL_DEDUCTION_TYPE_SETUP_T
prompt ========================================
prompt
create table IL_DEDUCTION_TYPE_SETUP_T
(
  org_id              NUMBER not null,
  deduction_type_code NUMBER not null,
  description         VARCHAR2(500),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table IL_DEDUCTION_TYPE_SETUP_T
  add constraint PK_DEDUCTION_TYPE_SETUP primary key (ORG_ID, DEDUCTION_TYPE_CODE);

prompt
prompt Creating table IL_DOC_ADDRESS_T
prompt ===============================
prompt
create table IL_DOC_ADDRESS_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  takaful_type         VARCHAR2(1) not null,
  document_type        VARCHAR2(1) not null,
  document_no          VARCHAR2(10) not null,
  record_type          VARCHAR2(1) not null,
  document_year        VARCHAR2(10) not null,
  issue_count          NUMBER not null,
  endorsement_no       NUMBER not null,
  application_id       NUMBER not null,
  client_code          NUMBER not null,
  sr_no                NUMBER not null,
  address_type         VARCHAR2(300) not null,
  address_description  VARCHAR2(1000),
  country_code         VARCHAR2(100),
  state_code           VARCHAR2(100),
  city_code            VARCHAR2(100),
  house_no             VARCHAR2(100),
  unit_no              VARCHAR2(100),
  building             VARCHAR2(100),
  zip_code             VARCHAR2(100),
  correspondence_tag   VARCHAR2(10),
  current_address      VARCHAR2(10),
  entry_type           VARCHAR2(30),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  permanent_address    VARCHAR2(200),
  current_address_desc VARCHAR2(1000),
  current_country      VARCHAR2(200),
  current_city         VARCHAR2(200),
  current_state        VARCHAR2(200)
)
;
alter table IL_DOC_ADDRESS_T
  add constraint PK_IL_DOC_CL_ADDR primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ADDRESS_TYPE, SR_NO);

prompt
prompt Creating table IL_DOC_HEADER_T
prompt ==============================
prompt
create table IL_DOC_HEADER_T
(
  org_id                       NUMBER not null,
  branch_id                    NUMBER not null,
  main_product_code            NUMBER not null,
  sub_product_code             NUMBER not null,
  takaful_type                 VARCHAR2(1) not null,
  document_type                VARCHAR2(1) not null,
  document_no                  VARCHAR2(10) not null,
  record_type                  VARCHAR2(1) not null,
  document_year                VARCHAR2(10) not null,
  issue_count                  NUMBER not null,
  endorsement_no               NUMBER not null,
  application_id               NUMBER not null,
  doc_reference_no             VARCHAR2(50),
  client_code                  VARCHAR2(20),
  folio_code                   VARCHAR2(20),
  sum_insured                  NUMBER(15,2),
  gross_premium                NUMBER(15,2),
  net_premium                  NUMBER(15,2),
  doc_charges                  NUMBER(15,2),
  remarks                      VARCHAR2(500),
  premium_basis                VARCHAR2(3),
  producer_code                NUMBER,
  currency_code                VARCHAR2(10),
  payment_mode                 VARCHAR2(10),
  payment_term                 NUMBER,
  policy_term                  NUMBER,
  member_id_label              VARCHAR2(10),
  wakala_fee                   NUMBER(15,2),
  loading_ovrd_rate            NUMBER(9,6),
  loading_rate                 NUMBER(9,6),
  policy_fee                   NUMBER(15,2),
  overriding_rate              NUMBER(9,6),
  exchange_rate                NUMBER(9,6),
  next_due_date                DATE,
  quotation_date               DATE,
  sub_document_no              NUMBER,
  standard_treaty              VARCHAR2(10),
  post_date                    DATE,
  posting_tag                  VARCHAR2(1),
  post_user                    VARCHAR2(50),
  name1                        VARCHAR2(50),
  name2                        VARCHAR2(50),
  dob1                         DATE,
  dob2                         DATE,
  age1                         NUMBER(3),
  age2                         NUMBER(3),
  gender1                      VARCHAR2(1),
  gender2                      VARCHAR2(1),
  sum_covered                  NUMBER(15,2),
  sum_covered_index            NUMBER(15,2),
  contribution_index           NUMBER(15,2),
  basic_contribution           NUMBER(15,2),
  gross_contribution           NUMBER(15,2),
  net_contribution             NUMBER(15,2),
  cover_multiple               NUMBER(3),
  cont_margin                  NUMBER(9,6),
  last_age_index               NUMBER(3),
  expected_claim               NUMBER(15,2),
  investment_income            NUMBER(15,2),
  second_life                  VARCHAR2(1),
  bid_offer                    NUMBER(15,2),
  issue_date                   DATE,
  comm_date                    DATE,
  expiry_date                  DATE,
  converted_doc_no             VARCHAR2(50),
  proposal_date                DATE,
  occupational_class           VARCHAR2(5),
  creation_date                DATE,
  created_by                   VARCHAR2(50),
  last_update_date             DATE,
  last_updated_by              VARCHAR2(50),
  post_by                      VARCHAR2(50),
  convert_tag                  VARCHAR2(1),
  revised_tag                  VARCHAR2(1),
  base_doc_no                  VARCHAR2(50),
  cnic_issue_date              DATE,
  cnic_expiry_date             DATE,
  cnic_no                      VARCHAR2(50),
  waqala_fee                   NUMBER,
  quotation_ref_no             VARCHAR2(50),
  alteration_type              VARCHAR2(50),
  master_ref_no                VARCHAR2(50),
  cost_center_code             VARCHAR2(50),
  alteration_date              DATE,
  advance_amount               NUMBER,
  payer_same_tag               VARCHAR2(1),
  submit_tag                   VARCHAR2(1),
  undwt_status                 NUMBER,
  sum_covered_modal            NUMBER,
  basic_contribution_modal     NUMBER,
  undwt_decision               NUMBER,
  converted_policy_no          VARCHAR2(50),
  convert_proposal             VARCHAR2(50),
  risk_profile                 VARCHAR2(50),
  contribution_type            VARCHAR2(50),
  risk_profile_comments        VARCHAR2(500),
  illustration_ref_no          VARCHAR2(50),
  customer_profile_comments    VARCHAR2(2000),
  channel_id                   NUMBER,
  model_id                     NUMBER,
  agent_id                     NUMBER,
  partner_id                   NUMBER,
  topup_amount                 NUMBER,
  rejected_tag                 VARCHAR2(50),
  total_contribution_modal     NUMBER,
  cancel_tag                   VARCHAR2(1),
  cancel_by                    VARCHAR2(50),
  cancel_date                  DATE,
  cancellation_remarks         VARCHAR2(500),
  cancellation_type            NUMBER,
  doc_dispatch_date            DATE,
  doc_receive_date             DATE,
  chargeable_from              NUMBER,
  chargeable_amount            NUMBER,
  middle_name1                 VARCHAR2(50),
  last_name1                   VARCHAR2(50),
  alteration_issue_date        DATE,
  policy_posted                VARCHAR2(1),
  non_financial_activity       VARCHAR2(20),
  non_financial_sub_activity   VARCHAR2(20),
  undwt_decision_reason        VARCHAR2(500),
  undwt_notes                  VARCHAR2(500),
  underwriting_il_create       VARCHAR2(20),
  proposal_approved_by         VARCHAR2(20),
  undwt_other_exculusions      VARCHAR2(500),
  undwt_decision_system        NUMBER,
  proposal_approved_date       DATE,
  partner_branch_id            NUMBER,
  base_doc_no_key              VARCHAR2(150),
  illustration_ref_no_key      VARCHAR2(150),
  converted_doc_no_key         VARCHAR2(150),
  agent_branch_id              VARCHAR2(20),
  lock_tag                     VARCHAR2(20),
  doc_reference_key            VARCHAR2(100),
  initial_topup                NUMBER,
  receive_ack_date             DATE,
  cancellation_date            DATE,
  medical_amount               NUMBER,
  day_end_process_tag          VARCHAR2(1),
  day_end_process_date         DATE,
  submit_date                  DATE,
  submit_by                    VARCHAR2(50),
  cover_multiple_old           NUMBER(3),
  age1_old                     NUMBER(3),
  gender1_old                  VARCHAR2(1),
  payment_mode_old             VARCHAR2(10),
  payment_term_old             NUMBER,
  policy_term_old              NUMBER,
  sum_covered_old              NUMBER(15,2),
  dob1_old                     DATE,
  sum_covered_modal_old        NUMBER,
  basic_contribution_modal_old NUMBER,
  basic_contribution_old       NUMBER,
  fund_switch_charges          NUMBER,
  fund_change_tag              VARCHAR2(1),
  consignment_no               VARCHAR2(150),
  name1_old                    VARCHAR2(50),
  middle_name1_old             VARCHAR2(50),
  last_name1_old               VARCHAR2(50),
  cnic_no_old                  VARCHAR2(30),
  return_tag                   VARCHAR2(1),
  lock_by                      VARCHAR2(50),
  lock_date                    DATE,
  il_revise_tag                VARCHAR2(1),
  auto_renewal_topup_tag       CHAR(1),
  auto_renewal_topup_tag_old   CHAR(1),
  policy_hold_flag             VARCHAR2(1),
  sum_covered_index_old        NUMBER(15,2),
  contribution_index_old       NUMBER(15,2),
  first_submission_date        DATE,
  face_value_increase_tag      VARCHAR2(1),
  approved_date                DATE,
  bank_representative_name     VARCHAR2(150),
  bank_representative_code     VARCHAR2(100),
  occupational_industry        VARCHAR2(250),
  occupation                   VARCHAR2(250),
  reject_comments              VARCHAR2(500),
  total_score                  NUMBER,
  cbc_required_tag             VARCHAR2(1),
  pr_date                      DATE,
  pr_amount                    NUMBER,
  anf_option                   VARCHAR2(25),
  niv_adjustment_amount        NUMBER,
  niv_adjustment_amount_adhoc  NUMBER,
  assignee_tag                 VARCHAR2(1),
  bank_ref_no                  VARCHAR2(50),
  valid_tag                    VARCHAR2(1),
  proposal_entry_date          DATE,
  index_change_type            VARCHAR2(1),
  cnic_no2                     VARCHAR2(50),
  cnic_issue_date2             DATE,
  cnic_expiry_date2            DATE,
  relation_code2               NUMBER,
  supr_approval_reqd           VARCHAR2(1),
  supr_forward_tag             VARCHAR2(1),
  supr_action_taken            VARCHAR2(1),
  forwarded_by                 VARCHAR2(50),
  smoker_tag                   VARCHAR2(1),
  sum_covered_orig             NUMBER,
  clone_tag                    VARCHAR2(1),
  clone_ref_no                 VARCHAR2(150),
  consent_status               VARCHAR2(1),
  consent_date                 DATE,
  decline_tag                  VARCHAR2(1),
  description_of_changes       VARCHAR2(300)
)
;
alter table IL_DOC_HEADER_T
  add constraint PK_IL_DOC_HEADER primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_CHANNEL_MODEL_PRP_HD foreign key (ORG_ID, CHANNEL_ID, MODEL_ID)
  references AM_CHANNEL_MODEL_T (ORG_ID, CHANNEL_ID, MODEL_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_CHANNEL_PRP_HD foreign key (ORG_ID, CHANNEL_ID)
  references AM_DISTRIBUTION_CHANNEL_T (ORG_ID, CHANNEL_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_DOC_AGENT foreign key (ORG_ID, AGENT_ID)
  references AM_AGENT_T (ORG_ID, AGENT_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_DOC_AGENT_PARTNER foreign key (ORG_ID, AGENT_ID, PARTNER_ID)
  references AM_AGENT_PARTNER_T (ORG_ID, AGENT_ID, PARTNER_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_IL_DOC_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);
alter table IL_DOC_HEADER_T
  add constraint FK_UNDWT_DECISION foreign key (ORG_ID, UNDWT_DECISION)
  references IL_DECISION_SETUP_T (ORG_ID, DECISION_CODE);
alter table IL_DOC_HEADER_T
  add constraint FK_UNDWT_STATUS foreign key (ORG_ID, UNDWT_STATUS)
  references IL_DOC_STATUS_SETUP_T (ORG_ID, STATUS_CODE);

prompt
prompt Creating table IL_DOC_AGENT_T
prompt =============================
prompt
create table IL_DOC_AGENT_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  main_product_code           NUMBER not null,
  sub_product_code            NUMBER not null,
  takaful_type                VARCHAR2(1) not null,
  document_type               VARCHAR2(1) not null,
  document_no                 VARCHAR2(10) not null,
  record_type                 VARCHAR2(1) not null,
  document_year               VARCHAR2(10) not null,
  issue_count                 NUMBER not null,
  endorsement_no              NUMBER not null,
  application_id              NUMBER not null,
  serial_no                   NUMBER not null,
  channel_id                  NUMBER,
  model_id                    NUMBER,
  partner_id                  NUMBER,
  designation_id              NUMBER,
  designation_level           NUMBER,
  commission_rate             NUMBER,
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  agency_type                 VARCHAR2(10),
  agent_name                  VARCHAR2(500),
  agent_id                    NUMBER,
  commission_rate_topup       NUMBER,
  policy_term                 NUMBER,
  commission_amount           NUMBER,
  commission_amount_topup     NUMBER,
  commission_nature           VARCHAR2(1),
  jump_tag                    VARCHAR2(1),
  commission_type             VARCHAR2(1),
  deferred_tag                VARCHAR2(1),
  start_date                  DATE,
  end_date                    DATE,
  jump_tag_adhoc              VARCHAR2(1),
  jump_tag_bus_credit_adhoc   VARCHAR2(1),
  jump_tag_bus_credit_regular VARCHAR2(1),
  bus_credit_adhoc            NUMBER,
  bus_credit_regular          NUMBER
)
;
alter table IL_DOC_AGENT_T
  add constraint PK_IL_DOC_AGENT primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_AGENT_T
  add constraint FK_IL_DOC_AGENT_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_ALLOCATIONHD_T
prompt ====================================
prompt
create table IL_DOC_ALLOCATIONHD_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  main_product_code         NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  allocation_id             NUMBER not null,
  transaction_date          DATE,
  allocation_type           NUMBER not null,
  amount                    NUMBER,
  due_date                  DATE,
  policy_year               NUMBER,
  member_age                NUMBER,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_updated_by           VARCHAR2(50),
  last_update_date          DATE,
  previous_year_cash_value  NUMBER,
  ptf_rate                  NUMBER,
  admin_charges             NUMBER,
  month_no                  NUMBER,
  admin_indexation          NUMBER,
  imc_rate                  NUMBER,
  imc_rate_topup            NUMBER,
  installment_no            NUMBER,
  tabarru_discount_rate     NUMBER,
  tabarru_discount_net_rate NUMBER,
  year_wise_lapse_rate      NUMBER
)
;
alter table IL_DOC_ALLOCATIONHD_T
  add constraint PK_ILL_DOC_ALL_HD primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID);
alter table IL_DOC_ALLOCATIONHD_T
  add constraint FK_ALLOC_TYPE foreign key (ORG_ID, ALLOCATION_TYPE)
  references IL_ALLOC_TYPE_SETUP_T (ORG_ID, TYPE_CODE);
alter table IL_DOC_ALLOCATIONHD_T
  add constraint FK_ILL_DOC_ALL_HD_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_ALLOCATIONDTL_T
prompt =====================================
prompt
create table IL_DOC_ALLOCATIONDTL_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  main_product_code      NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  allocation_id          NUMBER not null,
  sub_serial_no          NUMBER not null,
  transaction_type       NUMBER,
  sum_covered            NUMBER,
  contribution_paid_amt  NUMBER,
  pia_rate               NUMBER,
  pia_amount             NUMBER,
  narration              VARCHAR2(500),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  month_no               NUMBER,
  reversal_tag           VARCHAR2(1),
  transaction_date       DATE,
  allocation_type        NUMBER not null,
  sub_serial_no_rev      NUMBER,
  reverse_date           DATE,
  reverse_by             VARCHAR2(50),
  prev_cash_value        NUMBER,
  current_cash_value     NUMBER,
  pia_net_rate           NUMBER,
  pia_net_amount         NUMBER,
  benefit_code           NUMBER,
  loading_code           NUMBER,
  member_age             NUMBER,
  allocation_posting_tag VARCHAR2(1),
  allocation_post_by     VARCHAR2(50),
  allocation_post_date   DATE,
  comm_posting_tag       VARCHAR2(1),
  comm_post_by           VARCHAR2(50),
  comm_post_date         DATE,
  comm_unit_process_id   NUMBER,
  comm_processed_tag     VARCHAR2(1),
  source_ref_no          VARCHAR2(50),
  requested_date         DATE,
  due_date               DATE,
  loading_type           VARCHAR2(10)
)
;
alter table IL_DOC_ALLOCATIONDTL_T
  add constraint PK_ILL_DOC_ALL_DTL primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO);
alter table IL_DOC_ALLOCATIONDTL_T
  add constraint FK_ILL_DOC_ALL_DTL_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID)
  references IL_DOC_ALLOCATIONHD_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID);
alter table IL_DOC_ALLOCATIONDTL_T
  add constraint FK_TRANS_TYPE foreign key (ORG_ID, TRANSACTION_TYPE)
  references IL_ALLOC_TRANS_TYPE_T (ORG_ID, TYPE_CODE);

prompt
prompt Creating table IL_DOC_ALLOC_DTL_BREAKUP_T
prompt =========================================
prompt
create table IL_DOC_ALLOC_DTL_BREAKUP_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  main_product_code      NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  allocation_id          NUMBER not null,
  sub_serial_no          NUMBER not null,
  fund_code              NUMBER not null,
  unit_process_date      DATE,
  fund_share             NUMBER,
  total_net_amount       NUMBER,
  unit_price             NUMBER,
  no_of_units            NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  deduction_type         VARCHAR2(10),
  allocation_type        NUMBER not null,
  transaction_type       NUMBER,
  month_no               NUMBER,
  transaction_date       DATE,
  reversal_tag           VARCHAR2(1),
  sub_serial_no_rev      NUMBER,
  reverse_date           DATE,
  reverse_by             VARCHAR2(50),
  post_date              DATE,
  posting_tag            VARCHAR2(1),
  post_user              VARCHAR2(50),
  bid_offer_rate         NUMBER,
  bid_offer_amount       NUMBER,
  ri_net_amount          NUMBER,
  allocation_posting_tag VARCHAR2(1),
  unit_posting_tag       VARCHAR2(1),
  allocation_post_by     VARCHAR2(50),
  allocation_post_date   DATE,
  unit_post_by           VARCHAR2(50),
  unit_post_date         DATE,
  requested_date         DATE,
  due_date               DATE,
  pia_amount             NUMBER
)
;
alter table IL_DOC_ALLOC_DTL_BREAKUP_T
  add constraint PK_ILL_DOC_ALL_DTL_FBR primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, FUND_CODE);
alter table IL_DOC_ALLOC_DTL_BREAKUP_T
  add constraint FK_ILL_DOC_ALL_DTL_FBR_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO)
  references IL_DOC_ALLOCATIONDTL_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO);

prompt
prompt Creating table IL_DOC_ALLOC_DTL_CHARGES_NEW_T
prompt =============================================
prompt
create table IL_DOC_ALLOC_DTL_CHARGES_NEW_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  allocation_id     NUMBER not null,
  sub_serial_no     NUMBER not null,
  serial_no         NUMBER not null,
  charge_code       NUMBER,
  charge_rate       NUMBER,
  charge_amount     NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  allocation_type   NUMBER not null,
  sub_serial_no_rev NUMBER,
  transaction_type  NUMBER,
  month_no          NUMBER,
  reversal_tag      VARCHAR2(1),
  reverse_date      DATE,
  reverse_by        VARCHAR2(50),
  transaction_date  DATE,
  charge_nature     VARCHAR2(1),
  rider_code        NUMBER,
  charge_net_rate   NUMBER,
  charge_net_amount NUMBER
)
;
alter table IL_DOC_ALLOC_DTL_CHARGES_NEW_T
  add constraint PK_ILL_DOC_ALL_DTL_CH_N primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, SERIAL_NO);

prompt
prompt Creating table IL_DOC_ALLOC_DTL_CHARGES_T
prompt =========================================
prompt
create table IL_DOC_ALLOC_DTL_CHARGES_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER,
  application_id    NUMBER not null,
  allocation_id     NUMBER not null,
  sub_serial_no     NUMBER not null,
  charge_type       NUMBER not null,
  charge_rate       NUMBER,
  charge_amount     NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  allocation_type   NUMBER not null,
  sub_serial_no_rev NUMBER,
  transaction_type  NUMBER,
  month_no          NUMBER,
  reversal_tag      VARCHAR2(1),
  reverse_date      DATE,
  reverse_by        VARCHAR2(50),
  transaction_date  DATE,
  charge_nature     VARCHAR2(1),
  charge_code       NUMBER,
  rider_code        NUMBER
)
;
alter table IL_DOC_ALLOC_DTL_CHARGES_T
  add constraint PK_ILL_DOC_ALL_DTL_CH primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, CHARGE_TYPE);

prompt
prompt Creating table IL_DOC_ALLOC_DTL_COMM_T
prompt ======================================
prompt
create table IL_DOC_ALLOC_DTL_COMM_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  main_product_code           NUMBER not null,
  sub_product_code            NUMBER not null,
  takaful_type                VARCHAR2(1) not null,
  document_type               VARCHAR2(1) not null,
  document_no                 VARCHAR2(10) not null,
  record_type                 VARCHAR2(1) not null,
  document_year               VARCHAR2(10) not null,
  issue_count                 NUMBER not null,
  endorsement_no              NUMBER not null,
  application_id              NUMBER not null,
  allocation_id               NUMBER not null,
  sub_serial_no               NUMBER not null,
  serial_no                   NUMBER not null,
  channel_id                  NUMBER,
  model_id                    NUMBER,
  partner_id                  NUMBER,
  designation_id              NUMBER,
  designation_level           NUMBER,
  commission_rate             NUMBER,
  transaction_date            DATE,
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  month_no                    NUMBER,
  allocation_type             NUMBER not null,
  transaction_type            NUMBER,
  commission_amount           NUMBER,
  deduction_type              VARCHAR2(10),
  agent_id                    NUMBER,
  commission_rate_topup       NUMBER,
  agency_type                 VARCHAR2(1),
  reversal_tag                VARCHAR2(1),
  sub_serial_no_rev           NUMBER,
  reverse_date                DATE,
  reverse_by                  VARCHAR2(50),
  policy_term                 NUMBER,
  pk_serial_no                NUMBER not null,
  charge_serial_no            NUMBER,
  rider_code                  NUMBER,
  commission_nature           VARCHAR2(1),
  jump_tag                    VARCHAR2(1),
  deferred_tag                VARCHAR2(1),
  commission_type             VARCHAR2(1),
  gross_contribution          NUMBER,
  end_date                    DATE,
  installment_no              NUMBER,
  jump_tag_adhoc              VARCHAR2(1),
  jump_tag_bus_credit_adhoc   VARCHAR2(1),
  jump_tag_bus_credit_regular VARCHAR2(1),
  bus_credit_adhoc            NUMBER,
  bus_credit_regular          NUMBER
)
;
alter table IL_DOC_ALLOC_DTL_COMM_T
  add constraint PK_ILL_DOC_ALL_DTL_COMM primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, SERIAL_NO, PK_SERIAL_NO);

prompt
prompt Creating table IL_DOC_ALLOC_DTL_REINS_T
prompt =======================================
prompt
create table IL_DOC_ALLOC_DTL_REINS_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  allocation_id            NUMBER not null,
  sub_serial_no            NUMBER not null,
  allocation_type          NUMBER not null,
  ri_sr_no                 NUMBER not null,
  charge_serial_no         NUMBER,
  company_retention        NUMBER,
  retention_sa             NUMBER,
  retention_contribution   NUMBER,
  quota_share              NUMBER,
  quota_share_sa           NUMBER,
  quota_share_contribution NUMBER,
  quota_share_limit        NUMBER,
  treaty_limit             NUMBER,
  transaction_date         DATE,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  transaction_type         NUMBER,
  month_no                 NUMBER,
  reversal_tag             VARCHAR2(1),
  sub_serial_no_rev        NUMBER,
  reverse_date             DATE,
  reverse_by               VARCHAR2(50),
  sum_covered              NUMBER,
  net_contribution         NUMBER,
  deduction_type           VARCHAR2(1),
  rider_code               NUMBER,
  net_rate                 NUMBER
)
;
alter table IL_DOC_ALLOC_DTL_REINS_T
  add constraint PK_ILL_DOC_ALL_DTL_REINS primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, RI_SR_NO);
alter table IL_DOC_ALLOC_DTL_REINS_T
  add constraint FK_ILL_DOC_ALL_DTL_REINS_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO)
  references IL_DOC_ALLOCATIONDTL_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO);

prompt
prompt Creating table IL_DOC_ALT_COMMENTS_T
prompt ====================================
prompt
create table IL_DOC_ALT_COMMENTS_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  comments          VARCHAR2(2000),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_ALT_COMMENTS_T
  add constraint PK_DOC_ALT_COMMENTS primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, SERIAL_NO);

prompt
prompt Creating table IL_DOC_ASSIGNEE_T
prompt ================================
prompt
create table IL_DOC_ASSIGNEE_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  assignee_code     VARCHAR2(150),
  assignment_date   DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  remarks           VARCHAR2(700),
  terms_conditions  VARCHAR2(700),
  attachment_path   VARCHAR2(250)
)
;
alter table IL_DOC_ASSIGNEE_T
  add constraint PK_DOC_ASGNE_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_ASSIGNEE_T
  add constraint FK_DOC_ASGNE_T foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DUPLICATE_POLICY_HD_T
prompt =======================================
prompt
create table IL_DUPLICATE_POLICY_HD_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  process_id                  NUMBER not null,
  sett_no                     NUMBER,
  sett_date                   DATE,
  sett_type                   NUMBER,
  sett_amount                 NUMBER,
  sett_remarks                VARCHAR2(500),
  sett_payable_to             NUMBER,
  pmd_ref_no                  VARCHAR2(50),
  payer_code                  NUMBER,
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  lock_flag                   VARCHAR2(1),
  post_flag                   VARCHAR2(1),
  posted_date                 DATE,
  posted_by                   VARCHAR2(50),
  cancel_flag                 VARCHAR2(1),
  cancel_date                 DATE,
  cancel_by                   VARCHAR2(50),
  request_date                DATE,
  sett_reason                 VARCHAR2(10),
  percentage                  NUMBER,
  amount_type                 VARCHAR2(30),
  pmd_ref_no_key              VARCHAR2(150),
  surrender_processing_fee    NUMBER,
  bank_name                   VARCHAR2(50),
  bank_branch                 VARCHAR2(50),
  bank_account                VARCHAR2(50),
  zakat_excemption            VARCHAR2(1),
  settlement_category_code    VARCHAR2(1),
  attachment_zakat_excemption VARCHAR2(4000),
  settlement_attachment       VARCHAR2(4000),
  payment_type                VARCHAR2(1),
  zakat_charges               NUMBER,
  net_settlement_amount       NUMBER,
  surrender_charges           NUMBER,
  settled_amount              NUMBER,
  advice_ref                  VARCHAR2(100),
  adjusted_amount             NUMBER,
  process_tag                 VARCHAR2(1),
  process_date                DATE,
  zakat_refund_tag            VARCHAR2(1),
  zakat_refund_id             NUMBER,
  regular_amount              NUMBER,
  topup_amount                NUMBER,
  lock_flag_zakat             VARCHAR2(1),
  post_flag_zakat             VARCHAR2(1),
  advice_key                  VARCHAR2(50),
  charges_applicable_tag      VARCHAR2(1),
  charges_to                  VARCHAR2(1)
)
;
alter table IL_DUPLICATE_POLICY_HD_T
  add constraint PK_IL_DUPLICATE_POLICY_HD_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_ATTACH_DUP_PMD_T
prompt ======================================
prompt
create table IL_DOC_ATTACH_DUP_PMD_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  process_id       NUMBER not null,
  attachment_code  NUMBER not null,
  document_for     VARCHAR2(50),
  file_path        VARCHAR2(500),
  attachment_type  VARCHAR2(200),
  attachment_desc  VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DOC_ATTACH_DUP_PMD_T
  add constraint PK_IL_DOC_ATTACH_DUP_PMD_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID, ATTACHMENT_CODE);
alter table IL_DOC_ATTACH_DUP_PMD_T
  add constraint FK_DOC_ATTACH_DUP_PMD foreign key (ORG_ID, BRANCH_ID, PROCESS_ID)
  references IL_DUPLICATE_POLICY_HD_T (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_ATTACH_POLICY_HOLD_T
prompt ==========================================
prompt
create table IL_DOC_ATTACH_POLICY_HOLD_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  process_id       NUMBER not null,
  application_id   NUMBER,
  attachment_code  NUMBER not null,
  file_path        VARCHAR2(500),
  attachment_desc  VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  document_ref_key VARCHAR2(100)
)
;
alter table IL_DOC_ATTACH_POLICY_HOLD_T
  add constraint PK_IL_DOC_ATTACH_POLICY_HOLD_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID, ATTACHMENT_CODE);

prompt
prompt Creating table IL_DOC_ATTACH_SETT_T
prompt ===================================
prompt
create table IL_DOC_ATTACH_SETT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  sett_no          NUMBER not null,
  application_id   NUMBER not null,
  attachment_code  NUMBER not null,
  file_path        VARCHAR2(500),
  attachment_type  VARCHAR2(200),
  attachment_desc  VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  document_for     VARCHAR2(50)
)
;
alter table IL_DOC_ATTACH_SETT_T
  add constraint PK_IL_DOC_ATTACH_SETT_T primary key (ORG_ID, BRANCH_ID, APPLICATION_ID, SETT_NO, ATTACHMENT_CODE);

prompt
prompt Creating table IL_DOC_ATTACH_T
prompt ==============================
prompt
create table IL_DOC_ATTACH_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  attachment_code   NUMBER not null,
  file_path         VARCHAR2(500),
  attachment_type   VARCHAR2(200),
  attachment_desc   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  document_for      VARCHAR2(50),
  uw_tag            VARCHAR2(1),
  settlement_tag    VARCHAR2(1),
  sett_code         NUMBER,
  topup_tag         VARCHAR2(1),
  customer_access   VARCHAR2(1)
)
;
alter table IL_DOC_ATTACH_T
  add constraint PK_IL_DOC_ATTACH_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ATTACHMENT_CODE);

prompt
prompt Creating table IL_TOPUP_REQUEST_T
prompt =================================
prompt
create table IL_TOPUP_REQUEST_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  top_up_id        NUMBER not null,
  topup_doc_no     VARCHAR2(100),
  topup_amount     NUMBER(15,2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  topup_desc       VARCHAR2(1000),
  submit_flag      VARCHAR2(20),
  transfer_date    DATE,
  request_date     DATE,
  topup_doc_no_key VARCHAR2(150),
  undwt_id         NUMBER,
  posting_tag      VARCHAR2(1),
  rejected_tag     VARCHAR2(1),
  post_by          VARCHAR2(50),
  post_date        DATE,
  rejected_by      VARCHAR2(50),
  rejected_date    DATE,
  return_tag       VARCHAR2(1),
  return_by        VARCHAR2(50),
  return_date      DATE,
  requirement_tag  VARCHAR2(1),
  approve_tag      VARCHAR2(1),
  approve_by       VARCHAR2(50),
  approve_date     DATE,
  process_by       VARCHAR2(50),
  process_tag      VARCHAR2(1),
  process_date     DATE
)
;
alter table IL_TOPUP_REQUEST_T
  add constraint PK_IL_TOPUP_REQUEST_T primary key (ORG_ID, BRANCH_ID, TOP_UP_ID);

prompt
prompt Creating table IL_DOC_ATTACH_TOP_UP_T
prompt =====================================
prompt
create table IL_DOC_ATTACH_TOP_UP_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  top_up_id        NUMBER not null,
  application_id   NUMBER,
  attachment_code  NUMBER not null,
  document_for     VARCHAR2(50),
  file_path        VARCHAR2(500),
  attachment_type  VARCHAR2(200),
  attachment_desc  VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DOC_ATTACH_TOP_UP_T
  add constraint PK_IL_DOC_ATTACH_TOP_UP_T primary key (ORG_ID, BRANCH_ID, TOP_UP_ID, ATTACHMENT_CODE);
alter table IL_DOC_ATTACH_TOP_UP_T
  add constraint FK_DOC_ATTACH_TOP_UP foreign key (ORG_ID, BRANCH_ID, TOP_UP_ID)
  references IL_TOPUP_REQUEST_T (ORG_ID, BRANCH_ID, TOP_UP_ID);

prompt
prompt Creating table IL_DOC_ATTACH_UNDWT_T
prompt ====================================
prompt
create table IL_DOC_ATTACH_UNDWT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  attachment_code   NUMBER not null,
  file_path         VARCHAR2(500),
  attachment_type   VARCHAR2(200),
  attachment_desc   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  document_for      VARCHAR2(50),
  process_id        NUMBER
)
;
alter table IL_DOC_ATTACH_UNDWT_T
  add constraint PK_IL_DOC_ATTACH_UND_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ATTACHMENT_CODE);

prompt
prompt Creating table IL_MONEY_TRANSFER_HEADER_T
prompt =========================================
prompt
create table IL_MONEY_TRANSFER_HEADER_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  money_transfer_id        NUMBER not null,
  transfer_to_doc_no       VARCHAR2(100),
  transfer_to_reg_amount   NUMBER(15,2),
  transfer_to_adhoc_amount NUMBER(15,2),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  money_transfer_desc      VARCHAR2(250),
  lock_flag                VARCHAR2(20),
  post_flag                VARCHAR2(20),
  transfer_date            DATE,
  post_date                DATE,
  transfer_reason          VARCHAR2(20),
  request_date             DATE,
  posted_user_name         VARCHAR2(100),
  locked_by_user_name      VARCHAR2(100),
  transfer_to_doc_no_key   VARCHAR2(150)
)
;
alter table IL_MONEY_TRANSFER_HEADER_T
  add constraint PK_IL_MONEY_TRSFR primary key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID);

prompt
prompt Creating table IL_DOC_ATT_MONEY_TR_T
prompt ====================================
prompt
create table IL_DOC_ATT_MONEY_TR_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  money_transfer_id NUMBER not null,
  application_id    NUMBER,
  attachment_code   NUMBER not null,
  document_for      VARCHAR2(50),
  file_path         VARCHAR2(500),
  attachment_type   VARCHAR2(200),
  attachment_desc   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_ATT_MONEY_TR_T
  add constraint PK_IL_DOC_ATT_MONEY_TR_T primary key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID, ATTACHMENT_CODE);
alter table IL_DOC_ATT_MONEY_TR_T
  add constraint FK_DOC_ATT_MONEY_TR_T foreign key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID)
  references IL_MONEY_TRANSFER_HEADER_T (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID);

prompt
prompt Creating table IL_DOC_BENEFICIARY_T
prompt ===================================
prompt
create table IL_DOC_BENEFICIARY_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  main_product_code         NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  beneficiary_code          NUMBER not null,
  relation_code             NUMBER(9,6),
  percentage                NUMBER(15,2),
  amount                    NUMBER(15,2),
  cnic_no                   VARCHAR2(50),
  dob                       DATE,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  cnic_issue_date           DATE,
  cnic_expiry_date          DATE,
  beneficiary_name          VARCHAR2(50),
  is_guardian               VARCHAR2(1),
  guardian_name             VARCHAR2(50),
  guardian_relation_code    VARCHAR2(10),
  guardian_dob              DATE,
  guardian_cnic_no          VARCHAR2(50),
  guardian_cnic_issue_date  DATE,
  guardian_cnic_expiry_date DATE,
  mobile_no                 VARCHAR2(30),
  beneficiary_email         VARCHAR2(50),
  age                       NUMBER(3),
  guardian_mobile_no        NUMBER
)
;
alter table IL_DOC_BENEFICIARY_T
  add constraint PK_IL_DOC_BENEF primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE);
alter table IL_DOC_BENEFICIARY_T
  add constraint FK_IL_DOC_BENEF_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_BLK_PSTNG_DTL_LOG_T
prompt =========================================
prompt
create table IL_DOC_BLK_PSTNG_DTL_LOG_T
(
  org_id              NUMBER not null,
  process_id          NUMBER not null,
  serial_no           NUMBER not null,
  doc_reference_no    VARCHAR2(50),
  product_description VARCHAR2(250),
  client_description  VARCHAR2(200),
  doc_reference_key   VARCHAR2(100),
  message             VARCHAR2(250),
  status_tag          VARCHAR2(1),
  post_tag            VARCHAR2(1),
  post_date           DATE,
  post_by             VARCHAR2(50),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table IL_DOC_BLK_PSTNG_DTL_LOG_T
  add constraint PK_DOC_BLK_PSTNG_DTL_LOG_T primary key (ORG_ID, PROCESS_ID, SERIAL_NO);

prompt
prompt Creating table IL_DOC_BULK_POSTING_HD_T
prompt =======================================
prompt
create table IL_DOC_BULK_POSTING_HD_T
(
  org_id           NUMBER not null,
  process_id       NUMBER not null,
  from_date        DATE,
  to_date          DATE,
  process_date     DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  process_tag      VARCHAR2(1),
  process_by       VARCHAR2(50)
)
;
alter table IL_DOC_BULK_POSTING_HD_T
  add constraint PK_DOC_BLK_POSTNG primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_CASE_MANAGEMENT_T
prompt =======================================
prompt
create table IL_DOC_CASE_MANAGEMENT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  log_date          DATE,
  attachment_path   VARCHAR2(200),
  comments          VARCHAR2(1500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_CASE_MANAGEMENT_T
  add constraint PK_IL_DOC_CASE_M primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_CASE_MANAGEMENT_T
  add constraint FK_DOC_IL_CASE_M foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_CHARGES_T
prompt ===============================
prompt
create table IL_DOC_CHARGES_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  charge_code       NUMBER not null,
  charge_rate       NUMBER(9,6),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_update_date  DATE,
  last_updated_by   VARCHAR2(50),
  charges_amount    NUMBER,
  auto_insert       VARCHAR2(1)
)
;
alter table IL_DOC_CHARGES_T
  add constraint PK_IL_DOC_CHARGES primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CHARGE_CODE);
alter table IL_DOC_CHARGES_T
  add constraint FK_IL_DOC_CHARGES_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table IL_DOC_CHARGES_T
  add constraint FK_IL_DOC_CHARGE_CHARGE foreign key (ORG_ID, CHARGE_CODE)
  references TK_CHARGES_SETUP_T (ORG_ID, CHARGE_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_T
prompt ==============================
prompt
create table IL_DOC_CLIENT_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  main_product_code          NUMBER not null,
  sub_product_code           NUMBER not null,
  takaful_type               VARCHAR2(1) not null,
  document_type              VARCHAR2(1) not null,
  document_no                VARCHAR2(10) not null,
  record_type                VARCHAR2(1) not null,
  document_year              VARCHAR2(10) not null,
  issue_count                NUMBER not null,
  endorsement_no             NUMBER not null,
  application_id             NUMBER not null,
  client_code                NUMBER not null,
  client_desc                VARCHAR2(500),
  client_short_desc          VARCHAR2(50),
  address                    VARCHAR2(200),
  email                      VARCHAR2(500),
  phone                      VARCHAR2(15),
  active                     VARCHAR2(1),
  client_type                VARCHAR2(10),
  age                        NUMBER(3),
  dob                        DATE,
  height                     NUMBER,
  weight                     NUMBER,
  bmi                        NUMBER,
  occupation                 NUMBER,
  vat_reg_no                 VARCHAR2(50),
  vat_reg_date               DATE,
  nature_of_business         VARCHAR2(10),
  name_in_arabic             NVARCHAR2(500),
  contact_person_name        VARCHAR2(500),
  contact_person_no          VARCHAR2(50),
  contact_person_designation VARCHAR2(200),
  group_code                 VARCHAR2(10),
  height_scale               VARCHAR2(10),
  weight_scale               VARCHAR2(10),
  title                      VARCHAR2(10),
  client_nature              VARCHAR2(10),
  band_code                  NUMBER,
  client_category            VARCHAR2(10),
  cnic_no                    VARCHAR2(50),
  cnic_issue_date            DATE,
  cnic_expiry_date           DATE,
  father_name                VARCHAR2(50),
  maiden_name                VARCHAR2(50),
  marital_status             VARCHAR2(10),
  place_of_birth             VARCHAR2(50),
  passport_no                VARCHAR2(50),
  no_of_dependents           NUMBER,
  nationality_code           VARCHAR2(10),
  religion_code              NUMBER,
  working_tag                VARCHAR2(1),
  first_name                 VARCHAR2(50),
  middle_name                VARCHAR2(50),
  last_name                  VARCHAR2(50),
  annual_salary              NUMBER,
  total_sar                  NUMBER,
  referral_source            NUMBER,
  referral_other             VARCHAR2(10),
  gender                     VARCHAR2(10),
  nrp_tag                    VARCHAR2(1),
  communication_channel      VARCHAR2(10),
  father_cnic_no             VARCHAR2(50),
  father_cnic_issue_date     DATE,
  father_cnic_expiry_date    DATE,
  spouse_cnic_no             VARCHAR2(50),
  spouse_cnic_issue_date     DATE,
  spouse_cnic_expiry_date    DATE,
  category_code              VARCHAR2(10),
  source_of_income           NUMBER,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_update_date           DATE,
  last_updated_by            VARCHAR2(50),
  credit_limit               NUMBER,
  credit_limit_days          NUMBER,
  credit_limit_tag           VARCHAR2(1),
  entry_type                 VARCHAR2(10),
  residencey                 VARCHAR2(20),
  us_citizen                 VARCHAR2(1),
  pep                        VARCHAR2(1),
  pep_family                 VARCHAR2(1),
  risky_borders              VARCHAR2(1),
  risky_borders_address      VARCHAR2(1000)
)
;
alter table IL_DOC_CLIENT_T
  add constraint PK_IL_DOC_CLIENT primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);
alter table IL_DOC_CLIENT_T
  add constraint FK_IL_DOC_CLIENT_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_CLIENT_ANNX_01_T
prompt ======================================
prompt
create table IL_DOC_CLIENT_ANNX_01_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  main_product_code   NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  client_code         NUMBER not null,
  annexure_sno        NUMBER not null,
  fullname            VARCHAR2(50),
  birthdate           DATE,
  occupation          VARCHAR2(50),
  currentresidence    VARCHAR2(50),
  currentcountry      VARCHAR2(50),
  residencytype       VARCHAR2(20),
  stay                VARCHAR2(20),
  visithome           VARCHAR2(50),
  returndate          DATE,
  homeplan            VARCHAR2(50),
  estatedetails       VARCHAR2(50),
  bankaccounts        VARCHAR2(200),
  settle_plan         VARCHAR2(20),
  country_nationality VARCHAR2(20),
  stayduration        VARCHAR2(50),
  family_lived        VARCHAR2(50),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  died_tag            VARCHAR2(1)
)
;
alter table IL_DOC_CLIENT_ANNX_01_T
  add constraint PK_IL_DOC_CL_ANNX01 primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ANNEXURE_SNO);
alter table IL_DOC_CLIENT_ANNX_01_T
  add constraint FK_IL_DOC_CL_ANNX01_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_ANNX_03_T
prompt ======================================
prompt
create table IL_DOC_CLIENT_ANNX_03_T
(
  org_id                NUMBER not null,
  branch_id             NUMBER not null,
  main_product_code     NUMBER not null,
  sub_product_code      NUMBER not null,
  takaful_type          VARCHAR2(1) not null,
  document_type         VARCHAR2(1) not null,
  document_no           VARCHAR2(10) not null,
  record_type           VARCHAR2(1) not null,
  document_year         VARCHAR2(10) not null,
  issue_count           NUMBER not null,
  endorsement_no        NUMBER not null,
  application_id        NUMBER not null,
  client_code           NUMBER not null,
  annexure_sno          NUMBER not null,
  member_bearer         VARCHAR2(50),
  political_leader      VARCHAR2(50),
  political_involvement VARCHAR2(50),
  political_discussion  VARCHAR2(50),
  contribution          VARCHAR2(50),
  petition              VARCHAR2(50),
  travel_frequency      VARCHAR2(50),
  court_of_law          VARCHAR2(50),
  arm_guards            VARCHAR2(50),
  attempt               VARCHAR2(50),
  detail                VARCHAR2(1000),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  orgname               VARCHAR2(200),
  titlepositionheld     VARCHAR2(50),
  termofoffice          VARCHAR2(10)
)
;
alter table IL_DOC_CLIENT_ANNX_03_T
  add constraint PK_IL_DOC_CL_ANNX03 primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ANNEXURE_SNO);
alter table IL_DOC_CLIENT_ANNX_03_T
  add constraint FK_IL_DOC_CL_ANNX03_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_ANNX_04_T
prompt ======================================
prompt
create table IL_DOC_CLIENT_ANNX_04_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  client_code              NUMBER not null,
  annexure_sno             NUMBER not null,
  application_no           VARCHAR2(50),
  name_of_applicant        VARCHAR2(50),
  name_of_insured          VARCHAR2(50),
  name_of_beneficiary      VARCHAR2(50),
  mailing_address          VARCHAR2(200),
  us_citizen_applicant     VARCHAR2(1),
  us_citizen_insured       VARCHAR2(1),
  us_citizen_beneficiary   VARCHAR2(1),
  us_born_applicant        VARCHAR2(1),
  us_born_insured          VARCHAR2(1),
  us_born_beneficiary      VARCHAR2(1),
  us_phone_applicant       VARCHAR2(1),
  us_phone_insured         VARCHAR2(1),
  us_phone_beneficiary     VARCHAR2(1),
  us_sign_auth_applicant   VARCHAR2(1),
  us_sign_auth_insured     VARCHAR2(1),
  us_sign_auth_beneficiary VARCHAR2(1),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  died_tag                 VARCHAR2(1),
  us_citizen               VARCHAR2(1),
  us_born                  VARCHAR2(1),
  us_phone                 VARCHAR2(1),
  us_sign_auth             VARCHAR2(1),
  name                     VARCHAR2(50)
)
;
alter table IL_DOC_CLIENT_ANNX_04_T
  add constraint PK_IL_DOC_CL_ANNX04 primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ANNEXURE_SNO);
alter table IL_DOC_CLIENT_ANNX_04_T
  add constraint FK_IL_DOC_CL_ANNX04_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_ATTACH_T
prompt =====================================
prompt
create table IL_DOC_CLIENT_ATTACH_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  attachment_code   NUMBER not null,
  attachment_desc   VARCHAR2(50),
  file_path         VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  attachment_type   VARCHAR2(50)
)
;
alter table IL_DOC_CLIENT_ATTACH_T
  add constraint PK_IL_DOC_CL_ATTACH primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ATTACHMENT_CODE);
alter table IL_DOC_CLIENT_ATTACH_T
  add constraint FK_IL_DOC_CL_ATTACH_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_BANK_T
prompt ===================================
prompt
create table IL_DOC_CLIENT_BANK_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  client_code             NUMBER not null,
  serial_no               NUMBER not null,
  bank_code               NUMBER not null,
  branch_code             NUMBER,
  account_no              VARCHAR2(50),
  active                  VARCHAR2(1),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  iban                    VARCHAR2(50),
  entry_type              VARCHAR2(10),
  account_title           VARCHAR2(500),
  average_account_balance NUMBER,
  branch_name             VARCHAR2(100)
)
;
alter table IL_DOC_CLIENT_BANK_T
  add constraint PK_IL_DOC_CL_BNK primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, BANK_CODE, SERIAL_NO);
alter table IL_DOC_CLIENT_BANK_T
  add constraint FK_IL_DOC_CL_BANK_BANK foreign key (ORG_ID, BANK_CODE)
  references GL_BANK_SETUP_T (ORG_ID, BANK_CODE);
alter table IL_DOC_CLIENT_BANK_T
  add constraint FK_IL_DOC_CL_BNK_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_BNF_ATT_T
prompt ======================================
prompt
create table IL_DOC_CLIENT_BNF_ATT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  beneficiary_code  NUMBER not null,
  attachment_code   NUMBER not null,
  attachment_desc   VARCHAR2(50),
  file_path         VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_CLIENT_BNF_ATT_T
  add constraint PK_IL_DOC_BNF_ATT primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE, ATTACHMENT_CODE);
alter table IL_DOC_CLIENT_BNF_ATT_T
  add constraint FK_IL_DOC_BNF_ATT_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE)
  references IL_DOC_BENEFICIARY_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_EDU_HISTORY_T
prompt ==========================================
prompt
create table IL_DOC_CLIENT_EDU_HISTORY_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  education_id      NUMBER not null,
  education_type    NUMBER,
  degree_name       VARCHAR2(200),
  institution_code  VARCHAR2(200),
  passing_year      NUMBER,
  passing_grade     VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  passing_gpa       VARCHAR2(50)
)
;
alter table IL_DOC_CLIENT_EDU_HISTORY_T
  add constraint PK_IL_DOC_CL_EDU primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, EDUCATION_ID);
alter table IL_DOC_CLIENT_EDU_HISTORY_T
  add constraint FK_IL_DOC_CL_EDU_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_EMP_HIST_T
prompt =======================================
prompt
create table IL_DOC_CLIENT_EMP_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  employment_id     NUMBER not null,
  employer_name     VARCHAR2(200),
  designation       VARCHAR2(50),
  from_date         DATE,
  to_date           DATE,
  is_current        VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  employment_status VARCHAR2(1)
)
;
alter table IL_DOC_CLIENT_EMP_HIST_T
  add constraint PK_IL_DOC_CL_EMP primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, EMPLOYMENT_ID);
alter table IL_DOC_CLIENT_EMP_HIST_T
  add constraint FK_IL_DOC_CL_EMP_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_FAM_HIST_T
prompt =======================================
prompt
create table IL_DOC_CLIENT_FAM_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  person_id         NUMBER not null,
  person_name       VARCHAR2(50),
  relation_code     NUMBER,
  age               NUMBER,
  cause_of_death    NUMBER,
  age_at_death      NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  died_tag          VARCHAR2(1),
  state_of_health   VARCHAR2(1),
  occupation        VARCHAR2(50),
  individual_income NUMBER,
  dependent_tag     VARCHAR2(1),
  independent_tag   VARCHAR2(1)
)
;
alter table IL_DOC_CLIENT_FAM_HIST_T
  add constraint PK_IL_DOC_CL_FAM primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID);
alter table IL_DOC_CLIENT_FAM_HIST_T
  add constraint FK_IL_DOC_CL_FAM_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_IMMN_HIST_T
prompt ========================================
prompt
create table IL_DOC_CLIENT_IMMN_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  immunization_id   NUMBER not null,
  immunization_type NUMBER,
  immunization_date DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  immunization_dose VARCHAR2(10)
)
;
alter table IL_DOC_CLIENT_IMMN_HIST_T
  add constraint PK_IL_DOC_CL_IMMN primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, IMMUNIZATION_ID);
alter table IL_DOC_CLIENT_IMMN_HIST_T
  add constraint FK_IL_DOC_CL_IMMN_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_NOMINEE_T
prompt ===============================
prompt
create table IL_DOC_NOMINEE_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  main_product_code         NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  nominee_code              NUMBER not null,
  relation_code             NUMBER(9,6),
  percentage                NUMBER(15,2),
  amount                    NUMBER(15,2),
  cnic_no                   VARCHAR2(50),
  dob                       DATE,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  cnic_issue_date           DATE,
  cnic_expiry_date          DATE,
  nominee_name              VARCHAR2(50),
  is_guardian               VARCHAR2(1),
  guardian_name             VARCHAR2(50),
  guardian_relation_code    VARCHAR2(1),
  guardian_dob              DATE,
  guardian_cnic_no          VARCHAR2(50),
  guardian_cnic_issue_date  DATE,
  guardian_cnic_expiry_date DATE
)
;
alter table IL_DOC_NOMINEE_T
  add constraint PK_IL_DOC_NOM primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE);
alter table IL_DOC_NOMINEE_T
  add constraint FK_IL_DOC_NOM_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_CLIENT_NOM_ATT_T
prompt ======================================
prompt
create table IL_DOC_CLIENT_NOM_ATT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  nominee_code      NUMBER not null,
  attachment_code   NUMBER not null,
  attachment_desc   VARCHAR2(50),
  file_path         VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_CLIENT_NOM_ATT_T
  add constraint PK_IL_DOC_NOM_ATT primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE, ATTACHMENT_CODE);
alter table IL_DOC_CLIENT_NOM_ATT_T
  add constraint FK_IL_DOC_NOM_ATT_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE)
  references IL_DOC_NOMINEE_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_PERS_INFO_T
prompt ========================================
prompt
create table IL_DOC_CLIENT_PERS_INFO_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  client_code             NUMBER not null,
  info_id                 NUMBER not null,
  first_name              VARCHAR2(50),
  middle_name             VARCHAR2(50),
  last_name               VARCHAR2(50),
  title                   VARCHAR2(10),
  gender                  VARCHAR2(10),
  father_name             VARCHAR2(50),
  maiden_name             VARCHAR2(50),
  place_of_birth          VARCHAR2(50),
  marital_status          VARCHAR2(10),
  no_of_dependents        NUMBER,
  nationality_code        VARCHAR2(10),
  religion_code           VARCHAR2(10),
  height                  NUMBER,
  weight                  NUMBER,
  bmi                     NUMBER,
  height_scale            VARCHAR2(10),
  weight_scale            VARCHAR2(10),
  cnic_no                 VARCHAR2(30),
  father_cnic_no          VARCHAR2(30),
  spouse_cnic_no          VARCHAR2(30),
  cnic_issue_date         DATE,
  father_cnic_issue_date  DATE,
  spouse_cnic_issue_date  DATE,
  cnic_expiry_date        DATE,
  father_cnic_expiry_date DATE,
  spouse_cnic_expiry_date DATE,
  dob                     DATE,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  nrp_tag                 VARCHAR2(10),
  passport_no             VARCHAR2(50),
  age                     NUMBER,
  waste                   NUMBER,
  waste_scale             VARCHAR2(10),
  mother_name             VARCHAR2(50),
  spouse_name             VARCHAR2(50),
  passing_gpa             VARCHAR2(50),
  country_of_birth        VARCHAR2(20),
  smoking_status          VARCHAR2(1),
  smoking_count           NUMBER,
  husband_name            VARCHAR2(50),
  e_height_inches         NUMBER,
  height_inches           NUMBER,
  relation_code           VARCHAR2(10),
  first_name_old          VARCHAR2(50),
  middle_name_old         VARCHAR2(50),
  last_name_old           VARCHAR2(50),
  height_old              NUMBER,
  height_inches_old       NUMBER,
  height_scale_old        VARCHAR2(10),
  weight_old              NUMBER,
  weight_scale_old        VARCHAR2(10),
  bmi_old                 NUMBER,
  cnic_no_old             VARCHAR2(30),
  dob_old                 DATE,
  age_old                 NUMBER,
  gender_old              VARCHAR2(1),
  title_old               VARCHAR2(10),
  passport_issue_date     DATE,
  passport_expiry_date    DATE,
  header_id               NUMBER
)
;
alter table IL_DOC_CLIENT_PERS_INFO_T
  add constraint PK_IL_DOC_CL_PERS primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, INFO_ID);
alter table IL_DOC_CLIENT_PERS_INFO_T
  add constraint FK_IL_DOC_CL_PERS_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_PROF_INFO_T
prompt ========================================
prompt
create table IL_DOC_CLIENT_PROF_INFO_T
(
  org_id                        NUMBER not null,
  branch_id                     NUMBER not null,
  main_product_code             NUMBER not null,
  sub_product_code              NUMBER not null,
  takaful_type                  VARCHAR2(1) not null,
  document_type                 VARCHAR2(1) not null,
  document_no                   VARCHAR2(10) not null,
  record_type                   VARCHAR2(1) not null,
  document_year                 VARCHAR2(10) not null,
  issue_count                   NUMBER not null,
  endorsement_no                NUMBER not null,
  application_id                NUMBER not null,
  client_code                   NUMBER not null,
  info_id                       NUMBER not null,
  occupation                    VARCHAR2(50),
  band_code                     VARCHAR2(50),
  annual_salary                 NUMBER,
  working_tag                   VARCHAR2(10),
  client_category               VARCHAR2(10),
  source_of_income              VARCHAR2(50),
  created_by                    VARCHAR2(50),
  creation_date                 DATE,
  last_updated_by               VARCHAR2(50),
  last_update_date              DATE,
  length_of_service             NUMBER,
  retirement_age                NUMBER,
  covered_in_pension_scheme     VARCHAR2(1),
  nature_of_business            VARCHAR2(50),
  decision_tag                  VARCHAR2(10),
  designation                   VARCHAR2(100),
  employer_detail               VARCHAR2(1000),
  comments                      VARCHAR2(2000),
  type_of_employment            VARCHAR2(50),
  average_monthly_income        NUMBER,
  employment_class              VARCHAR2(1),
  daily_duties                  VARCHAR2(500),
  occupation_old                VARCHAR2(50),
  length_of_service_old         NUMBER,
  retirement_age_old            NUMBER,
  covered_in_pension_scheme_old VARCHAR2(1),
  employment_class_old          VARCHAR2(1),
  type_of_employment_old        VARCHAR2(50),
  nature_of_business_old        VARCHAR2(50),
  annual_salary_old             NUMBER,
  average_monthly_income_old    NUMBER,
  working_tag_old               VARCHAR2(10),
  client_category_old           VARCHAR2(10),
  employer_detail_old           VARCHAR2(1000),
  comments_old                  VARCHAR2(2000),
  daily_duties_old              VARCHAR2(500)
)
;
alter table IL_DOC_CLIENT_PROF_INFO_T
  add constraint PK_IL_DOC_CL_PROF primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, INFO_ID);
alter table IL_DOC_CLIENT_PROF_INFO_T
  add constraint FK_IL_DOC_CL_PROF_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLIENT_SOCIAL_ACC_T
prompt =========================================
prompt
create table IL_DOC_CLIENT_SOCIAL_ACC_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  account_id        NUMBER not null,
  account_type      NUMBER,
  account_desc      VARCHAR2(200),
  account_url       VARCHAR2(200),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  active            VARCHAR2(1),
  effective_date    DATE
)
;
alter table IL_DOC_CLIENT_SOCIAL_ACC_T
  add constraint PK_IL_DOC_CL_SOC primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ACCOUNT_ID);
alter table IL_DOC_CLIENT_SOCIAL_ACC_T
  add constraint FK_IL_DOC_CL_SOC_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_CLNT_FAM_MED_HIST_T
prompt =========================================
prompt
create table IL_DOC_CLNT_FAM_MED_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  person_id         NUMBER not null,
  med_serial_no     NUMBER not null,
  disease_code      VARCHAR2(50),
  notes             VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_CLNT_FAM_MED_HIST_T
  add constraint PK_IL_DOC_CL_FAM_MD primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID, MED_SERIAL_NO);
alter table IL_DOC_CLNT_FAM_MED_HIST_T
  add constraint FK_IL_DOC_CL_FAM_MD_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID)
  references IL_DOC_CLIENT_FAM_HIST_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID);

prompt
prompt Creating table IL_DOC_CLNT_MED_HIST_T
prompt =====================================
prompt
create table IL_DOC_CLNT_MED_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  med_serial_no     NUMBER not null,
  disease_code      VARCHAR2(50),
  notes             VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_CLNT_MED_HIST_T
  add constraint PK_IL_DOC_CL_MD primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, MED_SERIAL_NO);
alter table IL_DOC_CLNT_MED_HIST_T
  add constraint FK_CL_MD_CL foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references IL_DOC_CLIENT_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_COMMISSION_CYCLE_T
prompt ========================================
prompt
create table IL_DOC_COMMISSION_CYCLE_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  serial_no               NUMBER not null,
  commission_cycle_id     NUMBER not null,
  channel_id              NUMBER not null,
  channel_model_id        NUMBER not null,
  agent_code              NUMBER not null,
  cycle_level             VARCHAR2(20),
  designation             VARCHAR2(20),
  cycle_type              VARCHAR2(20),
  allocation_category     VARCHAR2(50),
  commission_rate         NUMBER(9,6),
  commission_flat_amt     NUMBER(15,2),
  commission_amount       NUMBER(15,2),
  agency_type             VARCHAR2(20),
  shares                  NUMBER,
  gross_contribution      NUMBER,
  activity_type           VARCHAR2(100),
  activity_date           DATE,
  comm_percent_share      NUMBER,
  doc_reference_no        VARCHAR2(50),
  posting_tag             VARCHAR2(20),
  posted_by               VARCHAR2(50),
  posted_date             DATE,
  contribution_received   NUMBER,
  comm_settled            NUMBER,
  installment_no          NUMBER,
  hold_flag               VARCHAR2(20),
  hold_by                 VARCHAR2(20),
  hold_date               DATE,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  allocation_id           NUMBER not null,
  doc_ref_no_key          VARCHAR2(150),
  hold_comment            VARCHAR2(500),
  release_comment         VARCHAR2(500),
  cycle_nature            VARCHAR2(10),
  allocation_type         NUMBER,
  transferred_comm_amount NUMBER default (0),
  transaction_date        DATE
)
;
alter table IL_DOC_COMMISSION_CYCLE_T
  add constraint PK_IL_DOC_COMMISION_CYCLE primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO, COMMISSION_CYCLE_ID, ALLOCATION_ID, CHANNEL_ID, CHANNEL_MODEL_ID, AGENT_CODE);

prompt
prompt Creating table IL_DOC_COMM_CONSO_T
prompt ==================================
prompt
create table IL_DOC_COMM_CONSO_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  allocation_id     NUMBER not null,
  serial_no         NUMBER not null,
  allocation_type   NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_id        NUMBER,
  designation_id    NUMBER,
  designation_level NUMBER,
  commission_rate   NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  agency_type       VARCHAR2(10),
  agent_id          NUMBER,
  policy_term       NUMBER,
  commission_amount NUMBER
)
;
alter table IL_DOC_COMM_CONSO_T
  add constraint PK_IL_DOC_COMM_CONSO primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_ID, SERIAL_NO);
alter table IL_DOC_COMM_CONSO_T
  add constraint FK_IL_DOC_COMM_CONSO_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_COMM_HIERARCHY_T
prompt ======================================
prompt
create table IL_DOC_COMM_HIERARCHY_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  main_product_code           NUMBER not null,
  sub_product_code            NUMBER not null,
  takaful_type                VARCHAR2(1) not null,
  document_type               VARCHAR2(1) not null,
  document_no                 VARCHAR2(10) not null,
  record_type                 VARCHAR2(1) not null,
  document_year               VARCHAR2(10) not null,
  issue_count                 NUMBER not null,
  endorsement_no              NUMBER not null,
  application_id              NUMBER not null,
  allocation_id               NUMBER,
  serial_no                   NUMBER not null,
  channel_id                  NUMBER,
  model_id                    NUMBER,
  agent_id                    NUMBER,
  partner_id                  NUMBER,
  designation_id              NUMBER,
  designation_level           NUMBER,
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  commission_rate             NUMBER,
  jump_tag                    VARCHAR2(1),
  commission_type             VARCHAR2(1),
  deferred_tag                VARCHAR2(1),
  start_date                  DATE,
  end_date                    DATE,
  jump_tag_adhoc              VARCHAR2(1),
  jump_tag_bus_credit_adhoc   VARCHAR2(1),
  jump_tag_bus_credit_regular VARCHAR2(1),
  bus_credit_adhoc            NUMBER,
  bus_credit_regular          NUMBER
)
;
alter table IL_DOC_COMM_HIERARCHY_T
  add constraint PK_ILL_DOC_COMM_HIER primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, ENDORSEMENT_NO, SERIAL_NO);
alter table IL_DOC_COMM_HIERARCHY_T
  add constraint FK_ILL_DOC_COMM_HIER_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_CONDITIONS_MAP_T
prompt ======================================
prompt
create table IL_DOC_CONDITIONS_MAP_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  cn_code           NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  default_tag       VARCHAR2(1),
  endorsement_tag   VARCHAR2(1)
)
;
alter table IL_DOC_CONDITIONS_MAP_T
  add constraint IL_DOC_CONDITIONS_MAP_PK primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CN_CODE);

prompt
prompt Creating table IL_DOC_COND_MAP_NEW_T
prompt ====================================
prompt
create table IL_DOC_COND_MAP_NEW_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10),
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10),
  issue_count       NUMBER,
  endorsement_no    NUMBER,
  application_id    NUMBER,
  cn_code           NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  default_tag       VARCHAR2(1),
  process_id        NUMBER not null,
  endorsement_tag   VARCHAR2(1)
)
;
alter table IL_DOC_COND_MAP_NEW_T
  add constraint PK_DOC_UND_COND_NEW primary key (ORG_ID, BRANCH_ID, PROCESS_ID, CN_CODE);

prompt
prompt Creating table IL_DOC_CONTACT_T
prompt ===============================
prompt
create table IL_DOC_CONTACT_T
(
  org_id                NUMBER not null,
  branch_id             NUMBER not null,
  main_product_code     NUMBER not null,
  sub_product_code      NUMBER not null,
  takaful_type          VARCHAR2(1) not null,
  document_type         VARCHAR2(1) not null,
  document_no           VARCHAR2(10) not null,
  record_type           VARCHAR2(1) not null,
  document_year         VARCHAR2(10) not null,
  issue_count           NUMBER not null,
  endorsement_no        NUMBER not null,
  application_id        NUMBER not null,
  client_code           NUMBER not null,
  code                  NUMBER not null,
  phone1                VARCHAR2(30),
  phone2                VARCHAR2(30),
  mobile_phone          VARCHAR2(30),
  home_phone            VARCHAR2(30),
  office_phone          VARCHAR2(30),
  whatsapp_no           VARCHAR2(30),
  fax1                  VARCHAR2(50),
  fax2                  VARCHAR2(50),
  email                 VARCHAR2(50),
  website               VARCHAR2(50),
  entry_type            VARCHAR2(30),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  communication_channel VARCHAR2(1),
  country_code          VARCHAR2(10)
)
;
alter table IL_DOC_CONTACT_T
  add constraint PK_IL_DOC_CONTACT_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, CODE);

prompt
prompt Creating table IL_DOC_DEDUCTION_T
prompt =================================
prompt
create table IL_DOC_DEDUCTION_T
(
  serial_no         NUMBER not null,
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  deduction_type    NUMBER,
  deduction_amount  NUMBER,
  charges_to        NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_update_date  DATE,
  last_updated_by   VARCHAR2(50)
)
;
alter table IL_DOC_DEDUCTION_T
  add constraint PK_DOC_DEDUCTION_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);

prompt
prompt Creating table IL_DOC_DUP_PMD_COMMENTS_T
prompt ========================================
prompt
create table IL_DOC_DUP_PMD_COMMENTS_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  process_id       NUMBER not null,
  serial_no        NUMBER not null,
  attachment_code  NUMBER,
  comments         VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DOC_DUP_PMD_COMMENTS_T
  add constraint PK_IL_DOC_DUP_PMD_COMMENTS_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID, SERIAL_NO);

prompt
prompt Creating table IL_DOC_EXCL_MAP_NEW_T
prompt ====================================
prompt
create table IL_DOC_EXCL_MAP_NEW_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10),
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10),
  issue_count       NUMBER,
  endorsement_no    NUMBER,
  application_id    NUMBER,
  ex_code           NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  default_tag       VARCHAR2(1),
  notes             VARCHAR2(500),
  process_id        NUMBER not null,
  endorsement_tag   VARCHAR2(1)
)
;
alter table IL_DOC_EXCL_MAP_NEW_T
  add constraint PK_DOC_UND_EXCL_NEW primary key (ORG_ID, BRANCH_ID, PROCESS_ID, EX_CODE);

prompt
prompt Creating table IL_DOC_EXCULUSION_MAP_T
prompt ======================================
prompt
create table IL_DOC_EXCULUSION_MAP_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  ex_code           NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  default_tag       VARCHAR2(1),
  notes             VARCHAR2(500),
  endorsement_tag   VARCHAR2(1)
)
;
alter table IL_DOC_EXCULUSION_MAP_T
  add constraint IL_DOC_EXCULUSION_MAP_PK primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, EX_CODE);

prompt
prompt Creating table IL_DOC_HEADER_UNDWT_T
prompt ====================================
prompt
create table IL_DOC_HEADER_UNDWT_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  main_product_code          NUMBER,
  sub_product_code           NUMBER,
  takaful_type               VARCHAR2(1),
  document_type              VARCHAR2(1),
  document_no                VARCHAR2(10),
  record_type                VARCHAR2(1),
  document_year              VARCHAR2(10),
  issue_count                NUMBER,
  endorsement_no             NUMBER,
  application_id             NUMBER,
  doc_reference_no           VARCHAR2(50),
  client_code                VARCHAR2(20),
  folio_code                 VARCHAR2(20),
  sum_insured                NUMBER(15,2),
  gross_premium              NUMBER(15,2),
  net_premium                NUMBER(15,2),
  doc_charges                NUMBER(15,2),
  remarks                    VARCHAR2(500),
  premium_basis              VARCHAR2(3),
  producer_code              NUMBER,
  currency_code              VARCHAR2(10),
  payment_mode               VARCHAR2(10),
  payment_term               NUMBER,
  policy_term                NUMBER,
  member_id_label            VARCHAR2(10),
  wakala_fee                 NUMBER(15,2),
  loading_ovrd_rate          NUMBER(9,6),
  loading_rate               NUMBER(9,6),
  policy_fee                 NUMBER(15,2),
  overriding_rate            NUMBER(9,6),
  exchange_rate              NUMBER(9,6),
  next_due_date              DATE,
  quotation_date             DATE,
  sub_document_no            NUMBER,
  standard_treaty            VARCHAR2(10),
  post_date                  DATE,
  posting_tag                VARCHAR2(1),
  post_user                  VARCHAR2(50),
  name1                      VARCHAR2(50),
  name2                      VARCHAR2(50),
  dob1                       DATE,
  dob2                       DATE,
  age1                       NUMBER(3),
  age2                       NUMBER(3),
  gender1                    VARCHAR2(1),
  gender2                    VARCHAR2(1),
  sum_covered                NUMBER(15,2),
  sum_covered_index          NUMBER(15,2),
  contribution_index         NUMBER(15,2),
  basic_contribution         NUMBER(15,2),
  gross_contribution         NUMBER(15,2),
  net_contribution           NUMBER(15,2),
  cover_multiple             NUMBER(3),
  cont_margin                NUMBER(9,6),
  last_age_index             NUMBER(3),
  expected_claim             NUMBER(15,2),
  investment_income          NUMBER(15,2),
  second_life                VARCHAR2(1),
  bid_offer                  NUMBER(15,2),
  issue_date                 DATE,
  comm_date                  DATE,
  expiry_date                DATE,
  converted_doc_no           VARCHAR2(50),
  proposal_date              DATE,
  occupational_class         VARCHAR2(5),
  creation_date              DATE,
  created_by                 VARCHAR2(50),
  last_update_date           DATE,
  last_updated_by            VARCHAR2(50),
  post_by                    VARCHAR2(50),
  convert_tag                VARCHAR2(1),
  revised_tag                VARCHAR2(1),
  base_doc_no                VARCHAR2(50),
  cnic_expiry_date           DATE,
  cnic_issue_date            DATE,
  cnic_no                    VARCHAR2(50),
  waqala_fee                 NUMBER,
  quotation_ref_no           VARCHAR2(50),
  alteration_type            VARCHAR2(50),
  master_ref_no              VARCHAR2(50),
  cost_center_code           VARCHAR2(50),
  alteration_date            DATE,
  advance_amount             NUMBER,
  payer_same_tag             VARCHAR2(1),
  submit_tag                 VARCHAR2(1),
  undwt_status               NUMBER,
  sum_covered_modal          NUMBER,
  basic_contribution_modal   NUMBER,
  undwt_decision             NUMBER,
  converted_policy_no        VARCHAR2(50),
  convert_proposal           VARCHAR2(50),
  risk_profile               VARCHAR2(50),
  contribution_type          VARCHAR2(50),
  risk_profile_comments      VARCHAR2(500),
  illustration_ref_no        VARCHAR2(50),
  customer_profile_comments  VARCHAR2(500),
  channel_id                 NUMBER,
  model_id                   NUMBER,
  agent_id                   NUMBER,
  partner_id                 NUMBER,
  topup_amount               NUMBER,
  rejected_tag               VARCHAR2(50),
  total_contribution_modal   NUMBER,
  alteration_issue_date      DATE,
  cancellation_type          NUMBER,
  doc_dispatch_date          DATE,
  doc_receive_date           DATE,
  chargeable_from            NUMBER,
  chargeable_amount          NUMBER,
  cancel_tag                 VARCHAR2(1),
  cancel_by                  VARCHAR2(50),
  cancel_date                DATE,
  cancellation_remarks       VARCHAR2(500),
  middle_name1               VARCHAR2(50),
  last_name1                 VARCHAR2(50),
  policy_posted              VARCHAR2(1),
  non_financial_activity     VARCHAR2(20),
  non_financial_sub_activity VARCHAR2(20),
  undwt_decision_reason      VARCHAR2(500),
  undwt_notes                VARCHAR2(500),
  underwriting_il_create     VARCHAR2(20),
  proposal_approved_by       VARCHAR2(20),
  undwt_other_exculusions    VARCHAR2(500),
  undwt_decision_system      NUMBER,
  proposal_approved_date     DATE,
  partner_branch_id          NUMBER,
  base_doc_no_key            VARCHAR2(150),
  illustration_ref_no_key    VARCHAR2(150),
  converted_doc_no_key       VARCHAR2(150),
  agent_branch_id            VARCHAR2(20),
  lock_tag                   VARCHAR2(20),
  doc_reference_key          VARCHAR2(100),
  initial_topup              NUMBER,
  process_id                 NUMBER not null,
  process_type_id            NUMBER,
  process_id_ref             NUMBER,
  return_tag                 VARCHAR2(1)
)
;
alter table IL_DOC_HEADER_UNDWT_T
  add constraint PK_DOC_UNDWT_HEADER primary key (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_HISTORY_TYPE_T
prompt ====================================
prompt
create table IL_DOC_HISTORY_TYPE_T
(
  org_id            NUMBER not null,
  history_type_id   NUMBER not null,
  history_type_desc VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_HISTORY_TYPE_T
  add constraint PK_DOC_HIS_TYPE primary key (ORG_ID, HISTORY_TYPE_ID);
alter table IL_DOC_HISTORY_TYPE_T
  add constraint FK_HIST_TYPE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_DOC_HISTORY_T
prompt ===============================
prompt
create table IL_DOC_HISTORY_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  main_product_code   NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  serial_no           NUMBER not null,
  hist_type           NUMBER,
  history_description VARCHAR2(500),
  decision_code       NUMBER,
  status_code         NUMBER,
  loading_value       NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  status_date         DATE,
  process_id          NUMBER
)
;
alter table IL_DOC_HISTORY_T
  add constraint PK_ILL_DOC_HIST primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_HISTORY_T
  add constraint FK_DOC_HIST_UND_PROCESS foreign key (ORG_ID, BRANCH_ID, PROCESS_ID)
  references IL_DOC_HEADER_UNDWT_T (ORG_ID, BRANCH_ID, PROCESS_ID);
alter table IL_DOC_HISTORY_T
  add constraint FK_HIST_HIST_TYPE foreign key (ORG_ID, HIST_TYPE)
  references IL_DOC_HISTORY_TYPE_T (ORG_ID, HISTORY_TYPE_ID);
alter table IL_DOC_HISTORY_T
  add constraint FK_ILL_DOC_HIST_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_ILLUSTRATION_DTL_T
prompt ========================================
prompt
create table IL_DOC_ILLUSTRATION_DTL_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  illustration_id         NUMBER not null,
  effective_age           NUMBER,
  policy_year             NUMBER not null,
  basic_contribution      NUMBER,
  invested_contribution   NUMBER,
  allocation_percentage   NUMBER,
  allocation_contribution NUMBER,
  mortality_rate1         NUMBER,
  mortality_rate2         NUMBER,
  sum_assured             NUMBER,
  sum_assured_at_risk     NUMBER,
  mortality_charges       NUMBER,
  ptf_surplus             NUMBER,
  waqala_charges          NUMBER,
  contingency_margin      NUMBER,
  reins_amount            NUMBER,
  admin_charges           NUMBER,
  cash_value1             NUMBER,
  cash_value2             NUMBER,
  cash_value3             NUMBER,
  created_by              VARCHAR2(50),
  creation_date           DATE
)
;
alter table IL_DOC_ILLUSTRATION_DTL_T
  add constraint PK_IL_DOC_ILL_DTL primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ILLUSTRATION_ID, POLICY_YEAR);
alter table IL_DOC_ILLUSTRATION_DTL_T
  add constraint FK_IL_DOC_ILL_DTL_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_INSTALLMENTS_ALLOC_T
prompt ==========================================
prompt
create table IL_DOC_INSTALLMENTS_ALLOC_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  installment_no           NUMBER not null,
  due_date                 DATE,
  basic_contribution_modal VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  installment_days         NUMBER,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  installment_type         VARCHAR2(10),
  period_end_date          DATE,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  sum_covered              NUMBER,
  waived_tag               VARCHAR2(1),
  waived_by                VARCHAR2(50),
  waived_date              DATE,
  rider_contribution_modal NUMBER,
  total_contribution_modal NUMBER,
  installment_year         NUMBER
)
;
alter table IL_DOC_INSTALLMENTS_ALLOC_T
  add constraint PK_IL_DOC_INST_ALL primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO);

prompt
prompt Creating table IL_DOC_INSTALLMENTS_T
prompt ====================================
prompt
create table IL_DOC_INSTALLMENTS_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  installment_no           NUMBER not null,
  due_date                 DATE,
  basic_contribution_modal VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  installment_days         NUMBER,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  installment_type         VARCHAR2(10),
  period_end_date          DATE,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  sum_covered              NUMBER,
  waived_tag               VARCHAR2(1),
  waived_by                VARCHAR2(50),
  waived_date              DATE,
  rider_contribution_modal NUMBER,
  total_contribution_modal NUMBER,
  installment_year         NUMBER
)
;
alter table IL_DOC_INSTALLMENTS_T
  add constraint PK_IL_DOC_INST primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO);
alter table IL_DOC_INSTALLMENTS_T
  add constraint FK_IL_DOC_INST_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_INST_RIDERS_ALLOC_T
prompt =========================================
prompt
create table IL_DOC_INST_RIDERS_ALLOC_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  main_product_code        NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  installment_no           NUMBER not null,
  benefit_code             NUMBER not null,
  basic_contribution_modal NUMBER,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE
)
;
alter table IL_DOC_INST_RIDERS_ALLOC_T
  add constraint PK_IL_DOC_INST_ALL_RID primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO, BENEFIT_CODE);
alter table IL_DOC_INST_RIDERS_ALLOC_T
  add constraint FK_DOC_INST_RID_ALL foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO)
  references IL_DOC_INSTALLMENTS_ALLOC_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO);

prompt
prompt Creating table IL_DOC_INST_RIDERS_T
prompt ===================================
prompt
create table IL_DOC_INST_RIDERS_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  main_product_code          NUMBER not null,
  sub_product_code           NUMBER not null,
  takaful_type               VARCHAR2(1) not null,
  document_type              VARCHAR2(1) not null,
  document_no                VARCHAR2(10) not null,
  record_type                VARCHAR2(1) not null,
  document_year              VARCHAR2(10) not null,
  issue_count                NUMBER not null,
  endorsement_no             NUMBER not null,
  application_id             NUMBER not null,
  installment_no             NUMBER not null,
  benefit_code               NUMBER not null,
  basic_contribution_modal   NUMBER,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  loading_contribution_modal NUMBER,
  total_contribution_modal   NUMBER
)
;
alter table IL_DOC_INST_RIDERS_T
  add constraint PK_IL_DOC_INST_RID primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO, BENEFIT_CODE);
alter table IL_DOC_INST_RIDERS_T
  add constraint FK_DOC_INST_RID foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO)
  references IL_DOC_INSTALLMENTS_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO);

prompt
prompt Creating table IL_DOC_MED_DTL_T
prompt ===============================
prompt
create table IL_DOC_MED_DTL_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  item_no           NUMBER not null,
  uw_code           NUMBER not null,
  uw_status         VARCHAR2(5),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  file_attached     VARCHAR2(200),
  remarks           VARCHAR2(500),
  completion_date   DATE,
  display_order     NUMBER,
  service_provider  VARCHAR2(10),
  requirement_notes VARCHAR2(500),
  serial_no         NUMBER not null,
  req_type_code     VARCHAR2(10),
  posting_flag      VARCHAR2(1),
  post_by           VARCHAR2(50),
  post_date         DATE
)
;
alter table IL_DOC_MED_DTL_T
  add constraint PK_IL_DOC_MED_DTL primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, SERIAL_NO);
alter table IL_DOC_MED_DTL_T
  add constraint FK_IL_DOC_MED_DT_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table IL_DOC_MED_DTL_T
  add constraint FK_IL_DOC_MED_REQ foreign key (ORG_ID, UW_CODE)
  references GLAS_UNDWT_REQ_SETUP_T (ORG_ID, REQ_CODE);

prompt
prompt Creating table IL_DOC_MED_DTL_CHLD_T
prompt ====================================
prompt
create table IL_DOC_MED_DTL_CHLD_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  item_no                 NUMBER not null,
  uw_code                 NUMBER not null,
  uw_dtl_code             NUMBER not null,
  uw_status               VARCHAR2(5),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  file_attached           VARCHAR2(200),
  remarks                 VARCHAR2(500),
  test_date               DATE,
  recieved_date           DATE,
  complete_date           DATE,
  serial_no               NUMBER not null,
  requirement_number      NUMBER not null,
  is_last_update_by_agent VARCHAR2(10)
)
;
alter table IL_DOC_MED_DTL_CHLD_T
  add constraint PK_IL_DOC_MED_DTL_CH primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, UW_DTL_CODE, REQUIREMENT_NUMBER, SERIAL_NO);
alter table IL_DOC_MED_DTL_CHLD_T
  add constraint FK_IL_DOC_MED_DT_CH_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, REQUIREMENT_NUMBER)
  references IL_DOC_MED_DTL_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, SERIAL_NO);

prompt
prompt Creating table IL_DOC_MED_DTL_CHLD_UND_T
prompt ========================================
prompt
create table IL_DOC_MED_DTL_CHLD_UND_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER,
  sub_product_code        NUMBER,
  takaful_type            VARCHAR2(1),
  document_type           VARCHAR2(1),
  document_no             VARCHAR2(10),
  record_type             VARCHAR2(1),
  document_year           VARCHAR2(10),
  issue_count             NUMBER,
  endorsement_no          NUMBER,
  application_id          NUMBER,
  item_no                 NUMBER not null,
  uw_code                 NUMBER not null,
  uw_dtl_code             NUMBER not null,
  uw_status               VARCHAR2(5),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  file_attached           VARCHAR2(200),
  remarks                 VARCHAR2(500),
  test_date               DATE,
  recieved_date           DATE,
  complete_date           DATE,
  serial_no               NUMBER not null,
  requirement_number      NUMBER not null,
  is_last_update_by_agent VARCHAR2(10),
  process_id              NUMBER not null
)
;
alter table IL_DOC_MED_DTL_CHLD_UND_T
  add constraint PK_DOC_MED_UNDWT_DET primary key (ORG_ID, BRANCH_ID, PROCESS_ID, ITEM_NO, UW_CODE, UW_DTL_CODE, SERIAL_NO, REQUIREMENT_NUMBER);

prompt
prompt Creating table IL_DOC_MED_DTL_HIST_T
prompt ====================================
prompt
create table IL_DOC_MED_DTL_HIST_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  item_no            NUMBER not null,
  uw_code            VARCHAR2(5) not null,
  uw_dtl_code        NUMBER not null,
  uw_status          VARCHAR2(5),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  file_attached      VARCHAR2(200),
  remarks            VARCHAR2(500),
  serial_no          NUMBER not null,
  history_remarks    VARCHAR2(50),
  test_date          DATE,
  recieved_date      DATE,
  complete_date      DATE,
  requirement_number NUMBER,
  uw_detail_srno     NUMBER
)
;
alter table IL_DOC_MED_DTL_HIST_T
  add constraint PK_IL_DOC_MED_DTL_HIST primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, UW_DTL_CODE, SERIAL_NO);
alter table IL_DOC_MED_DTL_HIST_T
  add constraint FK_IL_DOC_MED_DT_HIST_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_MED_DTL_HIST_UND_T
prompt ========================================
prompt
create table IL_DOC_MED_DTL_HIST_UND_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  main_product_code  NUMBER,
  sub_product_code   NUMBER,
  takaful_type       VARCHAR2(1),
  document_type      VARCHAR2(1),
  document_no        VARCHAR2(10),
  record_type        VARCHAR2(1),
  document_year      VARCHAR2(10),
  issue_count        NUMBER,
  endorsement_no     NUMBER,
  application_id     NUMBER,
  item_no            NUMBER not null,
  uw_code            VARCHAR2(5) not null,
  uw_dtl_code        NUMBER not null,
  uw_status          VARCHAR2(5),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  file_attached      VARCHAR2(200),
  remarks            VARCHAR2(500),
  serial_no          NUMBER not null,
  history_remarks    VARCHAR2(50),
  test_date          DATE,
  recieved_date      DATE,
  complete_date      DATE,
  requirement_number NUMBER,
  uw_detail_srno     NUMBER,
  process_id         NUMBER not null
)
;
alter table IL_DOC_MED_DTL_HIST_UND_T
  add constraint PK_DOC_MED_UND_DET_HIST primary key (ORG_ID, BRANCH_ID, PROCESS_ID, ITEM_NO, UW_CODE, UW_DTL_CODE, SERIAL_NO);

prompt
prompt Creating table IL_DOC_MED_DTL_UNDWT_T
prompt =====================================
prompt
create table IL_DOC_MED_DTL_UNDWT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10),
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10),
  issue_count       NUMBER,
  endorsement_no    NUMBER,
  application_id    NUMBER,
  item_no           NUMBER not null,
  uw_code           NUMBER not null,
  uw_status         VARCHAR2(5),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  file_attached     VARCHAR2(200),
  remarks           VARCHAR2(500),
  completion_date   DATE,
  display_order     NUMBER,
  service_provider  VARCHAR2(10),
  req_type_code     VARCHAR2(10),
  requirement_notes VARCHAR2(500),
  serial_no         NUMBER not null,
  posting_flag      VARCHAR2(1),
  process_id        NUMBER not null,
  post_by           VARCHAR2(50),
  post_date         DATE
)
;
alter table IL_DOC_MED_DTL_UNDWT_T
  add constraint PK_DOC_MED_UNDWT primary key (ORG_ID, BRANCH_ID, PROCESS_ID, ITEM_NO, UW_CODE, SERIAL_NO);

prompt
prompt Creating table IL_DOC_MONEY_TR_COMMENTS_T
prompt =========================================
prompt
create table IL_DOC_MONEY_TR_COMMENTS_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  money_transfer_id NUMBER not null,
  serial_no         NUMBER not null,
  comments          VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_MONEY_TR_COMMENTS_T
  add constraint PK_IL_MONEY_TR_COMMENTS_T primary key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID, SERIAL_NO);
alter table IL_DOC_MONEY_TR_COMMENTS_T
  add constraint FK_DOC_MONEY_TR_COMMENTS foreign key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID)
  references IL_MONEY_TRANSFER_HEADER_T (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID);

prompt
prompt Creating table IL_DOC_POSTING_HISTORY_T
prompt =======================================
prompt
create table IL_DOC_POSTING_HISTORY_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  post_by           VARCHAR2(50),
  post_date         VARCHAR2(50),
  matrix_id         VARCHAR2(50),
  voucher_no        VARCHAR2(50),
  advice_no         VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_POSTING_HISTORY_T
  add constraint PK_IL_DOC_POSTING_HIST primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_POSTING_HISTORY_T
  add constraint FK_IL_DOC_POST_HIST_DOC foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_SETTLEMENT_TYPE_SETUP_T
prompt =========================================
prompt
create table IL_SETTLEMENT_TYPE_SETUP_T
(
  org_id                   NUMBER not null,
  type_code                NUMBER not null,
  type_description         VARCHAR2(500),
  active                   VARCHAR2(1),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  zakat_allowed            VARCHAR2(1),
  surrender_allowed        VARCHAR2(1),
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  no_of_months             NUMBER,
  contribution_type        VARCHAR2(1),
  surrender_fee_applicable VARCHAR2(1)
)
;
alter table IL_SETTLEMENT_TYPE_SETUP_T
  add constraint IL_SETTLEMENT_TYPE_SETUP_T primary key (ORG_ID, TYPE_CODE);

prompt
prompt Creating table IL_DOC_SETTLEMENT_HD_T
prompt =====================================
prompt
create table IL_DOC_SETTLEMENT_HD_T
(
  org_id                        NUMBER not null,
  branch_id                     NUMBER not null,
  sett_no                       NUMBER not null,
  sett_date                     DATE,
  sett_type                     NUMBER,
  sett_amount                   NUMBER,
  sett_remarks                  VARCHAR2(500),
  sett_payable_to               NUMBER,
  pmd_ref_no                    VARCHAR2(50),
  payer_code                    NUMBER,
  created_by                    VARCHAR2(50),
  creation_date                 DATE,
  last_updated_by               VARCHAR2(50),
  last_update_date              DATE,
  lock_flag                     VARCHAR2(1),
  post_flag                     VARCHAR2(1),
  posted_date                   DATE,
  posted_by                     VARCHAR2(50),
  cancel_flag                   VARCHAR2(1),
  cancel_date                   DATE,
  cancel_by                     VARCHAR2(50),
  request_date                  DATE,
  sett_reason                   VARCHAR2(10),
  percentage                    NUMBER,
  amount_type                   VARCHAR2(30),
  pmd_ref_no_key                VARCHAR2(150),
  surrender_processing_fee      NUMBER,
  bank_name                     VARCHAR2(50),
  bank_branch                   VARCHAR2(50),
  bank_account                  VARCHAR2(50),
  zakat_excemption              VARCHAR2(1),
  settlement_category_code      VARCHAR2(1),
  attachment_zakat_excemption   VARCHAR2(4000),
  settlement_attachment         VARCHAR2(4000),
  payment_type                  VARCHAR2(1),
  zakat_charges                 NUMBER,
  net_settlement_amount         NUMBER,
  surrender_charges             NUMBER,
  settled_amount                NUMBER,
  advice_ref                    VARCHAR2(100),
  adjusted_amount               NUMBER,
  process_tag                   VARCHAR2(1),
  process_date                  DATE,
  zakat_refund_tag              VARCHAR2(1),
  zakat_refund_id               NUMBER,
  regular_amount                NUMBER,
  topup_amount                  NUMBER,
  lock_flag_zakat               VARCHAR2(1),
  post_flag_zakat               VARCHAR2(1),
  advice_key                    VARCHAR2(50),
  post_zakat_refund_date        DATE,
  post_zakat_refund_by          VARCHAR2(50),
  surrender_charges_rate        NUMBER,
  surrender_fees                NUMBER,
  sett_payable_to_zakat         NUMBER,
  payer_code_zakat              NUMBER,
  sett_category_code_zakat      VARCHAR2(1),
  payment_type_zakat            VARCHAR2(1),
  bank_name_zakat               VARCHAR2(50),
  bank_branch_zakat             VARCHAR2(50),
  bank_account_zakat            VARCHAR2(50),
  regular_amount_zakat          NUMBER,
  topup_amount_zakat            NUMBER,
  zakat_excemption_zakat        VARCHAR2(1),
  attachment_zakat_exempt_zakat VARCHAR2(1000),
  process_tag_zakat             VARCHAR2(1),
  advice_key_zakat_refund       VARCHAR2(50),
  sett_date_zakat               DATE,
  request_date_zakat            DATE,
  sett_amount_regular           NUMBER,
  sett_amount_adhoc             NUMBER,
  lapse_charges                 NUMBER,
  lapse_charges_rate            NUMBER,
  auto_tag                      VARCHAR2(1)
)
;
alter table IL_DOC_SETTLEMENT_HD_T
  add constraint PK_IL_DOC_SETTLEMENT_HD_T primary key (ORG_ID, BRANCH_ID, SETT_NO);
alter table IL_DOC_SETTLEMENT_HD_T
  add constraint FK_SETT_TYPE_SETT foreign key (ORG_ID, SETT_TYPE)
  references IL_SETTLEMENT_TYPE_SETUP_T (ORG_ID, TYPE_CODE);

prompt
prompt Creating table IL_DOC_STATUS_TRANS_TYPE_MAP_T
prompt =============================================
prompt
create table IL_DOC_STATUS_TRANS_TYPE_MAP_T
(
  org_id           NUMBER not null,
  status_code      NUMBER not null,
  transaction_type NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1)
)
;
alter table IL_DOC_STATUS_TRANS_TYPE_MAP_T
  add constraint PK_IL_STATUS_TRANS_TYPE_MAP_T primary key (ORG_ID, STATUS_CODE, TRANSACTION_TYPE);
alter table IL_DOC_STATUS_TRANS_TYPE_MAP_T
  add constraint FK_STATUS_TRANS_TYP foreign key (ORG_ID, TRANSACTION_TYPE)
  references IL_ALLOC_TRANS_TYPE_T (ORG_ID, TYPE_CODE);
alter table IL_DOC_STATUS_TRANS_TYPE_MAP_T
  add constraint FK_STATUS_TT_STATUS foreign key (ORG_ID, STATUS_CODE)
  references IL_DOC_STATUS_SETUP_T (ORG_ID, STATUS_CODE);

prompt
prompt Creating table IL_DOC_SUM_COVERED_HISTORY_T
prompt ===========================================
prompt
create table IL_DOC_SUM_COVERED_HISTORY_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  serial_no          NUMBER not null,
  sum_covered        NUMBER,
  total_contribution NUMBER,
  sum_covered_ratio  NUMBER,
  reversal_tag       VARCHAR2(1),
  reverse_by         VARCHAR2(1),
  reverse_date       DATE,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  remarks            VARCHAR2(500)
)
;
alter table IL_DOC_SUM_COVERED_HISTORY_T
  add constraint PK_IL_DOC_SC_HIST primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table IL_DOC_SUM_COVERED_HISTORY_T
  add constraint FK_IL_DOC_SC_HIST_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_SUPR_APPROVAL_HIST_T
prompt ==========================================
prompt
create table IL_DOC_SUPR_APPROVAL_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  supervisor_id     NUMBER,
  supr_action_taken VARCHAR2(10),
  remarks           VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_DOC_SUPR_APPROVAL_HIST_T
  add constraint PK_IL_DOC_SUP_APPR primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, SERIAL_NO);
alter table IL_DOC_SUPR_APPROVAL_HIST_T
  add constraint FL_IL_DOC_SUP_ADDR foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_SURPLUS_PROCESS_HD_T
prompt ==========================================
prompt
create table IL_DOC_SURPLUS_PROCESS_HD_T
(
  org_id           NUMBER not null,
  process_id       NUMBER not null,
  as_at_date       DATE,
  payment_mode     VARCHAR2(1),
  total_amount     NUMBER,
  process_by       VARCHAR2(50),
  process_tag      VARCHAR2(1),
  process_date     DATE,
  lock_flag        VARCHAR2(5),
  locked_date      DATE,
  locked_by        VARCHAR2(150),
  post_flag        VARCHAR2(5),
  posted_date      DATE,
  posted_by        VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DOC_SURPLUS_PROCESS_HD_T
  add constraint PK_DOC_SURPLUS primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_SURPLUS_PROCESS_DTL_T
prompt ===========================================
prompt
create table IL_DOC_SURPLUS_PROCESS_DTL_T
(
  org_id               NUMBER not null,
  process_id           NUMBER not null,
  serial_no            NUMBER not null,
  doc_reference_no     VARCHAR2(50),
  doc_reference_key    VARCHAR2(50),
  allocation_id        NUMBER,
  sub_serial_no        NUMBER,
  month_no             NUMBER,
  allocation_type      NUMBER,
  transaction_date     DATE,
  requested_date       DATE,
  pia_amount           NUMBER,
  ptf_amount           NUMBER,
  surplus_ratio        NUMBER,
  surplus_amount       NUMBER,
  surplus_amount_total NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  transaction_type     NUMBER
)
;
alter table IL_DOC_SURPLUS_PROCESS_DTL_T
  add constraint PK_DOC_SURPLUS_DTL primary key (ORG_ID, PROCESS_ID, SERIAL_NO);
alter table IL_DOC_SURPLUS_PROCESS_DTL_T
  add constraint FK_SURPLUS_KD_DTL foreign key (ORG_ID, PROCESS_ID)
  references IL_DOC_SURPLUS_PROCESS_HD_T (ORG_ID, PROCESS_ID);

prompt
prompt Creating table IL_DOC_TOP_UP_COMMENTS_T
prompt =======================================
prompt
create table IL_DOC_TOP_UP_COMMENTS_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  top_up_id        NUMBER not null,
  serial_no        NUMBER not null,
  attachment_code  NUMBER,
  comments         VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_DOC_TOP_UP_COMMENTS_T
  add constraint PK_IL_TOP_UP_COMMENTS_T primary key (ORG_ID, BRANCH_ID, TOP_UP_ID, SERIAL_NO);
alter table IL_DOC_TOP_UP_COMMENTS_T
  add constraint FK_DOC_TOP_UP_COMMENTS foreign key (ORG_ID, BRANCH_ID, TOP_UP_ID)
  references IL_TOPUP_REQUEST_T (ORG_ID, BRANCH_ID, TOP_UP_ID);

prompt
prompt Creating table IL_DOC_UW_COMMENTS_T
prompt ===================================
prompt
create table IL_DOC_UW_COMMENTS_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  comments          VARCHAR2(3000),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  topup_id          NUMBER
)
;
alter table IL_DOC_UW_COMMENTS_T
  add constraint PK_DOC_UW_COMMENTS primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, SERIAL_NO);
alter table IL_DOC_UW_COMMENTS_T
  add constraint FK_DOC_UW_COMMENTS_HD foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references IL_DOC_HEADER_T (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table IL_DOC_UW_COMMENTS_UND_T
prompt =======================================
prompt
create table IL_DOC_UW_COMMENTS_UND_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10),
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10),
  issue_count       NUMBER,
  endorsement_no    NUMBER,
  application_id    NUMBER,
  serial_no         NUMBER not null,
  comments          VARCHAR2(3000),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  process_id        NUMBER not null
)
;
alter table IL_DOC_UW_COMMENTS_UND_T
  add constraint PK_DOC_COMMENTS_UND primary key (ORG_ID, BRANCH_ID, PROCESS_ID, SERIAL_NO);

prompt
prompt Creating table IL_EVENT_GROUP_SETUP_T
prompt =====================================
prompt
create table IL_EVENT_GROUP_SETUP_T
(
  org_id           NUMBER not null,
  group_code       NUMBER not null,
  description      VARCHAR2(300),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_EVENT_GROUP_SETUP_T
  add constraint PK_EVENT_GROUP_SETUP primary key (ORG_ID, GROUP_CODE);

prompt
prompt Creating table IL_EVENT_CATEGORY_SETUP_T
prompt ========================================
prompt
create table IL_EVENT_CATEGORY_SETUP_T
(
  org_id           NUMBER not null,
  group_code       NUMBER not null,
  category_code    NUMBER not null,
  description      VARCHAR2(300),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_EVENT_CATEGORY_SETUP_T
  add constraint PK_IL_EVENT_CAT_SETUP primary key (ORG_ID, GROUP_CODE, CATEGORY_CODE);
alter table IL_EVENT_CATEGORY_SETUP_T
  add constraint FK_EVENT_CATEGORY_GROUP foreign key (ORG_ID, GROUP_CODE)
  references IL_EVENT_GROUP_SETUP_T (ORG_ID, GROUP_CODE);

prompt
prompt Creating table IL_EVENT_SETUP_T
prompt ===============================
prompt
create table IL_EVENT_SETUP_T
(
  org_id           NUMBER not null,
  event_code       NUMBER not null,
  description      VARCHAR2(300),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  group_code       NUMBER not null,
  category_code    NUMBER not null,
  active           VARCHAR2(1),
  release_tag      VARCHAR2(1)
)
;
alter table IL_EVENT_SETUP_T
  add constraint PK_IL_EVENT_SETUP primary key (ORG_ID, GROUP_CODE, CATEGORY_CODE, EVENT_CODE);
alter table IL_EVENT_SETUP_T
  add constraint FK_EVENT_CATEGORY foreign key (ORG_ID, GROUP_CODE, CATEGORY_CODE)
  references IL_EVENT_CATEGORY_SETUP_T (ORG_ID, GROUP_CODE, CATEGORY_CODE);

prompt
prompt Creating table IL_EVENT_TEMPLATE_MAP_T
prompt ======================================
prompt
create table IL_EVENT_TEMPLATE_MAP_T
(
  org_id               NUMBER not null,
  event_code           NUMBER not null,
  template_code        NUMBER not null,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  group_code           NUMBER not null,
  category_code        NUMBER not null,
  description          VARCHAR2(300),
  active               VARCHAR2(1),
  template_code_sms    NUMBER,
  template_code_email  NUMBER,
  effective_days_after NUMBER
)
;
alter table IL_EVENT_TEMPLATE_MAP_T
  add constraint PK_EVENT_TEMPLATE_MAP primary key (ORG_ID, GROUP_CODE, CATEGORY_CODE, EVENT_CODE, TEMPLATE_CODE);
alter table IL_EVENT_TEMPLATE_MAP_T
  add constraint FK_EVENT_TEMPLATE_MAP_EVENT foreign key (ORG_ID, GROUP_CODE, CATEGORY_CODE, EVENT_CODE)
  references IL_EVENT_SETUP_T (ORG_ID, GROUP_CODE, CATEGORY_CODE, EVENT_CODE);
alter table IL_EVENT_TEMPLATE_MAP_T
  add constraint FK_EVENT_TMP_MAP_TEMPLATE_EM foreign key (TEMPLATE_CODE_EMAIL)
  references EMAIL_TEMPLATES_T (TEMPLATE_ID);
alter table IL_EVENT_TEMPLATE_MAP_T
  add constraint FK_EVENT_TMP_MAP_TEMPLATE_SMS foreign key (TEMPLATE_CODE_SMS)
  references EMAIL_TEMPLATES_T (TEMPLATE_ID);

prompt
prompt Creating table IL_FUND_PRICE_HISTORY_T
prompt ======================================
prompt
create table IL_FUND_PRICE_HISTORY_T
(
  org_id           NUMBER not null,
  fund_code        NUMBER not null,
  serial_no        NUMBER not null,
  transaction_date DATE,
  bid_price        NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_FUND_PRICE_HISTORY_T
  add constraint PK_FUND_PRICE_HIST primary key (ORG_ID, FUND_CODE, SERIAL_NO);
alter table IL_FUND_PRICE_HISTORY_T
  add constraint FK_FUND_PRICE_FUND foreign key (ORG_ID, FUND_CODE)
  references FUND_SETUP_T (ORG_ID, FUND_CODE);

prompt
prompt Creating table IL_IFRS17_GROUP_SETUP_T
prompt ======================================
prompt
create table IL_IFRS17_GROUP_SETUP_T
(
  org_id           NUMBER not null,
  code             NUMBER not null,
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_IFRS17_GROUP_SETUP_T
  add constraint PK_IL_IFRS17_GROUP_SETUP_T primary key (ORG_ID, CODE);

prompt
prompt Creating table IL_IFRS_PORTFOLIO_TAGGING_T
prompt ==========================================
prompt
create table IL_IFRS_PORTFOLIO_TAGGING_T
(
  org_id           NUMBER not null,
  sr_no            NUMBER not null,
  policy_no        VARCHAR2(100),
  ifrs17_group     VARCHAR2(100),
  fiscal_year      NUMBER,
  uw_year          NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_IFRS_PORTFOLIO_TAGGING_T
  add constraint PK_IL_IFRS_PORTFOLIO_TAGGING_T primary key (ORG_ID, SR_NO);

prompt
prompt Creating table IL_MEDICAL_TEST_SETUP_T
prompt ======================================
prompt
create table IL_MEDICAL_TEST_SETUP_T
(
  org_id            NUMBER not null,
  medical_test_code NUMBER not null,
  description       VARCHAR2(300),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  medical_type      VARCHAR2(20),
  display_order     NUMBER
)
;
alter table IL_MEDICAL_TEST_SETUP_T
  add constraint PK_MEDICAL_TEST_SETUP primary key (ORG_ID, MEDICAL_TEST_CODE);

prompt
prompt Creating table IL_MONEY_TRANSFER_DETAIL_T
prompt =========================================
prompt
create table IL_MONEY_TRANSFER_DETAIL_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  money_transfer_id          NUMBER not null,
  money_transfer_detail_id   NUMBER not null,
  transfer_from_doc_no       VARCHAR2(100),
  transfer_from_reg_amount   NUMBER(15,2),
  transfer_from_adhoc_amount NUMBER(15,2),
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  source                     VARCHAR2(20),
  transfer_from_doc_no_key   VARCHAR2(150),
  transfer_to_doc_no_key     VARCHAR2(150),
  sett_no                    NUMBER,
  sett_type                  NUMBER
)
;
alter table IL_MONEY_TRANSFER_DETAIL_T
  add constraint PK_IL_MONEY_TRSFR_DET primary key (ORG_ID, BRANCH_ID, MONEY_TRANSFER_ID, MONEY_TRANSFER_DETAIL_ID);

prompt
prompt Creating table IL_MONTHLY_PROC_BULK_T
prompt =====================================
prompt
create table IL_MONTHLY_PROC_BULK_T
(
  org_id            NUMBER not null,
  proposal_no       VARCHAR2(50) not null,
  policy_no         VARCHAR2(50) not null,
  comm_date         DATE,
  issue_date        DATE,
  process_tag       VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  doc_reference_key VARCHAR2(50)
)
;
alter table IL_MONTHLY_PROC_BULK_T
  add constraint PK_M_PROC_BULK primary key (ORG_ID, PROPOSAL_NO, POLICY_NO);

prompt
prompt Creating table IL_MONT_FILE_HEADER_T
prompt ====================================
prompt
create table IL_MONT_FILE_HEADER_T
(
  org_id             NUMBER not null,
  file_name          VARCHAR2(150),
  serial_no          NUMBER not null,
  from_date          DATE,
  to_date            DATE,
  no_of_policies     NUMBER,
  total_contribution NUMBER,
  created_by         VARCHAR2(150),
  created_date       DATE,
  partner_id         NUMBER not null
)
;
alter table IL_MONT_FILE_HEADER_T
  add constraint IL_MONT_FILE_HEADER_T_PK primary key (ORG_ID, SERIAL_NO, PARTNER_ID);

prompt
prompt Creating table IL_NA_FINANCIAL_PRIORITY_T
prompt =========================================
prompt
create table IL_NA_FINANCIAL_PRIORITY_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  na_code           NUMBER not null,
  priority_id       NUMBER not null,
  value             VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_NA_FINANCIAL_PRIORITY_T
  add constraint PK_NA_FP_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NA_CODE, PRIORITY_ID);

prompt
prompt Creating table IL_NA_FINANCIAL_T
prompt ================================
prompt
create table IL_NA_FINANCIAL_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  na_code            NUMBER not null,
  financial_id       NUMBER not null,
  sr_code            NUMBER not null,
  last_year_value    VARCHAR2(150),
  current_year_value VARCHAR2(150),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table IL_NA_FINANCIAL_T
  add constraint PK_NA_FINANCIAL_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NA_CODE, FINANCIAL_ID, SR_CODE);

prompt
prompt Creating table IL_NA_INSURANCE_NEED_T
prompt =====================================
prompt
create table IL_NA_INSURANCE_NEED_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  na_code           NUMBER not null,
  serial_code       NUMBER not null,
  insurance_need_id VARCHAR2(50),
  insurance_option  VARCHAR2(50),
  insurance_value   VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_NA_INSURANCE_NEED_T
  add constraint PK_IL_NA_INSURANCE primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NA_CODE, SERIAL_CODE);

prompt
prompt Creating table IL_NEED_ANALYSIS_HD_T
prompt ====================================
prompt
create table IL_NEED_ANALYSIS_HD_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  na_code                 NUMBER not null,
  saving_need             VARCHAR2(100),
  life_stage_recom        VARCHAR2(200),
  protection_need_recom   VARCHAR2(200),
  appetite_for_risk_recom VARCHAR2(200),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  policy_recommendation   VARCHAR2(200),
  year_commitment         VARCHAR2(200),
  risk_elements           VARCHAR2(200),
  membership_recom        VARCHAR2(200),
  consultant_name         VARCHAR2(500),
  consultant_code         VARCHAR2(500),
  cold_contact            VARCHAR2(500),
  known_duration          VARCHAR2(50),
  is_relative             VARCHAR2(10),
  relation_state          VARCHAR2(500),
  takaful_purpose         VARCHAR2(50),
  application_pending     VARCHAR2(10),
  covered_income          NUMBER,
  unfavorable_info        VARCHAR2(10),
  unfavorable_detail      VARCHAR2(500)
)
;
alter table IL_NEED_ANALYSIS_HD_T
  add constraint PK_IL_NA_HD primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NA_CODE);

prompt
prompt Creating table IL_NIV_ADJUSTMENT_DTL_T
prompt ======================================
prompt
create table IL_NIV_ADJUSTMENT_DTL_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  process_id       NUMBER not null,
  fund_code        NUMBER not null,
  allocation_type  NUMBER not null,
  niv_amount       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  niv_units        NUMBER
)
;
alter table IL_NIV_ADJUSTMENT_DTL_T
  add constraint PK_IL_NIV_ADJUSTMENT_DTL_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID, FUND_CODE, ALLOCATION_TYPE);

prompt
prompt Creating table IL_NIV_ADJUSTMENT_HD_T
prompt =====================================
prompt
create table IL_NIV_ADJUSTMENT_HD_T
(
  org_id                        NUMBER not null,
  branch_id                     NUMBER not null,
  process_id                    NUMBER not null,
  process_date                  DATE,
  request_date                  DATE,
  niv_adjustment_amount_regular NUMBER,
  niv_adjustment_amount_adhoc   NUMBER,
  pmd_ref_no                    VARCHAR2(50),
  pmd_ref_no_key                VARCHAR2(150),
  created_by                    VARCHAR2(50),
  creation_date                 DATE,
  last_updated_by               VARCHAR2(50),
  last_update_date              DATE,
  lock_flag                     VARCHAR2(1),
  post_flag                     VARCHAR2(1),
  posted_date                   DATE,
  posted_by                     VARCHAR2(50),
  cancel_flag                   VARCHAR2(1),
  cancel_date                   DATE,
  cancel_by                     VARCHAR2(50),
  adjustment_type               VARCHAR2(1),
  niv_adjustment_units_regular  NUMBER,
  niv_adjustment_units_adhoc    NUMBER,
  process_tag                   VARCHAR2(1),
  process_by                    VARCHAR2(50),
  process_comments              VARCHAR2(500)
)
;
alter table IL_NIV_ADJUSTMENT_HD_T
  add constraint PK_IL_NIV_ADJUSTMENT_HD_T primary key (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table IL_NON_FINANCIAL_CHANGES_LOGS
prompt ============================================
prompt
create table IL_NON_FINANCIAL_CHANGES_LOGS
(
  org_id             NUMBER not null,
  log_id             NUMBER not null,
  change_description VARCHAR2(500),
  new_value          VARCHAR2(1000),
  target_table       VARCHAR2(100),
  target_document_no VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  old_value          VARCHAR2(1000),
  doc_reference_key  VARCHAR2(100),
  activity           VARCHAR2(150),
  sub_activity       VARCHAR2(150)
)
;
alter table IL_NON_FINANCIAL_CHANGES_LOGS
  add constraint PK_NON_FINANCIAL_CHANGES primary key (ORG_ID, LOG_ID);

prompt
prompt Creating table IL_OC_BENEFIT_MAPPING_T
prompt ======================================
prompt
create table IL_OC_BENEFIT_MAPPING_T
(
  org_id               NUMBER not null,
  occupation_code      NUMBER not null,
  application_id       NUMBER not null,
  benefit_code         NUMBER not null,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  loading_rate         NUMBER,
  effective_start_date DATE,
  effective_end_date   DATE,
  serial_no            NUMBER not null,
  underwriting_type    VARCHAR2(1),
  calculation_basis    NUMBER
)
;
alter table IL_OC_BENEFIT_MAPPING_T
  add constraint PK_OC_BEN_MAP primary key (ORG_ID, OCCUPATION_CODE, APPLICATION_ID, BENEFIT_CODE, SERIAL_NO);

prompt
prompt Creating table IL_POLICYWISE_DAILY_GAINLOSS_T
prompt =============================================
prompt
create table IL_POLICYWISE_DAILY_GAINLOSS_T
(
  org_id             NUMBER,
  process_date       DATE,
  master_ref_no      VARCHAR2(50),
  pmd_year           NUMBER,
  allocation_type    NUMBER,
  fund_code          NUMBER,
  no_of_unts         NUMBER,
  last_day_price     NUMBER,
  current_day_price  NUMBER,
  last_day_amount    NUMBER,
  current_day_amount NUMBER,
  gainloss_amount    NUMBER,
  post_tag           VARCHAR2(1),
  post_date          DATE,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  cost_center_code   VARCHAR2(10),
  currency_code      VARCHAR2(10),
  bu                 VARCHAR2(300),
  lob                VARCHAR2(300),
  location           VARCHAR2(300),
  channel            NUMBER,
  agent              NUMBER,
  branch_id          NUMBER
)
;

prompt
prompt Creating table IL_POLICY_HOLD_T
prompt ===============================
prompt
create table IL_POLICY_HOLD_T
(
  org_id           NUMBER not null,
  process_id       NUMBER not null,
  process_type     CHAR(1),
  document_ref_no  VARCHAR2(150),
  document_ref_key VARCHAR2(150),
  process_date     DATE,
  request_date     DATE,
  process_comments VARCHAR2(1000),
  lock_flag        VARCHAR2(5),
  locked_date      DATE,
  locked_by        VARCHAR2(150),
  post_flag        VARCHAR2(5),
  posted_date      DATE,
  posted_by        VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  reject_tag       CHAR(1),
  return_tag       CHAR(1),
  return_date      DATE,
  reject_date      DATE,
  attachment_path  VARCHAR2(250),
  process_by       VARCHAR2(50),
  process_tag      VARCHAR2(1)
)
;
alter table IL_POLICY_HOLD_T
  add constraint PK_IL_POLICY_HOLD_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table TK_ILLUSTRATIONHD_POS
prompt ====================================
prompt
create table TK_ILLUSTRATIONHD_POS
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  main_product_code           NUMBER not null,
  sub_product_code            NUMBER not null,
  document_no                 VARCHAR2(10) not null,
  document_year               NUMBER not null,
  application_id              NUMBER not null,
  issue_count                 NUMBER not null,
  issue_date                  DATE,
  comm_date                   DATE,
  expiry_date                 DATE,
  doc_reference_no            VARCHAR2(50),
  name1                       VARCHAR2(50),
  name2                       VARCHAR2(50),
  dob1                        DATE,
  dob2                        DATE,
  age1                        NUMBER(3),
  age2                        NUMBER(3),
  gender1                     VARCHAR2(1),
  gender2                     VARCHAR2(1),
  policy_term                 NUMBER(3),
  sum_covered                 NUMBER(15,2),
  sum_covered_index           NUMBER(15,2),
  contribution_index          NUMBER(15,2),
  basic_contribution          NUMBER(15,2),
  gross_contribution          NUMBER(15,2),
  net_contribution            NUMBER(15,2),
  cover_multiple              NUMBER,
  cont_margin                 NUMBER(9,6),
  last_age_index              NUMBER(3),
  waqala_fee                  NUMBER(15,2),
  expected_claim              NUMBER(15,2),
  investment_income           NUMBER(15,2),
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  second_life                 VARCHAR2(1),
  payment_mode                VARCHAR2(1),
  bid_offer                   NUMBER(15,2),
  cnic_no                     VARCHAR2(50),
  cnic_issue_date             DATE,
  cnic_expiry_date            DATE,
  cnic_no2                    VARCHAR2(50),
  cnic_issue_date2            DATE,
  cnic_expiry_date2           DATE,
  relation_code               NUMBER,
  posting_tag                 VARCHAR2(1),
  send_to_quotation           VARCHAR2(1),
  payment_term                NUMBER,
  post_by                     VARCHAR2(50),
  post_date                   DATE,
  convert_tag                 VARCHAR2(1),
  revised_tag                 VARCHAR2(1),
  converted_doc_no            VARCHAR2(50),
  base_doc_no                 VARCHAR2(50),
  proposal_draft_tag          VARCHAR2(1),
  basic_contribution_modal    NUMBER,
  sum_covered_modal           NUMBER,
  middle_name1                VARCHAR2(50),
  last_name1                  VARCHAR2(50),
  channel_id                  NUMBER,
  model_id                    NUMBER,
  agent_id                    NUMBER,
  partner_id                  NUMBER,
  total_contribution_modal    NUMBER,
  calculation_type            VARCHAR2(20),
  target_value                NUMBER,
  title                       VARCHAR2(50),
  taxstatus                   VARCHAR2(5),
  mobile_no                   VARCHAR2(20),
  currency_code               VARCHAR2(10),
  partner_branch_id           NUMBER,
  topup_allocation            NUMBER,
  agent_branch_id             VARCHAR2(20),
  projection_tag              VARCHAR2(1),
  no_of_persons               NUMBER,
  mode_loading_contribution   NUMBER,
  annual_loading_contribution NUMBER,
  decision_code               VARCHAR2(50),
  revised_from_proposal       VARCHAR2(1),
  cancel_tag                  VARCHAR2(1),
  contribution_rate           NUMBER,
  occupational_industry       VARCHAR2(100),
  occupation                  VARCHAR2(100),
  proposal_entry_date         DATE,
  basic_cont_ann_before_fee   NUMBER,
  basic_cont_mod_before_fee   NUMBER,
  policy_fee                  NUMBER,
  smoker_tag                  VARCHAR2(1),
  daily_amount                NUMBER,
  email_address               VARCHAR2(100),
  clone_tag                   VARCHAR2(1)
)
;
alter table TK_ILLUSTRATIONHD_POS
  add constraint PK_ILLHD_POS primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT);
alter table TK_ILLUSTRATIONHD_POS
  add constraint FK_CHANNEL_ILLHD foreign key (ORG_ID, CHANNEL_ID)
  references AM_DISTRIBUTION_CHANNEL_T (ORG_ID, CHANNEL_ID);
alter table TK_ILLUSTRATIONHD_POS
  add constraint FK_CHANNEL_MODEL_ILLHD foreign key (ORG_ID, CHANNEL_ID, MODEL_ID)
  references AM_CHANNEL_MODEL_T (ORG_ID, CHANNEL_ID, MODEL_ID);
alter table TK_ILLUSTRATIONHD_POS
  add constraint FK_ILL_AGENT foreign key (ORG_ID, AGENT_ID)
  references AM_AGENT_T (ORG_ID, AGENT_ID);
alter table TK_ILLUSTRATIONHD_POS
  add constraint FK_ILL_AGENT_PARTNER foreign key (ORG_ID, AGENT_ID, PARTNER_ID)
  references AM_AGENT_PARTNER_T (ORG_ID, AGENT_ID, PARTNER_ID);
alter table TK_ILLUSTRATIONHD_POS
  add constraint PK_ILLHD_PRODUCT foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_POS_MED_DTL_T
prompt ===============================
prompt
create table IL_POS_MED_DTL_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  document_no       VARCHAR2(10) not null,
  document_year     NUMBER not null,
  application_id    NUMBER not null,
  issue_count       NUMBER not null,
  item_no           NUMBER not null,
  uw_code           NUMBER not null,
  uw_status         VARCHAR2(5),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  file_attached     VARCHAR2(200),
  remarks           VARCHAR2(500),
  completion_date   DATE,
  display_order     NUMBER,
  service_provider  VARCHAR2(10),
  requirement_notes VARCHAR2(500),
  serial_no         NUMBER not null,
  req_type_code     VARCHAR2(10)
)
;
alter table IL_POS_MED_DTL_T
  add constraint PK_IL_POS_MED_DTL primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, ITEM_NO, UW_CODE, SERIAL_NO);
alter table IL_POS_MED_DTL_T
  add constraint FK_ILL_POS_DOC_MED_HEADER foreign key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT)
  references TK_ILLUSTRATIONHD_POS (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT);
alter table IL_POS_MED_DTL_T
  add constraint FK_IL_POS_MED_REQ foreign key (ORG_ID, UW_CODE)
  references GLAS_UNDWT_REQ_SETUP_T (ORG_ID, REQ_CODE);

prompt
prompt Creating table IL_PRC_DATA
prompt ==========================
prompt
create table IL_PRC_DATA
(
  master_ref_no      VARCHAR2(150),
  basic_contribution NUMBER,
  currency_code      VARCHAR2(120),
  customer_acc_no    VARCHAR2(120),
  partner_acc_no     VARCHAR2(120),
  issue_date         VARCHAR2(100),
  created_by         VARCHAR2(150),
  creation_date      DATE,
  status             VARCHAR2(80),
  org_id             NUMBER,
  serial_no          NUMBER,
  partner_id         NUMBER
)
;

prompt
prompt Creating table IL_PROCESS_REASON_SETUP_T
prompt ========================================
prompt
create table IL_PROCESS_REASON_SETUP_T
(
  org_id           NUMBER not null,
  reason_code      NUMBER not null,
  description      VARCHAR2(300),
  long_description VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_PROCESS_REASON_SETUP_T
  add constraint PK_PROCESS_REASON_SETUP primary key (ORG_ID, REASON_CODE);

prompt
prompt Creating table IL_PROCESS_REQUEST_SETUP_T
prompt =========================================
prompt
create table IL_PROCESS_REQUEST_SETUP_T
(
  org_id           NUMBER not null,
  request_code     NUMBER not null,
  description      VARCHAR2(300),
  long_description VARCHAR2(1000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  include_subject  VARCHAR2(1)
)
;
alter table IL_PROCESS_REQUEST_SETUP_T
  add constraint PK_PROCESS_REQUEST_SETUP primary key (ORG_ID, REQUEST_CODE);

prompt
prompt Creating table IL_PRODUCTION_COMM_PROCESS_T
prompt ===========================================
prompt
create table IL_PRODUCTION_COMM_PROCESS_T
(
  org_id             NUMBER not null,
  process_id         NUMBER not null,
  process_date_from  DATE,
  process_date_to    DATE,
  partner_id         NUMBER,
  channel_id         NUMBER,
  model_id           NUMBER,
  level_id           NUMBER,
  agent_id           NUMBER,
  master_ref_no      VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  lock_flag          VARCHAR2(5),
  locked_date        DATE,
  locked_by          VARCHAR2(150),
  post_flag          VARCHAR2(5),
  posted_date        DATE,
  posted_by          VARCHAR2(150),
  sub_product_code   NUMBER,
  persistency_type   VARCHAR2(1),
  production_type    VARCHAR2(2),
  production_partner VARCHAR2(500),
  multi_sub_product  VARCHAR2(200),
  multi_channels     VARCHAR2(200),
  multi_models       VARCHAR2(200)
)
;
alter table IL_PRODUCTION_COMM_PROCESS_T
  add constraint PK_IL_PRODUC_COMM_PROCESS_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table IL_PRODUCT_CATEGORIES_MAP_T
prompt ==========================================
prompt
create table IL_PRODUCT_CATEGORIES_MAP_T
(
  org_id            NUMBER,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  category_code     NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  product_id        NUMBER
)
;

prompt
prompt Creating table IL_PROD_COMM_PROCESS_DTL_T
prompt =========================================
prompt
create table IL_PROD_COMM_PROCESS_DTL_T
(
  org_id                NUMBER not null,
  branch_id             NUMBER not null,
  main_product_code     NUMBER not null,
  sub_product_code      NUMBER not null,
  takaful_type          VARCHAR2(1) not null,
  document_type         VARCHAR2(1) not null,
  document_no           VARCHAR2(10) not null,
  record_type           VARCHAR2(1) not null,
  document_year         VARCHAR2(10) not null,
  issue_count           NUMBER not null,
  endorsement_no        NUMBER not null,
  application_id        NUMBER not null,
  allocation_id         NUMBER not null,
  sub_serial_no         NUMBER not null,
  serial_no             NUMBER not null,
  channel_id            NUMBER,
  model_id              NUMBER,
  partner_id            NUMBER,
  designation_id        NUMBER,
  designation_level     NUMBER,
  commission_rate       NUMBER,
  transaction_date      DATE,
  created_by            VARCHAR2(50),
  creation_date         DATE,
  month_no              NUMBER,
  allocation_type       NUMBER not null,
  transaction_type      NUMBER,
  commission_amount     NUMBER,
  agent_id              NUMBER,
  commission_rate_topup NUMBER,
  agency_type           VARCHAR2(1),
  reversal_tag          VARCHAR2(1),
  sub_serial_no_rev     NUMBER,
  policy_term           NUMBER,
  pk_serial_no          NUMBER not null,
  charge_serial_no      NUMBER,
  rider_code            NUMBER,
  commission_nature     VARCHAR2(1),
  jump_tag              VARCHAR2(1),
  deferred_tag          VARCHAR2(1),
  master_ref_no         VARCHAR2(100),
  contribution_paid_amt NUMBER,
  process_id            NUMBER not null,
  installment_no        NUMBER,
  bus_credit            NUMBER,
  doc_reference_no      VARCHAR2(100)
)
;
alter table IL_PROD_COMM_PROCESS_DTL_T
  add constraint PK_IL_PROD_COMM_PROCESS_DTL_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ALLOCATION_TYPE, ALLOCATION_ID, SUB_SERIAL_NO, SERIAL_NO, PK_SERIAL_NO, PROCESS_ID);

prompt
prompt Creating table IL_PROF_INCOME_SOURCE_T
prompt ======================================
prompt
create table IL_PROF_INCOME_SOURCE_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  info_id           NUMBER not null,
  serial_no         NUMBER not null,
  income_source_id  NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_PROF_INCOME_SOURCE_T
  add constraint PK_IL_PROF_INC_SRC_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, INFO_ID, SERIAL_NO);

prompt
prompt Creating table IL_PR_HEADER_T
prompt =============================
prompt
create table IL_PR_HEADER_T
(
  receipt_no        NUMBER not null,
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  sl_type           VARCHAR2(50),
  sl_code           VARCHAR2(50),
  knockoff_date     DATE,
  from_date         DATE,
  to_date           DATE,
  filter            VARCHAR2(20),
  bank_code         VARCHAR2(50),
  branch_code       VARCHAR2(50),
  bank_account      VARCHAR2(50),
  instrument_type   VARCHAR2(50),
  instrument_number VARCHAR2(50),
  instrument_date   DATE,
  lock_check        NVARCHAR2(20),
  instrument_amount NUMBER,
  clearence_check   VARCHAR2(20),
  clearence_date    DATE,
  voucher_type      VARCHAR2(50),
  status            VARCHAR2(20),
  reason            VARCHAR2(50),
  comments          VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  drawn_on          VARCHAR2(200),
  clear_by          NVARCHAR2(20),
  lock_date         DATE,
  lock_by           VARCHAR2(20),
  policy            VARCHAR2(50),
  drawn_on_bank     VARCHAR2(50),
  original_tag      VARCHAR2(10),
  pr_original_tag   VARCHAR2(10),
  remarks           VARCHAR2(500),
  pr_year           VARCHAR2(10) not null,
  pr_month          VARCHAR2(2) not null,
  pr_ref_no         VARCHAR2(30),
  partner_id        NUMBER,
  partner_branch_id NUMBER,
  pr_type           VARCHAR2(1),
  bank_account_code VARCHAR2(50),
  application_id    NUMBER not null
)
;
alter table IL_PR_HEADER_T
  add constraint IL_PR_HEADER_T_PK primary key (ORG_ID, BRANCH_ID, APPLICATION_ID, PR_YEAR, PR_MONTH, RECEIPT_NO);

prompt
prompt Creating table IL_PR_DETAIL_T
prompt =============================
prompt
create table IL_PR_DETAIL_T
(
  s_no                  NUMBER not null,
  org_id                NUMBER not null,
  branch_id             NUMBER not null,
  receipt_no            NUMBER not null,
  document_no           VARCHAR2(50),
  document_type         VARCHAR2(10),
  issue_count           NUMBER,
  endorsement_no        NUMBER,
  gdh_doc_reference_no  VARCHAR2(50),
  gdh_gross_premium     NUMBER,
  master_ref_no         VARCHAR2(50),
  advance_amount        NUMBER,
  received_amount       NUMBER,
  received_amount_adhoc NUMBER,
  advance_amount_adhoc  NUMBER,
  due_date              DATE,
  pr_year               VARCHAR2(10) not null,
  pr_month              VARCHAR2(2) not null,
  gdh_doc_ref_no_key    VARCHAR2(150),
  application_id        NUMBER not null
)
;
alter table IL_PR_DETAIL_T
  add constraint IL_PR_DETAIL_T_PK primary key (ORG_ID, BRANCH_ID, APPLICATION_ID, PR_YEAR, PR_MONTH, RECEIPT_NO, S_NO);
alter table IL_PR_DETAIL_T
  add constraint IL_PR_DETAIL_T_FK foreign key (ORG_ID, BRANCH_ID, APPLICATION_ID, PR_YEAR, PR_MONTH, RECEIPT_NO)
  references IL_PR_HEADER_T (ORG_ID, BRANCH_ID, APPLICATION_ID, PR_YEAR, PR_MONTH, RECEIPT_NO);

prompt
prompt Creating table IL_PR_UPLOAD_LOG_T
prompt =================================
prompt
create table IL_PR_UPLOAD_LOG_T
(
  org_id            NUMBER not null,
  record_id         NUMBER not null,
  pr_date           DATE,
  policy_no         VARCHAR2(200),
  drawn_bank        VARCHAR2(200),
  drawn_branch      VARCHAR2(200),
  instrument_date   DATE,
  instrument_number VARCHAR2(50),
  instrument_type   VARCHAR2(10),
  bank_account      VARCHAR2(100),
  regular_amount    NUMBER,
  topup_amount      NUMBER,
  remarks           VARCHAR2(500),
  clear_tag         VARCHAR2(1),
  clear_comments    VARCHAR2(500),
  error_message     VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_PR_UPLOAD_LOG_T
  add constraint PK_IL_PR_UPLOAD_LOG_T primary key (ORG_ID, RECORD_ID);

prompt
prompt Creating table IL_PR_UPLOAD_T
prompt =============================
prompt
create table IL_PR_UPLOAD_T
(
  org_id            NUMBER not null,
  record_id         NUMBER not null,
  pr_date           DATE,
  policy_no         VARCHAR2(200),
  drawn_bank        VARCHAR2(200),
  drawn_branch      VARCHAR2(200),
  instrument_date   DATE,
  instrument_number VARCHAR2(50),
  instrument_type   VARCHAR2(10),
  bank_account      VARCHAR2(100),
  regular_amount    NUMBER,
  topup_amount      NUMBER,
  remarks           VARCHAR2(500),
  clear_tag         VARCHAR2(1),
  clear_comments    VARCHAR2(500),
  error_message     VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_PR_UPLOAD_T
  add constraint PK_IL_PR_UPLOAD_T primary key (ORG_ID, RECORD_ID);

prompt
prompt Creating table IL_RATING_CLASS_SETUP_T
prompt ======================================
prompt
create table IL_RATING_CLASS_SETUP_T
(
  org_id            NUMBER not null,
  rating_class_code NUMBER not null,
  rating_class_desc VARCHAR2(50),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  em_type           VARCHAR2(2)
)
;
alter table IL_RATING_CLASS_SETUP_T
  add constraint PK_RATING_CLASS primary key (ORG_ID, RATING_CLASS_CODE);
alter table IL_RATING_CLASS_SETUP_T
  add constraint FK_RT_CLASS_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_RATING_TABLE_HD_T
prompt ===================================
prompt
create table IL_RATING_TABLE_HD_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  hd_rate_id        NUMBER not null,
  rate_description  VARCHAR2(250),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  is_term           VARCHAR2(1),
  is_age            VARCHAR2(1),
  is_year           VARCHAR2(1),
  slab_basis        VARCHAR2(10),
  is_gender         VARCHAR2(1),
  is_smoker         VARCHAR2(1),
  is_payment_term   VARCHAR2(1),
  benefit_code      NUMBER
)
;
alter table IL_RATING_TABLE_HD_T
  add constraint IL_RATING_TABLE_HD_T_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_RATE_ID);

prompt
prompt Creating table IL_RATING_TABLE_BANDS_T
prompt ======================================
prompt
create table IL_RATING_TABLE_BANDS_T
(
  org_id            NUMBER,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  hd_rate_id        NUMBER,
  hd_rate_band_id   NUMBER,
  val_from          NUMBER,
  val_to            NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  bands_description VARCHAR2(500),
  benefit_code      NUMBER not null,
  effective_from    DATE,
  effective_to      DATE
)
;
alter table IL_RATING_TABLE_BANDS_T
  add constraint IL_RATING_TABLE_BANDS_T_FK01 foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_RATE_ID)
  references IL_RATING_TABLE_HD_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_RATE_ID);

prompt
prompt Creating table IL_RATING_TABLE_DETAIL_T
prompt =======================================
prompt
create table IL_RATING_TABLE_DETAIL_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  hd_rate_id        NUMBER not null,
  hd_rate_band_id   NUMBER not null,
  dtl_rate_id       NUMBER not null,
  age               NUMBER,
  term              NUMBER,
  rate              NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  policy_year       NUMBER,
  benefit_code      NUMBER,
  em_rate           NUMBER,
  ri_rate           NUMBER,
  ri_em_rate        NUMBER,
  payment_term      NUMBER,
  gender            VARCHAR2(1),
  smoker            VARCHAR2(1)
)
;
alter table IL_RATING_TABLE_DETAIL_T
  add constraint IL_RATING_TABLE_DETAIL_T_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_RATE_ID, HD_RATE_BAND_ID, DTL_RATE_ID);

prompt
prompt Creating table IL_RATING_TABLE_TYPES_SETUP_T
prompt ============================================
prompt
create table IL_RATING_TABLE_TYPES_SETUP_T
(
  org_id                NUMBER not null,
  rate_type_id          NUMBER not null,
  rate_type_description VARCHAR2(250),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE
)
;
alter table IL_RATING_TABLE_TYPES_SETUP_T
  add primary key (ORG_ID, RATE_TYPE_ID);

prompt
prompt Creating table IL_RPT_BUNDLE_T
prompt ==============================
prompt
create table IL_RPT_BUNDLE_T
(
  org_id           NUMBER not null,
  app_id           NUMBER not null,
  report_id        NUMBER not null,
  active_tag       VARCHAR2(1),
  creation_date    DATE,
  created_by       VARCHAR2(150),
  last_update_date DATE,
  last_updated_by  VARCHAR2(150),
  bundle_id        NUMBER not null
)
;
alter table IL_RPT_BUNDLE_T
  add constraint PK_IL_RPT_BUNDLE primary key (ORG_ID, APP_ID, REPORT_ID, BUNDLE_ID);
alter table IL_RPT_BUNDLE_T
  add constraint FK_IL_RPT_BUNDLE_BUNDLE_SETUP foreign key (ORG_ID, APP_ID, BUNDLE_ID)
  references BUNDLE_SETUP_T (ORG_ID, APP_ID, BUNDLE_ID);

prompt
prompt Creating table IL_SETTLEMENT_USER_MAPPING_T
prompt ===========================================
prompt
create table IL_SETTLEMENT_USER_MAPPING_T
(
  org_id           NUMBER not null,
  type_code        NUMBER not null,
  serial_code      NUMBER not null,
  userid           NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_SETTLEMENT_USER_MAPPING_T
  add constraint PK_IL_SETT_USER_MAPP_T primary key (ORG_ID, TYPE_CODE, USERID, SERIAL_CODE);

prompt
prompt Creating table IL_SUB_PRODUCT_CONTR_INDEX_T
prompt ===========================================
prompt
create table IL_SUB_PRODUCT_CONTR_INDEX_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  contribution_rate_id NUMBER not null,
  index_rate_desc      VARCHAR2(50),
  index_rate           NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table IL_SUB_PRODUCT_CONTR_INDEX_T
  add constraint PK_SUB_PR_CONTR_IND primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, CONTRIBUTION_RATE_ID);
alter table IL_SUB_PRODUCT_CONTR_INDEX_T
  add constraint FK_SUB_PR_SUB_PR_CONTR_IND foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_SUB_PRODUCT_CTRY_LOADING_T
prompt ============================================
prompt
create table IL_SUB_PRODUCT_CTRY_LOADING_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  serial_no          NUMBER not null,
  loading_percent    NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  loading_ri_percent NUMBER
)
;
alter table IL_SUB_PRODUCT_CTRY_LOADING_T
  add constraint PK_SUB_PR_CTRY_LOAD primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, SERIAL_NO);
alter table IL_SUB_PRODUCT_CTRY_LOADING_T
  add constraint FK_SUB_PR_SUB_PR_CTRY_LOAD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_SUB_PRODUCT_OCL_LOADING_T
prompt ===========================================
prompt
create table IL_SUB_PRODUCT_OCL_LOADING_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  serial_no          NUMBER not null,
  loading_percent    NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  loading_ri_percent NUMBER
)
;
alter table IL_SUB_PRODUCT_OCL_LOADING_T
  add constraint PK_SUB_PR_OCL_LOAD primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, SERIAL_NO);
alter table IL_SUB_PRODUCT_OCL_LOADING_T
  add constraint FK_SUB_PR_SUB_PR_OCL_LOAD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_SUB_PRODUCT_RTC_LOADING_T
prompt ===========================================
prompt
create table IL_SUB_PRODUCT_RTC_LOADING_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  rating_class_code NUMBER not null,
  loading_percent   NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_SUB_PRODUCT_RTC_LOADING_T
  add constraint PK_SUB_PR_RTC_LOAD primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, RATING_CLASS_CODE);
alter table IL_SUB_PRODUCT_RTC_LOADING_T
  add constraint FK_SUB_PR_SUB_PR_RTC_LOAD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);
alter table IL_SUB_PRODUCT_RTC_LOADING_T
  add constraint FK_SUB_PR_SUB_PR_RTC_RTC foreign key (ORG_ID, RATING_CLASS_CODE)
  references IL_RATING_CLASS_SETUP_T (ORG_ID, RATING_CLASS_CODE);

prompt
prompt Creating table IL_SUB_PRODUCT_SAT_INDEX_T
prompt =========================================
prompt
create table IL_SUB_PRODUCT_SAT_INDEX_T
(
  org_id             NUMBER not null,
  main_product_code  NUMBER not null,
  sub_product_code   NUMBER not null,
  sumassured_rate_id NUMBER not null,
  index_rate_desc    VARCHAR2(50),
  index_rate         NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table IL_SUB_PRODUCT_SAT_INDEX_T
  add constraint PK_SUB_PR_SAT_IND primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, SUMASSURED_RATE_ID);
alter table IL_SUB_PRODUCT_SAT_INDEX_T
  add constraint FK_SUB_PR_SUB_PR_SAT_IND foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_SUB_PROD_COMM_SETUPHD_T
prompt =========================================
prompt
create table IL_SUB_PROD_COMM_SETUPHD_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  serial_no            NUMBER not null,
  channel_id           VARCHAR2(50) not null,
  model_id             VARCHAR2(50) not null,
  term_wise_tag        VARCHAR2(1),
  created_by           VARCHAR2(100),
  creation_date        DATE,
  last_updated_by      VARCHAR2(100),
  last_update_date     DATE,
  persistency_basis    VARCHAR2(1),
  header_id            NUMBER not null,
  effective_start_date DATE,
  effective_end_date   DATE
)
;
alter table IL_SUB_PROD_COMM_SETUPHD_T
  add constraint IL_SUB_PROD_COMM_SETUPHD_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, CHANNEL_ID, MODEL_ID, HEADER_ID);

prompt
prompt Creating table IL_SUB_PROD_PTF_RATE_SETUP_T
prompt ===========================================
prompt
create table IL_SUB_PROD_PTF_RATE_SETUP_T
(
  org_id               NUMBER not null,
  main_product_code    NUMBER not null,
  sub_product_code     NUMBER not null,
  rate_id              NUMBER not null,
  rate                 NUMBER,
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(100),
  creation_date        DATE,
  last_updated_by      VARCHAR2(100),
  last_update_date     DATE
)
;
alter table IL_SUB_PROD_PTF_RATE_SETUP_T
  add constraint IL_SUB_PROD_PTF_PK primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, RATE_ID);

prompt
prompt Creating table IL_SUB_PROD_REQ_MAP_T
prompt ====================================
prompt
create table IL_SUB_PROD_REQ_MAP_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  hd_code           NUMBER not null,
  days_from         NUMBER,
  days_to           NUMBER not null,
  active            VARCHAR2(1),
  application_id    NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  display_order     NUMBER
)
;
alter table IL_SUB_PROD_REQ_MAP_T
  add constraint PK_IL_SUB_PROD_REQ primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);
alter table IL_SUB_PROD_REQ_MAP_T
  add constraint FK_IL_SB_PROD_REQ_PROD foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table IL_SUB_PROD_REQ_DTL_MAP_T
prompt ========================================
prompt
create table IL_SUB_PROD_REQ_DTL_MAP_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  hd_code           NUMBER not null,
  dtl_code          NUMBER not null,
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  uw_code           VARCHAR2(5),
  display_order     NUMBER
)
;
alter table IL_SUB_PROD_REQ_DTL_MAP_T
  add constraint PK_IL_SUB_PROD_REQ_DTL primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE, DTL_CODE);
alter table IL_SUB_PROD_REQ_DTL_MAP_T
  add constraint FK_IL_SUB_PROD_REQ_DTL_REQ foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE)
  references IL_SUB_PROD_REQ_MAP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, HD_CODE);

prompt
prompt Creating table IL_SV_TABLE_T
prompt ============================
prompt
create table IL_SV_TABLE_T
(
  org_id            NUMBER,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  rate_code         NUMBER,
  lx                NUMBER,
  dx                NUMBER,
  nx                NUMBER,
  cx                NUMBER,
  mx                NUMBER,
  sx                NUMBER,
  rx                NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;

prompt
prompt Creating table IL_TOPUP_SUSPENSE_T
prompt ==================================
prompt
create table IL_TOPUP_SUSPENSE_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  topup_amount      VARCHAR2(150),
  topup_date        DATE,
  allocation_tag    VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_TOPUP_SUSPENSE_T
  add constraint PK_IL_TOPUP_SUS_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);

prompt
prompt Creating table IL_TRANS_TYPE_MATRIX_MAP_T
prompt =========================================
prompt
create table IL_TRANS_TYPE_MATRIX_MAP_T
(
  org_id           NUMBER not null,
  transaction_type NUMBER not null,
  matrix_id        VARCHAR2(50) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  execution_order  NUMBER,
  takaful_type     VARCHAR2(20),
  application_id   NUMBER,
  fund_wise_tag    VARCHAR2(1)
)
;
alter table IL_TRANS_TYPE_MATRIX_MAP_T
  add constraint PK_TRANS_TYPE_MATRIX primary key (ORG_ID, TRANSACTION_TYPE, MATRIX_ID);

prompt
prompt Creating table IL_TRANS_TYPE_STATUS_MAP_T
prompt =========================================
prompt
create table IL_TRANS_TYPE_STATUS_MAP_T
(
  org_id           NUMBER not null,
  status_code      NUMBER not null,
  type_code        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table IL_TRANS_TYPE_STATUS_MAP_T
  add constraint PK_STATUS_CODE primary key (ORG_ID, STATUS_CODE, TYPE_CODE);
alter table IL_TRANS_TYPE_STATUS_MAP_T
  add constraint FK_IL_ALLOC_TRANS_TABLE foreign key (ORG_ID, TYPE_CODE)
  references IL_ALLOC_TRANS_TYPE_T (ORG_ID, TYPE_CODE);
alter table IL_TRANS_TYPE_STATUS_MAP_T
  add constraint FK_IL_DOC_STATUS_TABLE foreign key (ORG_ID, STATUS_CODE)
  references IL_DOC_STATUS_SETUP_T (ORG_ID, STATUS_CODE);

prompt
prompt Creating table IL_UNDWT_AUTH_MATRIXHD_T
prompt =======================================
prompt
create table IL_UNDWT_AUTH_MATRIXHD_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  username         VARCHAR2(50) not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  authority_type   VARCHAR2(1) not null,
  record_type      VARCHAR2(1)
)
;
alter table IL_UNDWT_AUTH_MATRIXHD_T
  add constraint PK_IL_UND_MTXHD1 primary key (ORG_ID, APPLICATION_ID, USERNAME, AUTHORITY_TYPE);
alter table IL_UNDWT_AUTH_MATRIXHD_T
  add constraint FK_IL_UND_MTXHD_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table IL_UNDWT_AUTH_MATRIXDTL_T
prompt ========================================
prompt
create table IL_UNDWT_AUTH_MATRIXDTL_T
(
  org_id               NUMBER not null,
  username             VARCHAR2(50) not null,
  serial_no            NUMBER not null,
  application_id       NUMBER not null,
  loading_type         VARCHAR2(10) not null,
  authority_limit      NUMBER,
  tsar                 NUMBER,
  active               VARCHAR2(1),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  authority_type       VARCHAR2(1),
  score_from           NUMBER,
  score_to             NUMBER
)
;
alter table IL_UNDWT_AUTH_MATRIXDTL_T
  add constraint PK_IL_UND_MTX_DTL primary key (ORG_ID, APPLICATION_ID, USERNAME, SERIAL_NO, LOADING_TYPE);
alter table IL_UNDWT_AUTH_MATRIXDTL_T
  add constraint FK_IL_UND_MTX_DTL_MTX foreign key (ORG_ID, APPLICATION_ID, USERNAME, AUTHORITY_TYPE)
  references IL_UNDWT_AUTH_MATRIXHD_T (ORG_ID, APPLICATION_ID, USERNAME, AUTHORITY_TYPE);

prompt
prompt Creating table IL_UNDWT_AUTH_MATRIX_HIST_T
prompt ==========================================
prompt
create table IL_UNDWT_AUTH_MATRIX_HIST_T
(
  org_id               NUMBER not null,
  username             VARCHAR2(50) not null,
  serial_no            NUMBER not null,
  serial_no_hist       NUMBER not null,
  application_id       NUMBER not null,
  loading_type         VARCHAR2(10) not null,
  authority_limit      NUMBER,
  tsar                 NUMBER,
  active               VARCHAR2(1),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table IL_UNDWT_AUTH_MATRIX_HIST_T
  add constraint PK_IL_UND_MATX_HIST primary key (ORG_ID, APPLICATION_ID, USERNAME, SERIAL_NO, LOADING_TYPE, SERIAL_NO_HIST);
alter table IL_UNDWT_AUTH_MATRIX_HIST_T
  add constraint FK_IL_UND_MATX_HIST_MATX foreign key (ORG_ID, APPLICATION_ID, USERNAME, SERIAL_NO, LOADING_TYPE)
  references IL_UNDWT_AUTH_MATRIXDTL_T (ORG_ID, APPLICATION_ID, USERNAME, SERIAL_NO, LOADING_TYPE);

prompt
prompt Creating table IL_UNDWT_PROCESS_TYPE_SETUP_T
prompt ============================================
prompt
create table IL_UNDWT_PROCESS_TYPE_SETUP_T
(
  org_id            NUMBER not null,
  process_type_id   NUMBER not null,
  process_type_desc VARCHAR2(50),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  cbc_tag           VARCHAR2(1)
)
;
alter table IL_UNDWT_PROCESS_TYPE_SETUP_T
  add constraint PK_UNDWT_PRROCESS_TYPE primary key (ORG_ID, PROCESS_TYPE_ID);

prompt
prompt Creating table IL_UNDWT_PROC_DECISION_MAP_T
prompt ===========================================
prompt
create table IL_UNDWT_PROC_DECISION_MAP_T
(
  org_id           NUMBER not null,
  process_type_id  NUMBER not null,
  decision_code    NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1)
)
;
alter table IL_UNDWT_PROC_DECISION_MAP_T
  add constraint PK_UND_PROCS_DEC_MAP_T primary key (ORG_ID, PROCESS_TYPE_ID, DECISION_CODE);
alter table IL_UNDWT_PROC_DECISION_MAP_T
  add constraint FK_PROCS_DEC foreign key (ORG_ID, DECISION_CODE)
  references IL_DECISION_SETUP_T (ORG_ID, DECISION_CODE);
alter table IL_UNDWT_PROC_DECISION_MAP_T
  add constraint FK_PROCS_PROC foreign key (ORG_ID, PROCESS_TYPE_ID)
  references IL_UNDWT_PROCESS_TYPE_SETUP_T (ORG_ID, PROCESS_TYPE_ID);

prompt
prompt Creating table IL_UND_PROCESS_TYPE_QUESTION_T
prompt =============================================
prompt
create table IL_UND_PROCESS_TYPE_QUESTION_T
(
  org_id           NUMBER not null,
  process_type_id  NUMBER not null,
  question_id      NUMBER not null,
  question_type    VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  display_order    NUMBER,
  active           VARCHAR2(1)
)
;
alter table IL_UND_PROCESS_TYPE_QUESTION_T
  add constraint PK_PROCESS_TYPE_QUE primary key (ORG_ID, PROCESS_TYPE_ID, QUESTION_ID);
alter table IL_UND_PROCESS_TYPE_QUESTION_T
  add constraint FK_PROCESS_TYPE_QUE_PT foreign key (ORG_ID, PROCESS_TYPE_ID)
  references IL_UNDWT_PROCESS_TYPE_SETUP_T (ORG_ID, PROCESS_TYPE_ID);

prompt
prompt Creating table IL_UWAUTHORITY_APPROVAL_HIST_T
prompt =============================================
prompt
create table IL_UWAUTHORITY_APPROVAL_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER,
  application_id    NUMBER not null,
  serial_no         NUMBER not null,
  supervisor_id     NUMBER,
  supr_action_taken VARCHAR2(10),
  remarks           VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table IL_UWAUTHORITY_APPROVAL_HIST_T
  add primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, DOCUMENT_NO, DOCUMENT_YEAR, APPLICATION_ID, ISSUE_COUNT, SERIAL_NO);

prompt
prompt Creating table INDUSTRY_GROUP_T
prompt ===============================
prompt
create table INDUSTRY_GROUP_T
(
  org_id           NUMBER not null,
  group_code       VARCHAR2(50) not null,
  description      VARCHAR2(50),
  active           VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table INDUSTRY_GROUP_T
  add constraint PK_INDUSTRY_TYPE_GROUP primary key (ORG_ID, GROUP_CODE);

prompt
prompt Creating table INDUSTRY_DETAIL_T
prompt ================================
prompt
create table INDUSTRY_DETAIL_T
(
  org_id             NUMBER not null,
  group_code         VARCHAR2(50) not null,
  detail_code        NUMBER not null,
  description        VARCHAR2(100),
  active             VARCHAR2(20),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  occupational_class VARCHAR2(100)
)
;
alter table INDUSTRY_DETAIL_T
  add constraint PK_INDUSTRY_DETAIL primary key (ORG_ID, GROUP_CODE, DETAIL_CODE);
alter table INDUSTRY_DETAIL_T
  add constraint FK_INDUSTRY_GROUP foreign key (ORG_ID, GROUP_CODE)
  references INDUSTRY_GROUP_T (ORG_ID, GROUP_CODE);

prompt
prompt Creating table INSURANCE_HISTORY_DETAIL_T
prompt =========================================
prompt
create table INSURANCE_HISTORY_DETAIL_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  client_code             NUMBER not null,
  code                    NUMBER not null,
  ih_code                 NUMBER not null,
  company                 VARCHAR2(50),
  policy_or_proposal_no   VARCHAR2(50),
  issue_date              DATE,
  sum_assured             NUMBER,
  condition_of_acceptance VARCHAR2(200),
  status                  VARCHAR2(1),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  contribution            NUMBER,
  need_analysis_purpose   VARCHAR2(20)
)
;
alter table INSURANCE_HISTORY_DETAIL_T
  add constraint PK_INSURANCE_HISTORY_DETAIL_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, CODE, IH_CODE);

prompt
prompt Creating table INSURANCE_HISTORY_T
prompt ==================================
prompt
create table INSURANCE_HISTORY_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  main_product_code          NUMBER not null,
  sub_product_code           NUMBER not null,
  takaful_type               VARCHAR2(1) not null,
  document_type              VARCHAR2(1) not null,
  document_no                VARCHAR2(10) not null,
  record_type                VARCHAR2(1) not null,
  document_year              VARCHAR2(10) not null,
  issue_count                NUMBER not null,
  endorsement_no             NUMBER not null,
  application_id             NUMBER not null,
  client_code                NUMBER not null,
  code                       NUMBER not null,
  question_1_status          VARCHAR2(1),
  question_medical_undergo   VARCHAR2(1),
  question_statndard         VARCHAR2(1),
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  question_insurance_renewal VARCHAR2(1)
)
;
alter table INSURANCE_HISTORY_T
  add constraint PK_INSURANCE_HISTORY_T primary key (ORG_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, CODE);

prompt
prompt Creating table INSURANCE_NEEDS_T
prompt ================================
prompt
create table INSURANCE_NEEDS_T
(
  org_id            NUMBER not null,
  insurance_need_id NUMBER not null,
  description       VARCHAR2(200),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  other_lang_desc   NVARCHAR2(500)
)
;
alter table INSURANCE_NEEDS_T
  add constraint PK_INSURANCE_NEEDS_T primary key (ORG_ID, INSURANCE_NEED_ID);

prompt
prompt Creating table INSURED_BENEFICARY_INFO_T
prompt ========================================
prompt
create table INSURED_BENEFICARY_INFO_T
(
  org_id                  NUMBER not null,
  policy_number           VARCHAR2(30) not null,
  insured_beneficary_code NUMBER not null,
  name                    VARCHAR2(250),
  relation                VARCHAR2(3),
  percentage              NUMBER,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  branch_id               NUMBER not null
)
;
alter table INSURED_BENEFICARY_INFO_T
  add constraint PK_INSURED_BENEFICARY_T primary key (ORG_ID, BRANCH_ID, POLICY_NUMBER, INSURED_BENEFICARY_CODE);

prompt
prompt Creating table INV_BONUSRIGHT_CERTIFICATE_T
prompt ===========================================
prompt
create table INV_BONUSRIGHT_CERTIFICATE_T
(
  org_id                 NUMBER not null,
  application_id         NUMBER not null,
  company_code           NUMBER,
  document_no            NUMBER not null,
  bonus_right_year       DATE,
  certificate_type       VARCHAR2(1),
  certificate_received   VARCHAR2(1),
  issue_no               VARCHAR2(1),
  book_closing_date_from DATE,
  total_holding          NUMBER,
  face_value             NUMBER,
  received_date          DATE,
  document_ref_no        VARCHAR2(100),
  rate_in                NUMBER,
  certificate_quantity   NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table INV_BONUSRIGHT_CERTIFICATE_T
  add primary key (DOCUMENT_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_SHAREISSUING_SETUP_T
prompt =======================================
prompt
create table INV_SHAREISSUING_SETUP_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  company_code     NUMBER not null,
  company_name     VARCHAR2(500),
  symbol           VARCHAR2(50),
  country_code     VARCHAR2(100),
  state_code       VARCHAR2(100),
  city_code        VARCHAR2(100),
  groups           NUMBER,
  listed_unlisted  VARCHAR2(1),
  sector           NUMBER,
  marketable_lot   NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  isin             VARCHAR2(50)
)
;
alter table INV_SHAREISSUING_SETUP_T
  add primary key (COMPANY_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_BONUS_DECLARATION_T
prompt ======================================
prompt
create table INV_BONUS_DECLARATION_T
(
  org_id                 NUMBER not null,
  application_id         NUMBER not null,
  company_code           NUMBER,
  serial_no              NUMBER not null,
  declaration_date       DATE,
  book_closing_date_from DATE,
  book_closing_date_to   DATE,
  certificate_type       VARCHAR2(1),
  final_interim          VARCHAR2(1),
  issue_basis_percentage NUMBER,
  value_per_share        NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table INV_BONUS_DECLARATION_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);
alter table INV_BONUS_DECLARATION_T
  add foreign key (COMPANY_CODE, ORG_ID, APPLICATION_ID)
  references INV_SHAREISSUING_SETUP_T (COMPANY_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_DISTINCTIVE_CER_NUM_T
prompt ========================================
prompt
create table INV_DISTINCTIVE_CER_NUM_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  serial_no        NUMBER not null,
  company_code     NUMBER,
  custodian        VARCHAR2(50),
  certificate_type VARCHAR2(50),
  issue_no         VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table INV_DISTINCTIVE_CER_NUM_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_DIVIDED_DECLARATION_T
prompt ========================================
prompt
create table INV_DIVIDED_DECLARATION_T
(
  org_id                 NUMBER not null,
  application_id         NUMBER not null,
  company_code           NUMBER,
  serial_no              NUMBER not null,
  declaration_date       DATE,
  book_closing_date_from DATE,
  book_closing_date_to   DATE,
  final_interim          VARCHAR2(1),
  issue_basis_percentage NUMBER,
  amount_per_share       NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table INV_DIVIDED_DECLARATION_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);
alter table INV_DIVIDED_DECLARATION_T
  add foreign key (COMPANY_CODE, ORG_ID, APPLICATION_ID)
  references INV_SHAREISSUING_SETUP_T (COMPANY_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_DIVIDEND_RECEIPT_T
prompt =====================================
prompt
create table INV_DIVIDEND_RECEIPT_T
(
  org_id                     NUMBER not null,
  application_id             NUMBER not null,
  company_code               NUMBER,
  document_no                NUMBER not null,
  certificate_type           VARCHAR2(1),
  issue_no                   VARCHAR2(1),
  book_closing_date_from     DATE,
  total_holding              NUMBER,
  face_value                 NUMBER,
  dividend_date              DATE,
  document_ref_no            VARCHAR2(100),
  rate_in                    NUMBER,
  rate_per_share_certificate NUMBER,
  gross_divident             NUMBER,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE
)
;
alter table INV_DIVIDEND_RECEIPT_T
  add primary key (DOCUMENT_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_INV_OPENING_BALANCES_T
prompt =========================================
prompt
create table INV_INV_OPENING_BALANCES_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  serial_no        NUMBER not null,
  custodian_code   NUMBER,
  certificate_type VARCHAR2(50),
  issue_no         VARCHAR2(50),
  quantity         NUMBER,
  amount           NUMBER,
  closing_quantity NUMBER,
  closing_amount   NUMBER,
  closing_rate     NUMBER,
  pledge_quantity  NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table INV_INV_OPENING_BALANCES_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_ORDERENTRY_SETUP_T
prompt =====================================
prompt
create table INV_ORDERENTRY_SETUP_T
(
  org_id            NUMBER not null,
  application_id    NUMBER not null,
  order_no          NUMBER not null,
  order_date        DATE,
  transaction_type  VARCHAR2(1),
  order_for_the_day VARCHAR2(1),
  trade_type        VARCHAR2(50),
  company_name      VARCHAR2(100),
  investment_type   VARCHAR2(50),
  broker            VARCHAR2(100),
  certificate_type  VARCHAR2(50),
  issue_no          VARCHAR2(50),
  face_value        NUMBER,
  marketable_lot    VARCHAR2(1),
  rate_limit        NUMBER,
  order_cancel      VARCHAR2(1),
  quantity          NUMBER,
  remarks           VARCHAR2(500),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  price             NUMBER
)
;
alter table INV_ORDERENTRY_SETUP_T
  add primary key (ORDER_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_ORDEREXECUTION_SETUP_T
prompt =========================================
prompt
create table INV_ORDEREXECUTION_SETUP_T
(
  org_id            NUMBER not null,
  application_id    NUMBER not null,
  order_no          NUMBER not null,
  order_date        DATE,
  transaction_type  VARCHAR2(50),
  company_code      NUMBER,
  broker            VARCHAR2(100),
  investment_type   VARCHAR2(50),
  face_value        NUMBER,
  issue_price       NUMBER,
  certificate_type  VARCHAR2(50),
  quantity_ordered  NUMBER,
  issue_no          NUMBER,
  rate_limit        NUMBER,
  issue_value       NUMBER,
  quantity_executed NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table INV_ORDEREXECUTION_SETUP_T
  add primary key (ORDER_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_PLEDGEENTRY_HEADER_T
prompt =======================================
prompt
create table INV_PLEDGEENTRY_HEADER_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  pledge_no        NUMBER not null,
  transaction_date DATE,
  revision         VARCHAR2(1),
  loan_agreed      NUMBER,
  loan_drawn       NUMBER,
  institution_name VARCHAR2(100),
  nature           VARCHAR2(10),
  markup_rate      NUMBER,
  markup_amount    NUMBER,
  effective_date   DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table INV_PLEDGEENTRY_HEADER_T
  add primary key (PLEDGE_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_PLEDGEENTRY_DETAIL_T
prompt =======================================
prompt
create table INV_PLEDGEENTRY_DETAIL_T
(
  org_id               NUMBER not null,
  application_id       NUMBER not null,
  pledge_no            NUMBER not null,
  serial_no            NUMBER not null,
  company_code         NUMBER,
  custodian            NUMBER,
  certificate_type     VARCHAR2(50),
  issue_no             VARCHAR2(50),
  certificate_quantity NUMBER,
  pledge_quantity      NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table INV_PLEDGEENTRY_DETAIL_T
  add primary key (SERIAL_NO, PLEDGE_NO, ORG_ID, APPLICATION_ID);
alter table INV_PLEDGEENTRY_DETAIL_T
  add foreign key (COMPANY_CODE, ORG_ID, APPLICATION_ID)
  references INV_PLEDGEENTRY_HEADER_T (PLEDGE_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_SHAREISSUINGADDRESS_T
prompt ========================================
prompt
create table INV_SHAREISSUINGADDRESS_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  company_code     NUMBER,
  serial_no        NUMBER not null,
  address          VARCHAR2(500),
  address_type     VARCHAR2(1),
  country_code     VARCHAR2(100),
  state_code       VARCHAR2(100),
  city_code        VARCHAR2(100),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table INV_SHAREISSUINGADDRESS_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);
alter table INV_SHAREISSUINGADDRESS_T
  add foreign key (COMPANY_CODE, ORG_ID, APPLICATION_ID)
  references INV_SHAREISSUING_SETUP_T (COMPANY_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_SHAREISSUINGYEARLYINFO_T
prompt ===========================================
prompt
create table INV_SHAREISSUINGYEARLYINFO_T
(
  org_id               NUMBER not null,
  application_id       NUMBER not null,
  company_code         NUMBER,
  serial_no            NUMBER not null,
  financial_year_from  DATE,
  financial_year_to    DATE,
  authorized_capital   NUMBER,
  no_of_share          NUMBER,
  issuing_price        NUMBER,
  face_value           NUMBER,
  paid_up_capital      NUMBER,
  share_issued         NUMBER,
  reserves             NUMBER,
  break_up_value_share NUMBER,
  assets               NUMBER,
  liabilities          NUMBER,
  net_profit           NUMBER,
  earning_per_share    NUMBER,
  no_of_directors      NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table INV_SHAREISSUINGYEARLYINFO_T
  add primary key (SERIAL_NO, ORG_ID, APPLICATION_ID);
alter table INV_SHAREISSUINGYEARLYINFO_T
  add foreign key (COMPANY_CODE, ORG_ID, APPLICATION_ID)
  references INV_SHAREISSUING_SETUP_T (COMPANY_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_TFCENTRY_T
prompt =============================
prompt
create table INV_TFCENTRY_T
(
  org_id                  NUMBER not null,
  application_id          NUMBER not null,
  transaction_no          NUMBER not null,
  company_code            NUMBER,
  issue_date              DATE,
  face_value              NUMBER,
  quantity                NUMBER,
  total_amount            NUMBER,
  purchase_date           DATE,
  carrying_purchase_price NUMBER,
  tenure                  NUMBER,
  maturity_date           DATE,
  interest_type           VARCHAR2(10),
  floating_rate_type      VARCHAR2(10),
  interest_rate           NUMBER,
  flat_rate               NUMBER,
  interest_frequency      VARCHAR2(10),
  principal_redemption    VARCHAR2(1),
  redemption_frequency    VARCHAR2(1),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE
)
;
alter table INV_TFCENTRY_T
  add primary key (TRANSACTION_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table INV_TFCPAYMENT_SCHEDULE_T
prompt ========================================
prompt
create table INV_TFCPAYMENT_SCHEDULE_T
(
  org_id               NUMBER not null,
  application_id       NUMBER not null,
  transaction_no       NUMBER not null,
  install_no           NUMBER not null,
  from_date            DATE,
  due_date             DATE,
  total_amount         NUMBER,
  principal_redemption NUMBER,
  rate                 NUMBER,
  interest_markup      NUMBER,
  withholding_tax      NUMBER,
  gross_premium        NUMBER,
  zakat                NUMBER,
  posted               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table INV_TFCPAYMENT_SCHEDULE_T
  add primary key (INSTALL_NO, ORG_ID, APPLICATION_ID, TRANSACTION_NO);
alter table INV_TFCPAYMENT_SCHEDULE_T
  add foreign key (TRANSACTION_NO, ORG_ID, APPLICATION_ID)
  references INV_TFCENTRY_T (TRANSACTION_NO, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table KNOCKOFF_ADJUSTMENT
prompt ==================================
prompt
create table KNOCKOFF_ADJUSTMENT
(
  org_id               NUMBER not null,
  sr_no                NUMBER not null,
  branch_id            NUMBER not null,
  cost_center_code     VARCHAR2(20),
  coa_code             VARCHAR2(50),
  debit_base_curr      NUMBER,
  credit_base_curr     NUMBER,
  currency_code        VARCHAR2(50),
  exchange_rate        NUMBER,
  debit_foreign_curr   NUMBER,
  credit_foreign_curr  NUMBER,
  instrument_narration VARCHAR2(1000),
  knockoff_id          NUMBER,
  policy_year          VARCHAR2(300),
  policy_no            VARCHAR2(300),
  endorsement_no       VARCHAR2(300),
  claim_no             VARCHAR2(300),
  bu                   VARCHAR2(300),
  lob                  VARCHAR2(300),
  location             VARCHAR2(300),
  employee             VARCHAR2(300),
  channel              VARCHAR2(300),
  agent                VARCHAR2(300),
  ref_sr_no            NUMBER
)
;
alter table KNOCKOFF_ADJUSTMENT
  add constraint KNOCKOFF_ADJUSTMENT_PK primary key (ORG_ID, SR_NO, BRANCH_ID);

prompt
prompt Creating table KNOCKOFF_BANK_DETAILS
prompt ====================================
prompt
create table KNOCKOFF_BANK_DETAILS
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  ko_sr_no             NUMBER not null,
  bank_code            VARCHAR2(50),
  branch_code          VARCHAR2(50),
  bank_account         VARCHAR2(50),
  instrument_type      VARCHAR2(50),
  instrument_number    NUMBER,
  instrument_date      DATE,
  instrument_amount    NUMBER,
  debit_base_curr      NUMBER,
  credit_base_curr     NUMBER,
  instrument_narration VARCHAR2(1000),
  currency_code        VARCHAR2(50),
  exchange_rate        NUMBER,
  cost_center_code     VARCHAR2(20),
  debit_foreign_curr   NUMBER,
  credit_foreign_curr  NUMBER,
  drawn_on             VARCHAR2(50),
  coa_code             NVARCHAR2(50),
  knockoff_id          NUMBER,
  policy_year          VARCHAR2(300),
  policy_no            VARCHAR2(300),
  endorsement_no       VARCHAR2(300),
  claim_no             VARCHAR2(300),
  bu                   VARCHAR2(300),
  lob                  VARCHAR2(300),
  location             VARCHAR2(300),
  employee             VARCHAR2(300),
  channel              VARCHAR2(300),
  agent                VARCHAR2(300),
  ref_sr_no            NUMBER,
  drawn_on_bank        VARCHAR2(50),
  bank_account_code    VARCHAR2(50)
)
;
alter table KNOCKOFF_BANK_DETAILS
  add constraint KNOCKOFF_BANK_DETAILS_PK primary key (BRANCH_ID, ORG_ID, KO_SR_NO);

prompt
prompt Creating table KNOCKOFF_PAYMENTS_HEADER_T
prompt =========================================
prompt
create table KNOCKOFF_PAYMENTS_HEADER_T
(
  knockoff_id       NUMBER not null,
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  sl_type           VARCHAR2(50),
  sl_code           VARCHAR2(50),
  knockoff_date     DATE,
  from_date         DATE,
  to_date           DATE,
  filter            VARCHAR2(20),
  multi_bank        VARCHAR2(1),
  bank_code         VARCHAR2(50),
  branch_code       VARCHAR2(50),
  bank_account      VARCHAR2(50),
  instrument_type   VARCHAR2(50),
  instrument_number VARCHAR2(50),
  instrument_date   DATE,
  instrument_amount NUMBER,
  voucher_type      VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  post_flag         VARCHAR2(1),
  posted_date       DATE,
  posted_by         VARCHAR2(50),
  drawn_on          VARCHAR2(50),
  endorsement_no    VARCHAR2(300),
  claim_no          VARCHAR2(300),
  channel           VARCHAR2(300),
  agent             VARCHAR2(300),
  employee          VARCHAR2(300),
  location          VARCHAR2(300),
  lob               VARCHAR2(300),
  bu                VARCHAR2(300),
  policy_year       VARCHAR2(300),
  policy_no         VARCHAR2(50),
  cost_center_code  VARCHAR2(50),
  lock_flag         VARCHAR2(1),
  drawn_on_bank     VARCHAR2(50),
  verified_flag     NVARCHAR2(5),
  verified_by       NVARCHAR2(50),
  verified_date     DATE,
  cancel_flag       VARCHAR2(1),
  cancel_by         VARCHAR2(50),
  cancel_date       DATE,
  reverse_flag      VARCHAR2(2),
  bank_account_code VARCHAR2(50),
  voucher_ref_no    VARCHAR2(150)
)
;
alter table KNOCKOFF_PAYMENTS_HEADER_T
  add constraint KNOCKOFF_PAYMENT_PK primary key (KNOCKOFF_ID, ORG_ID, BRANCH_ID);

prompt
prompt Creating table KNOCKOFF_PAYMENTS_DETAIL_T
prompt =========================================
prompt
create table KNOCKOFF_PAYMENTS_DETAIL_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  knockoff_id         NUMBER not null,
  ko_sr_no            NUMBER not null,
  advice_type         VARCHAR2(10),
  fiscal_year         VARCHAR2(10),
  advice_no           VARCHAR2(10),
  sl_sr_no            NUMBER,
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50),
  sl_type             VARCHAR2(10),
  sl_code             VARCHAR2(50),
  sl_description      VARCHAR2(500),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  document_reference  VARCHAR2(500),
  knockoff_amount     NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  ledger_description  VARCHAR2(500),
  policy_year         VARCHAR2(300),
  policy_no           VARCHAR2(300),
  endorsement_no      VARCHAR2(300),
  claim_no            VARCHAR2(300),
  bu                  VARCHAR2(300),
  lob                 VARCHAR2(300),
  location            VARCHAR2(300),
  employee            VARCHAR2(300),
  channel             VARCHAR2(300),
  agent               VARCHAR2(300),
  row_description     VARCHAR2(300),
  tax_flag            VARCHAR2(1),
  tax_code            VARCHAR2(10),
  advice_amount       NUMBER,
  adjusted_amount     NUMBER,
  detail_sr_no        NUMBER
)
;
alter table KNOCKOFF_PAYMENTS_DETAIL_T
  add constraint PK_KO_PAYM_DETAIL primary key (ORG_ID, BRANCH_ID, KNOCKOFF_ID, KO_SR_NO);
alter table KNOCKOFF_PAYMENTS_DETAIL_T
  add constraint FK_KO_PAYM_HEADER foreign key (KNOCKOFF_ID, ORG_ID, BRANCH_ID)
  references KNOCKOFF_PAYMENTS_HEADER_T (KNOCKOFF_ID, ORG_ID, BRANCH_ID);
alter table KNOCKOFF_PAYMENTS_DETAIL_T
  add constraint KNOCKOFF_PAYMENTS_DETAIL_T_R01 foreign key (ORG_ID, SL_TYPE, SL_CODE)
  references GL_SUBLEDGER_ACCOUNTS (ORG_ID, SL_TYPE, SL_CODE);

prompt
prompt Creating table KO_PAYMENTS_PREVIEW_VOUCHER_T
prompt ============================================
prompt
create table KO_PAYMENTS_PREVIEW_VOUCHER_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  knockoff_id         NUMBER not null,
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  document_reference  VARCHAR2(500),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  policy_year         VARCHAR2(300),
  policy_no           VARCHAR2(300),
  endorsement_no      VARCHAR2(300),
  claim_no            VARCHAR2(300),
  bu                  VARCHAR2(300),
  lob                 VARCHAR2(300),
  location            VARCHAR2(300),
  employee            VARCHAR2(300),
  channel             VARCHAR2(300),
  agent               VARCHAR2(300)
)
;

prompt
prompt Creating table LEAVE_TYPE_T
prompt ===========================
prompt
create table LEAVE_TYPE_T
(
  leave_type       NUMBER not null,
  leave_type_desc  VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table LEAVE_TYPE_T
  add constraint PK_LEAVE_TYPE_T primary key (LEAVE_TYPE);

prompt
prompt Creating table LETTER_SETUP_T
prompt =============================
prompt
create table LETTER_SETUP_T
(
  org_id           NUMBER not null,
  employeeid       NUMBER not null,
  type_id          NUMBER not null,
  serial_no        NUMBER not null,
  letter_date      DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table LETTER_SETUP_T
  add constraint PK_LETTER_SETUP primary key (ORG_ID, EMPLOYEEID, TYPE_ID, SERIAL_NO);

prompt
prompt Creating table LINE_OF_BUSINESS_T
prompt =================================
prompt
create table LINE_OF_BUSINESS_T
(
  org_id           NUMBER not null,
  lob_ref          VARCHAR2(30) not null,
  lob_name         VARCHAR2(500),
  active           VARCHAR2(2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table LINE_OF_BUSINESS_T
  add constraint PK_LOB_T primary key (ORG_ID, LOB_REF);

prompt
prompt Creating table LOSS_TYPE_BENEFIT_TYPE_MAP_T
prompt ===========================================
prompt
create table LOSS_TYPE_BENEFIT_TYPE_MAP_T
(
  org_id            NUMBER not null,
  loss_type_code    NUMBER not null,
  benefit_type_code NUMBER not null,
  benefit_name      VARCHAR2(50),
  estimated_reserve NUMBER,
  remarks           VARCHAR2(200),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  application_id    NUMBER not null
)
;
alter table LOSS_TYPE_BENEFIT_TYPE_MAP_T
  add constraint LOSS_TYPE_BENEFIT_TYPE_MAP_PK primary key (ORG_ID, LOSS_TYPE_CODE, BENEFIT_TYPE_CODE, APPLICATION_ID);
alter table LOSS_TYPE_BENEFIT_TYPE_MAP_T
  add constraint FK_BENEFIT_LOSS foreign key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID)
  references GP_LOSS_TYPE_SETUP_T (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table LT_CAUSES_OF_LOSS_MAPPING_T
prompt ==========================================
prompt
create table LT_CAUSES_OF_LOSS_MAPPING_T
(
  org_id             NUMBER not null,
  loss_type_code     NUMBER not null,
  cause_of_loss_code NUMBER not null,
  short_name         VARCHAR2(50),
  description        VARCHAR2(200),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  application_id     NUMBER not null
)
;
alter table LT_CAUSES_OF_LOSS_MAPPING_T
  add constraint PK_LT_CAUSES_OF_LOSS_MAP_T primary key (ORG_ID, LOSS_TYPE_CODE, CAUSE_OF_LOSS_CODE, APPLICATION_ID);
alter table LT_CAUSES_OF_LOSS_MAPPING_T
  add constraint FK_CL_LOSS foreign key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID)
  references GP_LOSS_TYPE_SETUP_T (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table LT_CHKLST_FOR_VALID_MAPPING_T
prompt ============================================
prompt
create table LT_CHKLST_FOR_VALID_MAPPING_T
(
  org_id           NUMBER not null,
  loss_type_code   NUMBER not null,
  checklist_code   NUMBER not null,
  checklist_title  VARCHAR2(50),
  is_mandatory     VARCHAR2(1),
  is_default       VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  application_id   NUMBER not null
)
;
alter table LT_CHKLST_FOR_VALID_MAPPING_T
  add constraint PK_LT_CHKLST_FOR_VALID_T primary key (ORG_ID, LOSS_TYPE_CODE, CHECKLIST_CODE, APPLICATION_ID);
alter table LT_CHKLST_FOR_VALID_MAPPING_T
  add constraint FK_CLIST_LOSS foreign key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID)
  references GP_LOSS_TYPE_SETUP_T (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table LT_DOCUMENT_REQUIREMENT_MAP_T
prompt ============================================
prompt
create table LT_DOCUMENT_REQUIREMENT_MAP_T
(
  org_id               NUMBER not null,
  loss_type_code       NUMBER not null,
  doc_requirement_code NUMBER not null,
  required_document    VARCHAR2(200),
  is_mandatory         VARCHAR2(1),
  is_default           VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  cause_of_loss_code   NUMBER,
  application_id       NUMBER not null
)
;
alter table LT_DOCUMENT_REQUIREMENT_MAP_T
  add constraint PK_LT_DOCUMENT_REQUIREMENT_T primary key (ORG_ID, LOSS_TYPE_CODE, DOC_REQUIREMENT_CODE, APPLICATION_ID);
alter table LT_DOCUMENT_REQUIREMENT_MAP_T
  add constraint FK_DR_LOSS foreign key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID)
  references GP_LOSS_TYPE_SETUP_T (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table LT_REJECTION_CLAUSE_MAPPING_T
prompt ============================================
prompt
create table LT_REJECTION_CLAUSE_MAPPING_T
(
  org_id                NUMBER not null,
  loss_type_code        NUMBER not null,
  rejection_clause_code NUMBER not null,
  rejection_clause      VARCHAR2(50),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  application_id        NUMBER not null
)
;
alter table LT_REJECTION_CLAUSE_MAPPING_T
  add constraint PK_LT_REJEC_CLAUSE_MAP_T primary key (ORG_ID, LOSS_TYPE_CODE, REJECTION_CLAUSE_CODE, APPLICATION_ID);
alter table LT_REJECTION_CLAUSE_MAPPING_T
  add constraint FK_RC_LOSS foreign key (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID)
  references GP_LOSS_TYPE_SETUP_T (ORG_ID, LOSS_TYPE_CODE, APPLICATION_ID);

prompt
prompt Creating table MEDICAL_ENTITY_CATEGORY_T
prompt ========================================
prompt
create table MEDICAL_ENTITY_CATEGORY_T
(
  org_id                  NUMBER not null,
  serial_code             NUMBER not null,
  medical_entity_type     VARCHAR2(50),
  medical_entity_name     VARCHAR2(500),
  medical_entity_category VARCHAR2(100),
  is_icd                  VARCHAR2(5),
  icd                     VARCHAR2(100),
  rate                    NUMBER,
  active                  VARCHAR2(5),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  state                   VARCHAR2(100),
  city                    VARCHAR2(100),
  country                 VARCHAR2(100)
)
;
alter table MEDICAL_ENTITY_CATEGORY_T
  add constraint PK_MED_ENT_CAT primary key (ORG_ID, SERIAL_CODE);

prompt
prompt Creating table TARIFF_SETUP_T
prompt =============================
prompt
create table TARIFF_SETUP_T
(
  tariff_code          NUMBER not null,
  org_id               NUMBER not null,
  short_name           VARCHAR2(20),
  title                VARCHAR2(100),
  address              VARCHAR2(100),
  telephone            VARCHAR2(50),
  contact_person       VARCHAR2(100),
  email                VARCHAR2(100),
  remarks              VARCHAR2(300),
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  sp_code              NUMBER,
  designation          VARCHAR2(50),
  tariff_name          VARCHAR2(70),
  contact_person_title VARCHAR2(5)
)
;
alter table TARIFF_SETUP_T
  add constraint PK_TARIFF_SETUP_T primary key (TARIFF_CODE, ORG_ID);

prompt
prompt Creating table TARIFF_EFFECTIVE_DATE_T
prompt ======================================
prompt
create table TARIFF_EFFECTIVE_DATE_T
(
  effective_date_code NUMBER not null,
  tariff_code         NUMBER,
  org_id              NUMBER not null,
  effective_date      DATE,
  remarks             VARCHAR2(300),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  sp_code             NUMBER,
  effective_end_date  DATE,
  file_path           VARCHAR2(500)
)
;
alter table TARIFF_EFFECTIVE_DATE_T
  add constraint PK_TARIFF_EFFECTIVE_DATE_T primary key (EFFECTIVE_DATE_CODE, ORG_ID);
alter table TARIFF_EFFECTIVE_DATE_T
  add constraint FK_ED_TARIFF_CODE foreign key (TARIFF_CODE, ORG_ID)
  references TARIFF_SETUP_T (TARIFF_CODE, ORG_ID);

prompt
prompt Creating table MEDICAL_TEST_TARIFF_T
prompt ====================================
prompt
create table MEDICAL_TEST_TARIFF_T
(
  medical_test_code     NUMBER not null,
  effective_date_code   NUMBER not null,
  org_id                NUMBER not null,
  medical_test_name     VARCHAR2(100) not null,
  test_rate             VARCHAR2(100),
  remarks               VARCHAR2(300),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  medical_serivice_type VARCHAR2(70)
)
;
alter table MEDICAL_TEST_TARIFF_T
  add constraint PK_MEDICAL_TEST_TARIFF_T primary key (MEDICAL_TEST_CODE, ORG_ID, EFFECTIVE_DATE_CODE, MEDICAL_TEST_NAME);
alter table MEDICAL_TEST_TARIFF_T
  add constraint FK_MTT_ED_CODE foreign key (EFFECTIVE_DATE_CODE, ORG_ID)
  references TARIFF_EFFECTIVE_DATE_T (EFFECTIVE_DATE_CODE, ORG_ID);

prompt
prompt Creating table MED_EXPENSE_CODE_SETUP_T
prompt =======================================
prompt
create table MED_EXPENSE_CODE_SETUP_T
(
  med_expense_code NUMBER not null,
  org_id           NUMBER not null,
  short_name       VARCHAR2(20),
  title            VARCHAR2(100),
  description      VARCHAR2(300),
  display_order    VARCHAR2(10),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table MED_EXPENSE_CODE_SETUP_T
  add constraint PK_MED_EXPENSE_CODE_SETUP_T primary key (MED_EXPENSE_CODE, ORG_ID);

prompt
prompt Creating table MF_AMC_SETUP_T
prompt =============================
prompt
create table MF_AMC_SETUP_T
(
  company_code            NUMBER not null,
  company_name            VARCHAR2(250),
  company_symbol          VARCHAR2(20),
  registration_number     VARCHAR2(100),
  ntn                     VARCHAR2(50),
  industry_code           VARCHAR2(10),
  sector_code             VARCHAR2(10),
  country_of_registration VARCHAR2(20),
  fiscal_year_end_date    VARCHAR2(10),
  state_location          VARCHAR2(100),
  state_inc               VARCHAR2(100),
  last_update_login       NUMBER,
  lock_flag               VARCHAR2(1),
  annual_reporting_code   VARCHAR2(20),
  mc                      NUMBER,
  oclause                 VARCHAR2(20),
  country_code            VARCHAR2(20),
  stock_exchange_code     VARCHAR2(20),
  reporting_currency      VARCHAR2(10),
  naics_code              NVARCHAR2(50),
  non_profitable          VARCHAR2(1),
  ticker_for_download     VARCHAR2(20),
  last_updated_by         VARCHAR2(100),
  last_update_date        TIMESTAMP(6),
  creation_date           TIMESTAMP(6),
  created_by              VARCHAR2(100),
  isin                    VARCHAR2(50),
  cusip                   VARCHAR2(50),
  isindex                 INTEGER,
  asset_type_id           NUMBER(20),
  url_finanical           VARCHAR2(500),
  business_description    VARCHAR2(4000),
  cuin                    VARCHAR2(20)
)
;
alter table MF_AMC_SETUP_T
  add constraint PK_AMC_SETUP primary key (COMPANY_CODE);

prompt
prompt Creating table MF_ENTITY_HEADER_T
prompt =================================
prompt
create table MF_ENTITY_HEADER_T
(
  header_id NUMBER not null,
  fund_key  NVARCHAR2(30),
  fund_name NVARCHAR2(250),
  added_on  DATE default (SYSDATE) not null
)
;
alter table MF_ENTITY_HEADER_T
  add constraint PK_MF_ENTITY_HEADER primary key (HEADER_ID);

prompt
prompt Creating table MF_PORTFOLIO_HD_T
prompt ================================
prompt
create table MF_PORTFOLIO_HD_T
(
  org_id           NUMBER not null,
  mutual_fund_id   NUMBER not null,
  company_code     NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table MF_PORTFOLIO_HD_T
  add primary key (ORG_ID, MUTUAL_FUND_ID, COMPANY_CODE);

prompt
prompt Creating table MF_SERIES_SETUP_T
prompt ================================
prompt
create table MF_SERIES_SETUP_T
(
  code                 NUMBER not null,
  description          VARCHAR2(200),
  active               VARCHAR2(1),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  asset_type_id        INTEGER,
  asset_type           VARCHAR2(50),
  create_user          VARCHAR2(50),
  create_date          VARCHAR2(50),
  modified_user        VARCHAR2(50),
  modified_date        VARCHAR2(50),
  parent_asset_type_id INTEGER,
  asset_type_level     VARCHAR2(50)
)
;
alter table MF_SERIES_SETUP_T
  add constraint PK_MF_SERIES_SETUP_T primary key (CODE);

prompt
prompt Creating table MF_SHARIAH_TYPE_SETUP_T
prompt ======================================
prompt
create table MF_SHARIAH_TYPE_SETUP_T
(
  code                 NUMBER not null,
  description          VARCHAR2(200),
  active               VARCHAR2(1),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table MF_SHARIAH_TYPE_SETUP_T
  add constraint PK_MF_SHARIAH_TYPE_SETUP_T primary key (CODE);

prompt
prompt Creating table MF_TOLERANCE_LEVEL_SETUP_T
prompt =========================================
prompt
create table MF_TOLERANCE_LEVEL_SETUP_T
(
  code                 NUMBER not null,
  description          VARCHAR2(200),
  active               VARCHAR2(1),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table MF_TOLERANCE_LEVEL_SETUP_T
  add constraint PK_MF_TOLERANCE_LEVEL_SETUP_T primary key (CODE);

prompt
prompt Creating table MONEY_TRANSFER_HEADER_T
prompt ======================================
prompt
create table MONEY_TRANSFER_HEADER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  process_id       NUMBER not null,
  policy           VARCHAR2(150),
  client_code      NUMBER,
  process_date     DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table MONEY_TRANSFER_HEADER_T
  add constraint PK_MONEY_TRNSFR_HDR primary key (ORG_ID, BRANCH_ID, PROCESS_ID);

prompt
prompt Creating table MUTUAL_FUND_SETUP_T
prompt ==================================
prompt
create table MUTUAL_FUND_SETUP_T
(
  fund_id                 NUMBER not null,
  fund_name               VARCHAR2(200),
  fund_symbol             VARCHAR2(200),
  fund_type               VARCHAR2(10),
  total_value_of_units    NUMBER,
  fund_size               NUMBER,
  distribution_frequencey NUMBER,
  minimum_investment      NUMBER,
  repeated_purchase       NUMBER,
  fund_rating             NUMBER,
  shariah_type            NUMBER,
  asset_class             NUMBER,
  risk_tolerance          NUMBER,
  series_type             NUMBER,
  country_code            VARCHAR2(10),
  distribution_date       DATE,
  launch_date             DATE,
  date_started            DATE,
  amc_code                NUMBER,
  market_classification   NUMBER,
  type_of_market          NUMBER,
  investment_style        NUMBER,
  fund_objectives         VARCHAR2(500),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  fund_category           NUMBER,
  cusip                   VARCHAR2(50),
  cuin                    VARCHAR2(20),
  sedol                   VARCHAR2(50),
  isin                    VARCHAR2(50),
  fund_key                VARCHAR2(50)
)
;
alter table MUTUAL_FUND_SETUP_T
  add constraint PK_MUTUAL_FUND_SETUP_T primary key (FUND_ID);

prompt
prompt Creating table NON_FINANCIAL_ACTIVITY_T
prompt =======================================
prompt
create table NON_FINANCIAL_ACTIVITY_T
(
  org_id               NUMBER not null,
  activity_code        NUMBER not null,
  activity_description VARCHAR2(200),
  active               VARCHAR2(5),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  tab_html_id          VARCHAR2(100),
  table_name           VARCHAR2(50)
)
;
alter table NON_FINANCIAL_ACTIVITY_T
  add constraint PK_NON_FINANCIAL_ACTIVITY primary key (ORG_ID, ACTIVITY_CODE);

prompt
prompt Creating table NON_FINANCIAL_SUB_ACTIVITY_T
prompt ===========================================
prompt
create table NON_FINANCIAL_SUB_ACTIVITY_T
(
  org_id                   NUMBER not null,
  activity_code            NUMBER not null,
  sub_activity_code        NUMBER not null,
  sub_activity_description VARCHAR2(200),
  tab_html_id              VARCHAR2(100),
  active                   VARCHAR2(5),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  financial_tag            VARCHAR2(1),
  group_code               NUMBER,
  category_code            NUMBER,
  event_code               NUMBER,
  report_path              VARCHAR2(300),
  table_name               VARCHAR2(500),
  undwt_required_tag       VARCHAR2(1),
  revise_il_tag            VARCHAR2(1)
)
;
alter table NON_FINANCIAL_SUB_ACTIVITY_T
  add constraint PK_NON_FINANCIAL_SUB_ACTIVITY primary key (ORG_ID, ACTIVITY_CODE, SUB_ACTIVITY_CODE);
alter table NON_FINANCIAL_SUB_ACTIVITY_T
  add constraint FK_NON_FIN_SUB_ACT foreign key (ORG_ID, ACTIVITY_CODE)
  references NON_FINANCIAL_ACTIVITY_T (ORG_ID, ACTIVITY_CODE);

prompt
prompt Creating table NUM_GEN_SETUP_HD_T
prompt =================================
prompt
create table NUM_GEN_SETUP_HD_T
(
  numgen_id        VARCHAR2(50) not null,
  org_id           NUMBER not null,
  numgen_desc      VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  number_length    NUMBER,
  tablename        VARCHAR2(50)
)
;
alter table NUM_GEN_SETUP_HD_T
  add constraint PK_NUM_GEN_SETUP_HD_T primary key (NUMGEN_ID, ORG_ID);

prompt
prompt Creating table NUM_GEN_SETUP_DTL_T
prompt ==================================
prompt
create table NUM_GEN_SETUP_DTL_T
(
  numgen_id         VARCHAR2(50),
  numgen_dtl_id     NUMBER not null,
  org_id            NUMBER not null,
  numgen_desc       VARCHAR2(50),
  column_id         VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  column_type       VARCHAR2(1),
  column_expression VARCHAR2(100)
)
;
alter table NUM_GEN_SETUP_DTL_T
  add constraint PK_NUM_GEN_SETUP_DTL_T primary key (NUMGEN_DTL_ID, ORG_ID);
alter table NUM_GEN_SETUP_DTL_T
  add constraint FK_NGD_NUMGEN foreign key (NUMGEN_ID, ORG_ID)
  references NUM_GEN_SETUP_HD_T (NUMGEN_ID, ORG_ID);

prompt
prompt Creating table OCCUPTION_GROUP_T
prompt ================================
prompt
create table OCCUPTION_GROUP_T
(
  org_id           NUMBER not null,
  code             VARCHAR2(50) not null,
  description      VARCHAR2(50),
  active           VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table OCCUPTION_GROUP_T
  add constraint PK_OCCUPTION_GROUP primary key (ORG_ID, CODE);

prompt
prompt Creating table PARTNER_APPROVAL_SETUP_T
prompt =======================================
prompt
create table PARTNER_APPROVAL_SETUP_T
(
  org_id               NUMBER not null,
  partner_id           NUMBER not null,
  serial_no            NUMBER not null,
  score_from           NUMBER,
  score_to             NUMBER,
  sup_approval_tag     VARCHAR2(10),
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table PARTNER_APPROVAL_SETUP_T
  add constraint PK_PRTNR_APPR_SET primary key (ORG_ID, PARTNER_ID, SERIAL_NO);
alter table PARTNER_APPROVAL_SETUP_T
  add constraint FK_PART_PART_APPR foreign key (ORG_ID, PARTNER_ID)
  references AM_PARTNER_T (ORG_ID, PARTNER_ID);

prompt
prompt Creating table PARTNER_BALANCE_UNITS_T
prompt ======================================
prompt
create table PARTNER_BALANCE_UNITS_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  serial_no        NUMBER not null,
  balance_to       NUMBER,
  balance_from     NUMBER,
  no_of_units      NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table PARTNER_BALANCE_UNITS_T
  add constraint PK_PRTNR_BL_UNITS primary key (ORG_ID, PARTNER_ID, SERIAL_NO);

prompt
prompt Creating table PAYMENT_VENDOR_SETUP_T
prompt =====================================
prompt
create table PAYMENT_VENDOR_SETUP_T
(
  vendor_id           NUMBER not null,
  vendor_desc         VARCHAR2(200),
  active              VARCHAR2(1),
  security_key_live   VARCHAR2(4000),
  security_key_test   VARCHAR2(4000),
  creation_date       DATE,
  created_by          VARCHAR2(50),
  last_update_date    DATE,
  last_updated_by     VARCHAR2(50),
  base_url            VARCHAR2(500),
  return_url          VARCHAR2(500),
  merchant_id         VARCHAR2(500),
  sub_merchant_id     VARCHAR2(500),
  integrity_salt      VARCHAR2(500),
  auth_password       VARCHAR2(500),
  trans_post_url_live VARCHAR2(500),
  trans_post_url_test VARCHAR2(500),
  payment_status_url  VARCHAR2(500),
  running_mode        VARCHAR2(500)
)
;
alter table PAYMENT_VENDOR_SETUP_T
  add constraint PK_PAYMENT_VENDOR primary key (VENDOR_ID);

prompt
prompt Creating table PAYMENT_VENDOR_CTRY_MAP_T
prompt ========================================
prompt
create table PAYMENT_VENDOR_CTRY_MAP_T
(
  vendor_id        NUMBER not null,
  country_code     VARCHAR2(20) not null,
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50)
)
;
alter table PAYMENT_VENDOR_CTRY_MAP_T
  add constraint PK_PAYM_VENDOR_CTRY primary key (VENDOR_ID, COUNTRY_CODE);
alter table PAYMENT_VENDOR_CTRY_MAP_T
  add constraint FK_PAYM_VENDOR_CTRY foreign key (VENDOR_ID)
  references PAYMENT_VENDOR_SETUP_T (VENDOR_ID);
alter table PAYMENT_VENDOR_CTRY_MAP_T
  add constraint FK_PAYM_VEND_CTRY_CTRY foreign key (COUNTRY_CODE)
  references COUNTRY (COUNTRY_CODE);

prompt
prompt Creating table PF_ASSET_TYPE_T
prompt ==============================
prompt
create table PF_ASSET_TYPE_T
(
  asset_type_id        NUMBER not null,
  asset_type           VARCHAR2(100) not null,
  active               VARCHAR2(1) not null,
  create_user          VARCHAR2(50),
  create_date          TIMESTAMP(6),
  modified_user        VARCHAR2(50),
  modified_date        TIMESTAMP(6),
  parent_asset_type_id NUMBER,
  asset_type_level     VARCHAR2(1)
)
;
alter table PF_ASSET_TYPE_T
  add constraint PF_ASSET_TYPE_T_PK primary key (ASSET_TYPE_ID);

prompt
prompt Creating table PF_CLIENT_SETUP_T
prompt ================================
prompt
create table PF_CLIENT_SETUP_T
(
  client_id       NUMBER not null,
  client_name     VARCHAR2(100) not null,
  ssn_sin_cnic    VARCHAR2(50),
  ntn             VARCHAR2(50),
  phone           VARCHAR2(50),
  email           VARCHAR2(100),
  active          VARCHAR2(1),
  create_user     VARCHAR2(50),
  create_date     TIMESTAMP(6),
  modified_user   VARCHAR2(50),
  modified_date   TIMESTAMP(6),
  userid          VARCHAR2(20),
  currency_code   VARCHAR2(50),
  country_code    VARCHAR2(20),
  ref_from        VARCHAR2(200),
  payment_ref_no  VARCHAR2(200),
  cookie_accept   VARCHAR2(3),
  ref_source_code NUMBER,
  ref_source_desc VARCHAR2(100),
  promo_code      VARCHAR2(50)
)
;
alter table PF_CLIENT_SETUP_T
  add constraint PF_CLIENT_SETUP_T_PK primary key (CLIENT_ID);
alter table PF_CLIENT_SETUP_T
  add foreign key (CURRENCY_CODE)
  references CURRENCY_SETUP_T (CURRENCY_CODE);

prompt
prompt Creating table PF_VALUESETS_T
prompt =============================
prompt
create table PF_VALUESETS_T
(
  org_id             NUMBER not null,
  valueset_id        NUMBER not null,
  valueset_desc      VARCHAR2(100) not null,
  active             VARCHAR2(1) not null,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_modified_by   VARCHAR2(50),
  last_modified_date DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  application_id     NUMBER,
  value_type         VARCHAR2(1)
)
;
alter table PF_VALUESETS_T
  add constraint PF_VALUESETS_T_PK primary key (ORG_ID, VALUESET_ID);
alter table PF_VALUESETS_T
  add foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table PF_VALUESET_VALUES_T
prompt ===================================
prompt
create table PF_VALUESET_VALUES_T
(
  value_id         NUMBER not null,
  value_desc       VARCHAR2(100) not null,
  value_score      NUMBER,
  valueset_id      NUMBER not null,
  active           VARCHAR2(1) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  value_to         NUMBER,
  value_from       NUMBER,
  value_code       VARCHAR2(50)
)
;

prompt
prompt Creating table PLAN_BENEFICIARIES_T
prompt ===================================
prompt
create table PLAN_BENEFICIARIES_T
(
  org_id           NUMBER not null,
  tp_id            NUMBER not null,
  pb_id            NUMBER not null,
  beneficiary_name VARCHAR2(200),
  relation         VARCHAR2(150),
  percentage       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table PLAN_BENEFICIARIES_T
  add constraint PK_PLAN_BENEFICIARY primary key (ORG_ID, TP_ID, PB_ID);

prompt
prompt Creating table PLAN_BENEFIT_MAPPING_T
prompt =====================================
prompt
create table PLAN_BENEFIT_MAPPING_T
(
  org_id            NUMBER not null,
  pb_map_id         NUMBER not null,
  tp_id             NUMBER,
  travel_benefit_id NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  display_order     NUMBER,
  benefit_limit     VARCHAR2(30),
  benefit_type      VARCHAR2(1),
  branch_id         NUMBER not null
)
;
alter table PLAN_BENEFIT_MAPPING_T
  add constraint PK_PB_MAPPING_T primary key (ORG_ID, PB_MAP_ID, BRANCH_ID);

prompt
prompt Creating table PLAN_TERMS_CONDITIONS_T
prompt ======================================
prompt
create table PLAN_TERMS_CONDITIONS_T
(
  org_id           NUMBER not null,
  tp_id            NUMBER not null,
  tc_id            NUMBER not null,
  terms_conditions VARCHAR2(2000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  branch_id        NUMBER not null
)
;
alter table PLAN_TERMS_CONDITIONS_T
  add constraint PK_PLAN_TC primary key (ORG_ID, TP_ID, TC_ID, BRANCH_ID);

prompt
prompt Creating table POLICY_ATTACHMENT_T
prompt ==================================
prompt
create table POLICY_ATTACHMENT_T
(
  org_id               NUMBER not null,
  application_id       NUMBER not null,
  policy_attachment_id NUMBER not null,
  file_path            VARCHAR2(300),
  policy_name          VARCHAR2(50),
  description          VARCHAR2(300),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  date_from            DATE,
  date_to              DATE
)
;
alter table POLICY_ATTACHMENT_T
  add constraint PK_POLICY_ATTACHMENT_T primary key (ORG_ID, APPLICATION_ID, POLICY_ATTACHMENT_ID);

prompt
prompt Creating table POLICY_DATA_DUMP_FOR_BI_T
prompt ========================================
prompt
create table POLICY_DATA_DUMP_FOR_BI_T
(
  record_id                NUMBER not null,
  policy_no                VARCHAR2(150),
  channel                  VARCHAR2(150),
  customer_id              VARCHAR2(50),
  policy_start_date        DATE,
  policy_end_date          DATE,
  policy_type              VARCHAR2(50),
  renewal_status           VARCHAR2(150),
  policy_premium_amount    NUMBER,
  premium_earned           NUMBER,
  premium_collected        NUMBER,
  renewal_date             DATE,
  claim_submitted          NUMBER,
  claims_paid              NUMBER,
  claim_process_time       NUMBER,
  incurred_losses          NUMBER,
  loss_adjustment_expenses NUMBER,
  underwriting_expense     NUMBER,
  other_expense            NUMBER,
  claim_amount             NUMBER,
  assured_amount           NUMBER,
  uw_profit                NUMBER,
  commission_paid          NUMBER,
  score                    NUMBER,
  policy_duration          NUMBER,
  profit                   FLOAT,
  ape                      FLOAT,
  region                   VARCHAR2(150),
  customer_demographic     VARCHAR2(150),
  policy_renewed           NUMBER,
  up_for_renewal           NUMBER,
  renewal_rate             NUMBER,
  avg_premium              NUMBER,
  claim_ratio              FLOAT,
  loss_ratio               FLOAT,
  expense_ratio            FLOAT,
  combined_ratio           FLOAT,
  promotors                NUMBER,
  passive                  NUMBER,
  detractor                NUMBER,
  passive_percentage       NUMBER,
  detractor_percentage     NUMBER,
  promotor_percentage      NUMBER,
  nps                      NUMBER,
  cancelled_policies       NUMBER,
  retention_ratios         NUMBER,
  clm_settlement_ratio     FLOAT,
  policy_lapse_rate        NUMBER,
  loss_severity            FLOAT,
  uw_loss_ratio            FLOAT,
  total_expenses           NUMBER
)
;
alter table POLICY_DATA_DUMP_FOR_BI_T
  add constraint PK_IL_CLAIM_DUMP_DATA_T primary key (RECORD_ID);

prompt
prompt Creating table POLICY_KNOCKOFF_HEADER_T
prompt =======================================
prompt
create table POLICY_KNOCKOFF_HEADER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  knockoff_no      NUMBER not null,
  knockoff_date    DATE,
  from_date        DATE,
  to_date          DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  lock_flag        VARCHAR2(20),
  policy           VARCHAR2(50),
  post_flag        VARCHAR2(20),
  posted_date      DATE,
  posted_by        NVARCHAR2(20)
)
;
alter table POLICY_KNOCKOFF_HEADER_T
  add constraint POLICY_KNOCKOFF_HEADER_PK primary key (ORG_ID, BRANCH_ID, KNOCKOFF_NO);

prompt
prompt Creating table POLICY_KNOCKOFF_DETAIL_T
prompt =======================================
prompt
create table POLICY_KNOCKOFF_DETAIL_T
(
  s_no                 NUMBER not null,
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  knockoff_no          NUMBER not null,
  document_no          VARCHAR2(50),
  document_type        VARCHAR2(10),
  endorsement_no       NUMBER,
  gdh_doc_reference_no VARCHAR2(50),
  gdh_gross_premium    VARCHAR2(20),
  advance_amount       NUMBER,
  received_amount      NUMBER,
  issue_count          NUMBER,
  due_date             DATE,
  installment_no       NUMBER,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  knockoff_amount      NUMBER,
  item_branch_id       NUMBER,
  client_code          NUMBER
)
;
alter table POLICY_KNOCKOFF_DETAIL_T
  add constraint POLICY_KNOCKOFF_DETAIL_PK primary key (ORG_ID, BRANCH_ID, KNOCKOFF_NO, S_NO);
alter table POLICY_KNOCKOFF_DETAIL_T
  add constraint FK_KNOCKOFFVDTL_HEADER foreign key (ORG_ID, BRANCH_ID, KNOCKOFF_NO)
  references POLICY_KNOCKOFF_HEADER_T (ORG_ID, BRANCH_ID, KNOCKOFF_NO);

prompt
prompt Creating table POLICY_MAPPING_T
prompt ===============================
prompt
create table POLICY_MAPPING_T
(
  org_id               NUMBER not null,
  policy_attachment_id NUMBER not null,
  grades               VARCHAR2(150),
  positions            VARCHAR2(50),
  locations            VARCHAR2(50),
  payrollids           VARCHAR2(50),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  organizations        VARCHAR2(200)
)
;
alter table POLICY_MAPPING_T
  add constraint PK_POLICY_MAPPING_T primary key (ORG_ID, POLICY_ATTACHMENT_ID);

prompt
prompt Creating table PQD_QUESTION_DETAIL
prompt ==================================
prompt
create table PQD_QUESTION_DETAIL
(
  question_code NVARCHAR2(50),
  answer        NVARCHAR2(200),
  points        NVARCHAR2(50),
  idx           NUMBER not null
)
;

prompt
prompt Creating table PQM_QUESTION_MASTER
prompt ==================================
prompt
create table PQM_QUESTION_MASTER
(
  question_code      NUMBER not null,
  questions          NVARCHAR2(100),
  question_type_code NUMBER
)
;

prompt
prompt Creating table PROVIDER_TAX_EXEMPTION_T
prompt =======================================
prompt
create table PROVIDER_TAX_EXEMPTION_T
(
  org_id           NUMBER not null,
  sp_code          NUMBER not null,
  serial_no        NUMBER not null,
  date_from        DATE,
  date_to          DATE,
  attachment       VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table PROVIDER_TAX_EXEMPTION_T
  add constraint PK_TAX_EXEMPTION primary key (ORG_ID, SP_CODE, SERIAL_NO);

prompt
prompt Creating table PROVISIONAL_RECEIPT_DETAIL_T
prompt ===========================================
prompt
create table PROVISIONAL_RECEIPT_DETAIL_T
(
  s_no                 NUMBER not null,
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  receipt_no           NUMBER not null,
  document_no          VARCHAR2(50),
  document_type        VARCHAR2(10),
  endorsement_no       NUMBER,
  gdh_doc_reference_no VARCHAR2(50),
  gdh_gross_premium    VARCHAR2(20),
  advance_amount       NUMBER,
  received_amount      NUMBER,
  issue_count          NUMBER,
  master_ref_no        VARCHAR2(50),
  pr_year              VARCHAR2(10) not null,
  pr_month             VARCHAR2(2) not null
)
;
alter table PROVISIONAL_RECEIPT_DETAIL_T
  add constraint PROVISIONAL_RECEIPT_DETAIL_PK primary key (ORG_ID, BRANCH_ID, PR_YEAR, PR_MONTH, RECEIPT_NO, S_NO);

prompt
prompt Creating table PROVISIONAL_RECEIPT_HEADER_T
prompt ===========================================
prompt
create table PROVISIONAL_RECEIPT_HEADER_T
(
  receipt_no         NUMBER not null,
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  sl_type            VARCHAR2(50),
  sl_code            VARCHAR2(50),
  knockoff_date      DATE,
  from_date          DATE,
  to_date            DATE,
  filter             VARCHAR2(20),
  bank_code          VARCHAR2(50),
  branch_code        VARCHAR2(50),
  bank_account       VARCHAR2(50),
  instrument_type    VARCHAR2(50),
  instrument_number  VARCHAR2(50),
  instrument_date    DATE,
  lock_check         NVARCHAR2(20),
  instrument_amount  NUMBER,
  clearence_check    VARCHAR2(20),
  clearence_date     DATE,
  voucher_type       VARCHAR2(50),
  status             VARCHAR2(20),
  reason             VARCHAR2(50),
  comments           VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  drawn_on           VARCHAR2(200),
  clear_by           NVARCHAR2(20),
  lock_date          DATE,
  lock_by            VARCHAR2(20),
  policy             VARCHAR2(50),
  client_branch_code NUMBER,
  drawn_on_bank      VARCHAR2(50),
  original_tag       VARCHAR2(1),
  pr_original_tag    VARCHAR2(10),
  pr_year            VARCHAR2(10) not null,
  pr_month           VARCHAR2(2) not null,
  pr_ref_no          VARCHAR2(30),
  pr_type            VARCHAR2(1),
  bank_account_code  VARCHAR2(50)
)
;
alter table PROVISIONAL_RECEIPT_HEADER_T
  add constraint PROVISIONAL_RECEIPT_HEADER_PK primary key (ORG_ID, BRANCH_ID, PR_YEAR, PR_MONTH, RECEIPT_NO);

prompt
prompt Creating table RATE_TYPES_T
prompt ===========================
prompt
create table RATE_TYPES_T
(
  org_id           NUMBER not null,
  rate_code        NUMBER not null,
  rate_type        VARCHAR2(100),
  type_version     VARCHAR2(100),
  effective_from   DATE,
  effective_to     DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table RATE_TYPES_T
  add constraint PK_RATE_TYPES primary key (ORG_ID, RATE_CODE);

prompt
prompt Creating table RECON_PROCESS_DTL_T
prompt ==================================
prompt
create table RECON_PROCESS_DTL_T
(
  org_id            NUMBER not null,
  header_id         NUMBER not null,
  detail_id         NUMBER not null,
  recon_process_id  NUMBER not null,
  transaction_date  DATE,
  row_description   VARCHAR2(250),
  no_of_rows        NUMBER,
  cr_amount         NUMBER,
  dr_amount         NUMBER,
  closing_amount    NUMBER,
  reconcilation_tag VARCHAR2(1),
  voucher_type      VARCHAR2(50),
  voucher_no        NUMBER,
  voucher_date      DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  bank_gl_tag       NUMBER
)
;
alter table RECON_PROCESS_DTL_T
  add constraint PK_RECON_PROCESS_DTL_T primary key (ORG_ID, HEADER_ID, DETAIL_ID, RECON_PROCESS_ID);

prompt
prompt Creating table RECON_PROCESS_HD_T
prompt =================================
prompt
create table RECON_PROCESS_HD_T
(
  org_id            NUMBER not null,
  header_id         NUMBER not null,
  bank_code         NUMBER,
  matching_type     VARCHAR2(2),
  payment_type      VARCHAR2(1),
  recon_type        VARCHAR2(1),
  recon_hd_id       NUMBER,
  from_date         DATE,
  to_date           DATE,
  opening_balance   NUMBER,
  creation_date     DATE,
  created_by        VARCHAR2(50),
  last_updated_by   VARCHAR2(50),
  last_updated_date DATE,
  branch_code       NUMBER,
  bank_account      VARCHAR2(100),
  coa_code          VARCHAR2(100),
  bank_account_code VARCHAR2(100),
  recon_as_at_date  DATE,
  verified_status   VARCHAR2(1),
  verified_by       VARCHAR2(50),
  verified_remarks  VARCHAR2(250),
  verified_at       DATE,
  approved_status   VARCHAR2(1),
  approved_by       VARCHAR2(50),
  approved_remarks  VARCHAR2(250),
  approved_at       DATE,
  closing_balance   NUMBER
)
;
alter table RECON_PROCESS_HD_T
  add constraint RECON_PROCESS_HD_T_PK primary key (ORG_ID, HEADER_ID);

prompt
prompt Creating table RECON_PROCESS_LOG_T
prompt ==================================
prompt
create table RECON_PROCESS_LOG_T
(
  org_id            NUMBER,
  header_id         NUMBER,
  bank_code         NUMBER,
  matching_type     VARCHAR2(2),
  payment_type      VARCHAR2(1),
  recon_type        VARCHAR2(1),
  recon_hd_id       NUMBER,
  from_date         DATE,
  to_date           DATE,
  opening_balance   NUMBER,
  creation_date     DATE,
  created_by        VARCHAR2(50),
  last_updated_by   VARCHAR2(50),
  last_updated_date DATE,
  recon_as_at_date  DATE,
  branch_code       NUMBER,
  bank_account      VARCHAR2(100),
  coa_code          VARCHAR2(100),
  bank_account_code VARCHAR2(100),
  closing_balance   NUMBER
)
;

prompt
prompt Creating table REGION_SETUP_T
prompt =============================
prompt
create table REGION_SETUP_T
(
  code                 NUMBER not null,
  description          VARCHAR2(255),
  effective_start_date DATE,
  effective_end_date   DATE
)
;
alter table REGION_SETUP_T
  add constraint PK_REGION_SETUP_T_CODE primary key (CODE);

prompt
prompt Creating table REPORTS_EXCEL_FORMATHD_T
prompt =======================================
prompt
create table REPORTS_EXCEL_FORMATHD_T
(
  org_id           NUMBER not null,
  report_id        NUMBER not null,
  report_name      VARCHAR2(50),
  rdlc_address     VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table REPORTS_EXCEL_FORMATHD_T
  add constraint PK_REPORT_EXCEL_FORMATHD primary key (ORG_ID, REPORT_ID);

prompt
prompt Creating table REPORTS_EXCEL_FORMATDTL_T
prompt ========================================
prompt
create table REPORTS_EXCEL_FORMATDTL_T
(
  org_id           NUMBER not null,
  report_id        NUMBER not null,
  serial_no        NUMBER not null,
  old_name         VARCHAR2(50),
  new_name         VARCHAR2(50),
  column_type      VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table REPORTS_EXCEL_FORMATDTL_T
  add constraint PK_REPORT_EXCEL_FORMATDTL primary key (ORG_ID, REPORT_ID, SERIAL_NO);
alter table REPORTS_EXCEL_FORMATDTL_T
  add constraint REPORT_EX_HD_DTL foreign key (ORG_ID, REPORT_ID)
  references REPORTS_EXCEL_FORMATHD_T (ORG_ID, REPORT_ID);

prompt
prompt Creating table REPORTS_RDLC_PATH_T
prompt ==================================
prompt
create table REPORTS_RDLC_PATH_T
(
  org_id           NUMBER not null,
  report_path      VARCHAR2(500) not null,
  rdlc_path        VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  child_class      VARCHAR2(500)
)
;
alter table REPORTS_RDLC_PATH_T
  add constraint PK_REP_RDLC_PATH primary key (ORG_ID, REPORT_PATH);

prompt
prompt Creating table RESTRICTED_ENTITY_SETUP_T
prompt ========================================
prompt
create table RESTRICTED_ENTITY_SETUP_T
(
  org_id               NUMBER not null,
  restricted_entity_id NUMBER not null,
  entity_type          VARCHAR2(50),
  entity_code          VARCHAR2(50),
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table RESTRICTED_ENTITY_SETUP_T
  add constraint PK_RESTRICTED_ENTITY_SETUP_T primary key (ORG_ID, RESTRICTED_ENTITY_ID);

prompt
prompt Creating table RIDERS_RATES_T
prompt =============================
prompt
create table RIDERS_RATES_T
(
  org_id             NUMBER,
  main_product_code  NUMBER,
  sub_product_code   NUMBER,
  benefit_code       NUMBER,
  rate_code          NUMBER,
  m_age              NUMBER,
  m_year             NUMBER,
  m_rate             NUMBER,
  gender             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  em_rate            NUMBER,
  ri_rate            NUMBER,
  ri_em_rate         NUMBER,
  indexation_rate_id NUMBER
)
;

prompt
prompt Creating table RIDER_VALIDATION_LOGS_T
prompt ======================================
prompt
create table RIDER_VALIDATION_LOGS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  ref_no            VARCHAR2(50),
  benefit_code      NUMBER,
  occupation_code   NUMBER,
  serial_no         NUMBER not null,
  description       VARCHAR2(1000),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table RIDER_VALIDATION_LOGS_T
  add primary key (ORG_ID, SERIAL_NO);

prompt
prompt Creating table RPT_DBR_DATA
prompt ===========================
prompt
create table RPT_DBR_DATA
(
  branchrmcode               VARCHAR2(4000),
  branchrmname               VARCHAR2(4000),
  policy_no                  VARCHAR2(4000),
  pillarregion               VARCHAR2(4000),
  installmentamount          NUMBER,
  gender                     VARCHAR2(4000),
  age                        NUMBER,
  secondmanagercode          VARCHAR2(4000),
  secondmanagername          VARCHAR2(4000),
  desigantion                VARCHAR2(4000),
  refundreceivedtopup        VARCHAR2(4000),
  refundcontribution         VARCHAR2(4000),
  rmnote                     VARCHAR2(4000),
  pendingduescontribution    NUMBER,
  org_id                     NUMBER,
  agent_id                   NUMBER,
  model_id                   NUMBER,
  channel_id                 NUMBER,
  partner_id                 NUMBER,
  submit_date                DATE,
  lock_date                  DATE,
  post_date                  DATE,
  nextdue                    DATE,
  nextdueinstallment         NUMBER,
  installment_no             NUMBER,
  period_end_date            DATE,
  proposalno                 VARCHAR2(4000),
  partnername                VARCHAR2(4000),
  beneficiary_name           VARCHAR2(4000),
  guardian_name              VARCHAR2(4000),
  fundname                   VARCHAR2(4000),
  account_title              VARCHAR2(4000),
  accontno                   VARCHAR2(4000),
  requirements               VARCHAR2(4000),
  pendingdues_contribution   NUMBER,
  certificateyear            NUMBER,
  receivedtopupamount        NUMBER,
  creditbalance              NUMBER,
  cashvalue                  NUMBER,
  topupcashvalue             NUMBER,
  dispatchdate               DATE,
  cnno                       VARCHAR2(4000),
  covermultiple              NUMBER,
  documentdeliverydate       DATE,
  receiveacknowledgementdate DATE,
  creditbalanceregular       NUMBER,
  policycancellationdate     DATE,
  commencementdate           DATE,
  membercnic                 VARCHAR2(4000),
  contributionterm           NUMBER,
  benefitterm                NUMBER,
  topupcontribution          NUMBER,
  premiummode                VARCHAR2(4000),
  totcontribution            NUMBER,
  issueddate                 DATE,
  dateofbirth                DATE,
  submissiondate             DATE,
  sumcovered                 NUMBER,
  nextduedate                DATE,
  approved_by_und_date       DATE,
  maturitydate               DATE,
  telephone                  VARCHAR2(4000),
  phone                      VARCHAR2(4000),
  mobile                     VARCHAR2(4000),
  mailingaddress             VARCHAR2(4000),
  product_type               VARCHAR2(4000),
  certificateownername       VARCHAR2(4000),
  lifeassuredname            VARCHAR2(4000),
  cnicno                     VARCHAR2(4000),
  fathername                 VARCHAR2(4000),
  branchname                 VARCHAR2(4000),
  groups                     VARCHAR2(4000),
  regionname                 VARCHAR2(4000),
  area                       VARCHAR2(4000),
  notissuereason             VARCHAR2(4000),
  decision_desc              VARCHAR2(4000),
  policystatus               VARCHAR2(4000),
  consignment_no             VARCHAR2(4000),
  rider_contribution         NUMBER,
  rider_benefit              NUMBER,
  rider                      VARCHAR2(4000),
  basic_contribution         NUMBER,
  receivedcontribution       NUMBER,
  contribution_indexation    NUMBER,
  sum_assured                NUMBER,
  basic_contribution_modal   NUMBER,
  initial_agent              VARCHAR2(4000),
  initial_agent_code         VARCHAR2(4000),
  agent_name                 VARCHAR2(4000),
  agent_code                 VARCHAR2(4000),
  branch_manual_code         VARCHAR2(4000),
  annualizedcontribution     NUMBER
)
;

prompt
prompt Creating table SMS_MESSAGES_T
prompt =============================
prompt
create table SMS_MESSAGES_T
(
  message_id       NUMBER not null,
  message_text     VARCHAR2(4000),
  mobile_no        VARCHAR2(50),
  status_id        NUMBER,
  retry_count      NUMBER,
  reason           VARCHAR2(2000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  ref_no           VARCHAR2(100),
  hold_tag         VARCHAR2(1),
  group_code       NUMBER,
  category_code    NUMBER,
  event_code       NUMBER,
  template_id      NUMBER,
  other_lang_tag   VARCHAR2(1),
  org_id           NUMBER,
  effective_date   DATE,
  attachment_path  VARCHAR2(500),
  reject_tag       VARCHAR2(1),
  rejected_by      VARCHAR2(50),
  reject_date      DATE
)
;
alter table SMS_MESSAGES_T
  add constraint PK_SMS_MESSAGES primary key (MESSAGE_ID);
alter table SMS_MESSAGES_T
  add constraint FK_MSG_STATUS_MSG foreign key (STATUS_ID)
  references MESSAGE_STATUS_SETUP_T (STATUS_ID);

prompt
prompt Creating table SM_API_IP_WHITELIST_T
prompt ====================================
prompt
create table SM_API_IP_WHITELIST_T
(
  serial_no        NUMBER not null,
  api_url          VARCHAR2(150),
  ip_address       VARCHAR2(50),
  rate_limit       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_API_IP_WHITELIST_T
  add constraint PK_API_IP_HIST primary key (SERIAL_NO);

prompt
prompt Creating table SM_API_USAGE_HIST_T
prompt ==================================
prompt
create table SM_API_USAGE_HIST_T
(
  serial_no        NUMBER not null,
  api_url          VARCHAR2(150),
  ip_address       VARCHAR2(50),
  other_info       VARCHAR2(4000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  input_parameters VARCHAR2(4000),
  active           VARCHAR2(1),
  call_type        VARCHAR2(10)
)
;
alter table SM_API_USAGE_HIST_T
  add constraint PK_API_HIST primary key (SERIAL_NO);

prompt
prompt Creating table SM_APPLICATION_CONFIG_T
prompt ======================================
prompt
create table SM_APPLICATION_CONFIG_T
(
  config_name      VARCHAR2(50) not null,
  config_value     VARCHAR2(500),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_APPLICATION_CONFIG_T
  add constraint PK_APP_CONFIG primary key (CONFIG_NAME);

prompt
prompt Creating table SM_APPLICATION_LOB_MAP_T
prompt =======================================
prompt
create table SM_APPLICATION_LOB_MAP_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  lob_map_id       NUMBER not null,
  lob              VARCHAR2(4),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_APPLICATION_LOB_MAP_T
  add constraint PK_SM_LOB_MAP_T primary key (ORG_ID, APPLICATION_ID, LOB_MAP_ID);

prompt
prompt Creating table SM_APPLICATION_MENU_T
prompt ====================================
prompt
create table SM_APPLICATION_MENU_T
(
  application_id       NUMBER(3) not null,
  menu_id              NUMBER not null,
  menu_desc            VARCHAR2(200),
  menu_url             VARCHAR2(200),
  menu_controller_name VARCHAR2(200),
  menu_action_name     VARCHAR2(200),
  menu_icon            VARCHAR2(200),
  menu_type            VARCHAR2(1),
  active               VARCHAR2(1),
  parent_menu_id       NUMBER,
  display_order        NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  menu_desc_detail     VARCHAR2(200),
  default_menu         VARCHAR2(1)
)
;
alter table SM_APPLICATION_MENU_T
  add constraint PK_APPMENU primary key (APPLICATION_ID, MENU_ID);

prompt
prompt Creating table SM_APPLICATION_MENU_TABS_T
prompt =========================================
prompt
create table SM_APPLICATION_MENU_TABS_T
(
  application_id   NUMBER not null,
  menu_id          NUMBER not null,
  tab_id           NUMBER not null,
  tab_desc         VARCHAR2(50),
  tab_html_id      VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1)
)
;
alter table SM_APPLICATION_MENU_TABS_T
  add constraint PK_MENU_TABS_T primary key (APPLICATION_ID, MENU_ID, TAB_ID);
alter table SM_APPLICATION_MENU_TABS_T
  add constraint FK_MENU_TABS_APP_MENU foreign key (APPLICATION_ID, MENU_ID)
  references SM_APPLICATION_MENU_T (APPLICATION_ID, MENU_ID);

prompt
prompt Creating table SM_APPLICATION_SETUP_T
prompt =====================================
prompt
create table SM_APPLICATION_SETUP_T
(
  serial_no                NUMBER not null,
  file_extensions_allowed  VARCHAR2(200),
  file_size_limit          NUMBER(18),
  text_input_maxlength     NUMBER(18),
  company_logo             VARCHAR2(500),
  admin_open_form          VARCHAR2(1),
  admin_upload_path        VARCHAR2(200),
  user_upload_path         VARCHAR2(200),
  employee_form_type_id    NUMBER,
  smtp_server              VARCHAR2(100),
  smtp_email               VARCHAR2(100),
  smtp_password            VARCHAR2(100),
  smtp_port                NUMBER,
  company_name             VARCHAR2(200),
  password_expiry_days     NUMBER,
  password_min_length      NUMBER,
  max_login_attempts       NUMBER,
  pass_incl_alph_uc        VARCHAR2(1),
  pass_incl_alph_lc        VARCHAR2(1),
  pass_incl_num            VARCHAR2(1),
  pass_incl_sc             VARCHAR2(1),
  pass_sc_list             VARCHAR2(50),
  pass_expiry_days_warning NUMBER,
  user_activation_url      VARCHAR2(200),
  password_reset_url       VARCHAR2(200),
  new_user_video_link      VARCHAR2(200),
  email_secure             VARCHAR2(1),
  send_email_on_submit     VARCHAR2(1),
  send_email_on_return     VARCHAR2(1),
  login_video_background   VARCHAR2(200),
  default_theme            VARCHAR2(50),
  creation_date            DATE,
  created_by               VARCHAR2(50)
)
;
alter table SM_APPLICATION_SETUP_T
  add primary key (SERIAL_NO);

prompt
prompt Creating table SM_USERS_T
prompt =========================
prompt
create table SM_USERS_T
(
  userid                       INTEGER not null,
  first_name                   VARCHAR2(50),
  last_name                    VARCHAR2(50),
  picture                      VARCHAR2(1000),
  email                        VARCHAR2(500),
  phone                        VARCHAR2(15),
  password                     VARCHAR2(200),
  user_supervisor              VARCHAR2(50),
  user_hrbp                    VARCHAR2(50),
  created_by                   VARCHAR2(50),
  creation_date                DATE,
  last_updated_by              VARCHAR2(50),
  last_update_date             DATE,
  active                       VARCHAR2(1),
  user_role                    VARCHAR2(50),
  password_last_change_date    DATE,
  username                     VARCHAR2(50),
  login_attempts               INTEGER,
  force_password_change        VARCHAR2(1),
  force_password_change_reason VARCHAR2(200),
  pass_change_warning          VARCHAR2(1),
  pass_change_days_left        INTEGER,
  security_token               VARCHAR2(200),
  last_login                   DATE,
  client_id                    NUMBER,
  allow_menu                   VARCHAR2(1),
  country_code                 VARCHAR2(20),
  terms_accepted               VARCHAR2(1),
  security_key                 VARCHAR2(500),
  cancel_reason                VARCHAR2(500),
  trial_start_date             DATE,
  trial_extended_days          NUMBER,
  attendance_tag               VARCHAR2(1),
  entity_id                    NUMBER,
  debug_mode                   VARCHAR2(1),
  impersonate_allow            VARCHAR2(1),
  lock_tag                     VARCHAR2(1),
  last_lock_date               DATE,
  active_temp                  VARCHAR2(1)
)
;
alter table SM_USERS_T
  add constraint PK_USERS_T primary key (USERID);
alter table SM_USERS_T
  add constraint PK_USERNAME unique (USERNAME);

prompt
prompt Creating table SM_APPLICATION_USER_MAPPING_T
prompt ============================================
prompt
create table SM_APPLICATION_USER_MAPPING_T
(
  application_id   NUMBER(3) not null,
  userid           NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_APPLICATION_USER_MAPPING_T
  add constraint PK_APPUSER primary key (APPLICATION_ID, USERID);
alter table SM_APPLICATION_USER_MAPPING_T
  add foreign key (USERID)
  references SM_USERS_T (USERID);

prompt
prompt Creating table SM_APP_MENU_ROLE_MAPPING_T
prompt =========================================
prompt
create table SM_APP_MENU_ROLE_MAPPING_T
(
  application_id   NUMBER(3) not null,
  role_id          NUMBER not null,
  menu_id          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  control_view     VARCHAR2(1),
  control_add      VARCHAR2(1),
  control_update   VARCHAR2(1),
  control_delete   VARCHAR2(1),
  control_verify   VARCHAR2(1),
  control_approve  VARCHAR2(1)
)
;
alter table SM_APP_MENU_ROLE_MAPPING_T
  add constraint PK_APPMENU_ROLE primary key (APPLICATION_ID, ROLE_ID, MENU_ID);

prompt
prompt Creating table SM_APP_MENU_ROLE_TABS_T
prompt ======================================
prompt
create table SM_APP_MENU_ROLE_TABS_T
(
  application_id   NUMBER(3) not null,
  role_id          NUMBER not null,
  menu_id          NUMBER not null,
  tab_id           NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  control_view     VARCHAR2(1),
  control_add      VARCHAR2(1),
  control_update   VARCHAR2(1),
  control_delete   VARCHAR2(1),
  control_verify   VARCHAR2(1),
  control_approve  VARCHAR2(1)
)
;
alter table SM_APP_MENU_ROLE_TABS_T
  add constraint PK_APPMENU_ROLE_TAB primary key (APPLICATION_ID, ROLE_ID, MENU_ID, TAB_ID);
alter table SM_APP_MENU_ROLE_TABS_T
  add constraint FK_APPMENU_ROLE_TAB foreign key (APPLICATION_ID, ROLE_ID, MENU_ID)
  references SM_APP_MENU_ROLE_MAPPING_T (APPLICATION_ID, ROLE_ID, MENU_ID);

prompt
prompt Creating table SM_APP_USER_MENU_EXCEPTIONS_T
prompt ============================================
prompt
create table SM_APP_USER_MENU_EXCEPTIONS_T
(
  application_id   NUMBER(3) not null,
  userid           VARCHAR2(50) not null,
  menu_id          NUMBER not null,
  exception_type   VARCHAR2(7),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_APP_USER_MENU_EXCEPTIONS_T
  add constraint PK_APPMENU_EXC primary key (APPLICATION_ID, USERID, MENU_ID);

prompt
prompt Creating table SM_EMAIL_LOGS_T
prompt ==============================
prompt
create table SM_EMAIL_LOGS_T
(
  email_log_id   NUMBER not null,
  email_log_date DATE,
  email_status   VARCHAR2(10),
  email_event    VARCHAR2(20),
  error_details  VARCHAR2(4000)
)
;
alter table SM_EMAIL_LOGS_T
  add constraint PK_EMAIL_LOGS primary key (EMAIL_LOG_ID);

prompt
prompt Creating table SM_EMAIL_TOKENS_T
prompt ================================
prompt
create table SM_EMAIL_TOKENS_T
(
  token_id         NUMBER not null,
  token            VARCHAR2(1000),
  userid           INTEGER,
  token_used       VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  token_reason     VARCHAR2(500)
)
;
alter table SM_EMAIL_TOKENS_T
  add constraint PK_EMAIL_TOKENS_T primary key (TOKEN_ID);

prompt
prompt Creating table SM_MANDATORY_FIELDS_T
prompt ====================================
prompt
create table SM_MANDATORY_FIELDS_T
(
  org_id                 NUMBER not null,
  container_id           VARCHAR2(50) not null,
  field_id               VARCHAR2(50) not null,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  field_label            VARCHAR2(500),
  table_name             VARCHAR2(50),
  display_order          NUMBER,
  visible                VARCHAR2(1),
  field_type             VARCHAR2(1),
  is_mandatory           VARCHAR2(1),
  field_limit            NUMBER,
  description_other_lang NVARCHAR2(500)
)
;
alter table SM_MANDATORY_FIELDS_T
  add constraint PK_MANDATORY_FIELDS primary key (ORG_ID, CONTAINER_ID, FIELD_ID);

prompt
prompt Creating table SM_RELEASE_INFO_T
prompt ================================
prompt
create table SM_RELEASE_INFO_T
(
  serial_no       NUMBER not null,
  release_version NUMBER,
  release_date    DATE,
  creation_date   DATE
)
;
alter table SM_RELEASE_INFO_T
  add constraint PK_RELEASE_INFO primary key (SERIAL_NO);

prompt
prompt Creating table SM_RESTRICTIONS_T
prompt ================================
prompt
create table SM_RESTRICTIONS_T
(
  restriction_id   NUMBER not null,
  restriction_desc VARCHAR2(100),
  active           VARCHAR2(1),
  restriction_type VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  application_id   NUMBER(3) not null
)
;
alter table SM_RESTRICTIONS_T
  add constraint SM_RESTRICTIONS_T_PK primary key (APPLICATION_ID, RESTRICTION_ID);

prompt
prompt Creating table SM_RESTRICTIONS_ROLE_MAPPING_T
prompt =============================================
prompt
create table SM_RESTRICTIONS_ROLE_MAPPING_T
(
  role_id           NUMBER not null,
  application_id    NUMBER(3) not null,
  restriction_id    NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  restriction_value NUMBER(5)
)
;
alter table SM_RESTRICTIONS_ROLE_MAPPING_T
  add primary key (ROLE_ID, APPLICATION_ID, RESTRICTION_ID);
alter table SM_RESTRICTIONS_ROLE_MAPPING_T
  add constraint SM_RESTRICTIONS_ROLE_MAPPI_FK foreign key (APPLICATION_ID, RESTRICTION_ID)
  references SM_RESTRICTIONS_T (APPLICATION_ID, RESTRICTION_ID);

prompt
prompt Creating table SM_ROLE_SETUP_T
prompt ==============================
prompt
create table SM_ROLE_SETUP_T
(
  role_id          NUMBER not null,
  role_desc        VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1),
  application_id   NUMBER(3),
  role_start_date  DATE,
  role_end_date    DATE
)
;
alter table SM_ROLE_SETUP_T
  add constraint PK_ROLE_SETUP_T primary key (ROLE_ID);

prompt
prompt Creating table SM_SCREEN_HEADER_T
prompt =================================
prompt
create table SM_SCREEN_HEADER_T
(
  org_id           NUMBER not null,
  screen_id        NUMBER not null,
  active_tag       CHAR(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  description      VARCHAR2(200)
)
;
alter table SM_SCREEN_HEADER_T
  add constraint PK_SM_SCREEN_HEADER_T primary key (ORG_ID, SCREEN_ID);

prompt
prompt Creating table SM_SCREEN_ROLE_MAP_T
prompt ===================================
prompt
create table SM_SCREEN_ROLE_MAP_T
(
  org_id           NUMBER not null,
  screen_id        NUMBER not null,
  role_id          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_SCREEN_ROLE_MAP_T
  add constraint PK_SM_SCREEN_ROLE_MAP_T primary key (ORG_ID, SCREEN_ID, ROLE_ID);

prompt
prompt Creating table SM_SCREEN_SUB_VIEW_FIELDS_T
prompt ==========================================
prompt
create table SM_SCREEN_SUB_VIEW_FIELDS_T
(
  org_id           NUMBER not null,
  screen_id        NUMBER not null,
  view_id          NUMBER not null,
  sub_view_id      NUMBER not null,
  field_id         VARCHAR2(150) not null,
  view_description VARCHAR2(150),
  active_tag       CHAR(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  display_order    NUMBER
)
;
alter table SM_SCREEN_SUB_VIEW_FIELDS_T
  add constraint PK_SM_SCREEN_SUB_VIEW_FIELDS_T primary key (ORG_ID, SCREEN_ID, VIEW_ID, SUB_VIEW_ID, FIELD_ID);

prompt
prompt Creating table SM_SCREEN_VIEW_T
prompt ===============================
prompt
create table SM_SCREEN_VIEW_T
(
  org_id           NUMBER not null,
  screen_id        NUMBER not null,
  view_id          NUMBER not null,
  view_description VARCHAR2(150),
  active_tag       CHAR(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_SCREEN_VIEW_T
  add constraint PK_SM_SCREEN_VIEW_T primary key (ORG_ID, SCREEN_ID, VIEW_ID);
alter table SM_SCREEN_VIEW_T
  add foreign key (ORG_ID, SCREEN_ID)
  references SM_SCREEN_HEADER_T (ORG_ID, SCREEN_ID);

prompt
prompt Creating table SM_SCREEN_SUB_VIEW_T
prompt ===================================
prompt
create table SM_SCREEN_SUB_VIEW_T
(
  org_id           NUMBER not null,
  screen_id        NUMBER not null,
  view_id          NUMBER not null,
  sub_view_id      NUMBER not null,
  view_description VARCHAR2(150),
  active_tag       CHAR(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  container_id     VARCHAR2(150),
  table_name       VARCHAR2(150)
)
;
alter table SM_SCREEN_SUB_VIEW_T
  add constraint PK_SM_SM_SCREEN_SUB_VIEW_T primary key (ORG_ID, SCREEN_ID, VIEW_ID, SUB_VIEW_ID);
alter table SM_SCREEN_SUB_VIEW_T
  add foreign key (ORG_ID, SCREEN_ID, VIEW_ID)
  references SM_SCREEN_VIEW_T (ORG_ID, SCREEN_ID, VIEW_ID);

prompt
prompt Creating table SM_USER_BRANCH_MAPPING_T
prompt =======================================
prompt
create table SM_USER_BRANCH_MAPPING_T
(
  userid           VARCHAR2(50) not null,
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  user_type        VARCHAR2(1)
)
;
alter table SM_USER_BRANCH_MAPPING_T
  add constraint PK_USER_BRANCH_MAP primary key (USERID, ORG_ID, BRANCH_ID);
alter table SM_USER_BRANCH_MAPPING_T
  add constraint FK_USERMAP_BRANCH foreign key (ORG_ID, BRANCH_ID)
  references TK_BRANCH_SETUP_T (ORG_ID, BRANCH_ID);

prompt
prompt Creating table SM_USER_LOGIN_HIST_T
prompt ===================================
prompt
create table SM_USER_LOGIN_HIST_T
(
  serial_no      NUMBER not null,
  username       VARCHAR2(50),
  ip_address     VARCHAR2(50),
  other_info     VARCHAR2(4000),
  creation_date  DATE,
  status_tag     VARCHAR2(1),
  status_message VARCHAR2(500),
  password       VARCHAR2(500)
)
;
alter table SM_USER_LOGIN_HIST_T
  add constraint PK_USER_LOGIN_HIST primary key (SERIAL_NO);

prompt
prompt Creating table SM_USER_MENU_ACCESS_HIST_T
prompt =========================================
prompt
create table SM_USER_MENU_ACCESS_HIST_T
(
  sequence_no    NUMBER not null,
  application_id NUMBER(3),
  menu_id        NUMBER,
  userid         NUMBER(38),
  access_date    DATE
)
;
alter table SM_USER_MENU_ACCESS_HIST_T
  add constraint PK_USER_MENU_ACC primary key (SEQUENCE_NO);

prompt
prompt Creating table SM_USER_ORG_MAPPING_T
prompt ====================================
prompt
create table SM_USER_ORG_MAPPING_T
(
  userid           VARCHAR2(50) not null,
  org_id           NUMBER not null,
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  user_type        VARCHAR2(1)
)
;
alter table SM_USER_ORG_MAPPING_T
  add constraint PK_USER_ORG primary key (USERID, ORG_ID);
alter table SM_USER_ORG_MAPPING_T
  add constraint FK_USER_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table SM_USER_OTHER_INFO_T
prompt ===================================
prompt
create table SM_USER_OTHER_INFO_T
(
  userid       NUMBER not null,
  billing_info VARCHAR2(2000)
)
;
alter table SM_USER_OTHER_INFO_T
  add primary key (USERID);

prompt
prompt Creating table SM_USER_PASS_CHANGE_HIST_T
prompt =========================================
prompt
create table SM_USER_PASS_CHANGE_HIST_T
(
  serial_no     NUMBER not null,
  username      VARCHAR2(50),
  password      VARCHAR2(50),
  created_by    VARCHAR2(50),
  creation_date DATE
)
;
alter table SM_USER_PASS_CHANGE_HIST_T
  add constraint PK_USER_PASS_CHANGE_HIST primary key (SERIAL_NO);

prompt
prompt Creating table SM_USER_PRIMARY_ROLE_MAPPING_T
prompt =============================================
prompt
create table SM_USER_PRIMARY_ROLE_MAPPING_T
(
  userid           NUMBER not null,
  application_id   NUMBER(3) not null,
  role_id          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_USER_PRIMARY_ROLE_MAPPING_T
  add constraint PK_USER_PR_ROLE_MAP primary key (USERID, APPLICATION_ID, ROLE_ID);
alter table SM_USER_PRIMARY_ROLE_MAPPING_T
  add constraint FK_PR_ROLEMAP_ROLE foreign key (ROLE_ID)
  references SM_ROLE_SETUP_T (ROLE_ID);
alter table SM_USER_PRIMARY_ROLE_MAPPING_T
  add constraint FK_PR_ROLE_USER foreign key (USERID)
  references SM_USERS_T (USERID);

prompt
prompt Creating table SM_USER_ROLE_MAPPING_T
prompt =====================================
prompt
create table SM_USER_ROLE_MAPPING_T
(
  userid           NUMBER not null,
  role_id          NUMBER not null,
  application_id   NUMBER(3),
  role_start_date  DATE,
  role_end_date    DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SM_USER_ROLE_MAPPING_T
  add constraint PK_USER_ROLE_MAP primary key (USERID, ROLE_ID);
alter table SM_USER_ROLE_MAPPING_T
  add constraint FK_ROLEMAP_ROLE foreign key (ROLE_ID)
  references SM_ROLE_SETUP_T (ROLE_ID);
alter table SM_USER_ROLE_MAPPING_T
  add constraint FK_ROLE_USER foreign key (USERID)
  references SM_USERS_T (USERID);

prompt
prompt Creating table SUB_PROD_BEN_AGE_LIMIT_T
prompt =======================================
prompt
create table SUB_PROD_BEN_AGE_LIMIT_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  application_id    NUMBER not null,
  benefit_code      NUMBER not null,
  relation          VARCHAR2(20) not null,
  gender            VARCHAR2(10),
  min_age           NUMBER,
  max_age           NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table SUB_PROD_BEN_AGE_LIMIT_T
  add constraint PK_PROD_BEN_AGE primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, APPLICATION_ID, BENEFIT_CODE, RELATION);

prompt
prompt Creating table SUITABILITY_SCORE_LABELING_T
prompt ===========================================
prompt
create table SUITABILITY_SCORE_LABELING_T
(
  org_id           NUMBER not null,
  score_id         NUMBER not null,
  score_from       NUMBER,
  score_to         NUMBER,
  decision_label   VARCHAR2(250),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table SUITABILITY_SCORE_LABELING_T
  add constraint SUITABILITY_SCORE_LABELING_T primary key (ORG_ID, SCORE_ID);

prompt
prompt Creating table SYS_EXPORT_SCHEMA_01
prompt ===================================
prompt
create table SYS_EXPORT_SCHEMA_01
(
  abort_step              NUMBER,
  ancestor_process_order  NUMBER,
  base_object_name        VARCHAR2(30),
  base_object_schema      VARCHAR2(30),
  base_object_type        VARCHAR2(30),
  base_process_order      NUMBER,
  block_size              NUMBER,
  cluster_ok              NUMBER,
  completed_bytes         NUMBER,
  completed_rows          NUMBER,
  completion_time         DATE,
  control_queue           VARCHAR2(30),
  creation_level          NUMBER,
  cumulative_time         NUMBER,
  data_buffer_size        NUMBER,
  data_io                 NUMBER,
  dataobj_num             NUMBER,
  db_version              VARCHAR2(60),
  degree                  NUMBER,
  domain_process_order    NUMBER,
  dump_allocation         NUMBER,
  dump_fileid             NUMBER,
  dump_length             NUMBER,
  dump_orig_length        NUMBER,
  dump_position           NUMBER,
  duplicate               NUMBER,
  elapsed_time            NUMBER,
  error_count             NUMBER,
  extend_size             NUMBER,
  file_max_size           NUMBER,
  file_name               VARCHAR2(4000),
  file_type               NUMBER,
  flags                   NUMBER,
  grantor                 VARCHAR2(30),
  granules                NUMBER,
  guid                    RAW(16),
  in_progress             CHAR(1),
  instance                VARCHAR2(60),
  instance_id             NUMBER,
  is_default              NUMBER,
  job_mode                VARCHAR2(21),
  job_version             VARCHAR2(60),
  last_file               NUMBER,
  last_update             DATE,
  load_method             NUMBER,
  metadata_buffer_size    NUMBER,
  metadata_io             NUMBER,
  name                    VARCHAR2(30),
  object_int_oid          VARCHAR2(32),
  object_long_name        VARCHAR2(4000),
  object_name             VARCHAR2(200),
  object_number           NUMBER,
  object_path_seqno       NUMBER,
  object_row              NUMBER,
  object_schema           VARCHAR2(30),
  object_tablespace       VARCHAR2(30),
  object_type             VARCHAR2(30),
  object_type_path        VARCHAR2(200),
  old_value               VARCHAR2(4000),
  operation               VARCHAR2(8),
  option_tag              VARCHAR2(30),
  orig_base_object_schema VARCHAR2(30),
  original_object_name    VARCHAR2(128),
  original_object_schema  VARCHAR2(30),
  packet_number           NUMBER,
  parallelization         NUMBER,
  parent_process_order    NUMBER,
  partition_name          VARCHAR2(30),
  phase                   NUMBER,
  platform                VARCHAR2(101),
  process_name            VARCHAR2(30),
  process_order           NUMBER,
  processing_state        CHAR(1),
  processing_status       CHAR(1),
  property                NUMBER,
  queue_tabnum            NUMBER,
  remote_link             VARCHAR2(128),
  scn                     NUMBER,
  seed                    NUMBER,
  service_name            VARCHAR2(64),
  size_estimate           NUMBER,
  start_time              DATE,
  state                   VARCHAR2(12),
  status_queue            VARCHAR2(30),
  subpartition_name       VARCHAR2(30),
  target_xml_clob         CLOB,
  tde_rewrapped_key       RAW(2000),
  template_table          VARCHAR2(30),
  timezone                VARCHAR2(64),
  total_bytes             NUMBER,
  trigflag                NUMBER,
  unload_method           NUMBER,
  user_directory          VARCHAR2(4000),
  user_file_name          VARCHAR2(4000),
  user_name               VARCHAR2(30),
  value_n                 NUMBER,
  value_t                 VARCHAR2(4000),
  version                 NUMBER,
  work_item               VARCHAR2(21),
  xml_clob                CLOB
)
;
comment on table SYS_EXPORT_SCHEMA_01
  is 'Data Pump Master Table EXPORT                         SCHEMA                        ';
create index SYS_MTABLE_000034FCD_IND_1 on SYS_EXPORT_SCHEMA_01 (OBJECT_SCHEMA, OBJECT_NAME, OBJECT_TYPE);
create index SYS_MTABLE_000034FCD_IND_2 on SYS_EXPORT_SCHEMA_01 (BASE_PROCESS_ORDER);
alter table SYS_EXPORT_SCHEMA_01
  add unique (PROCESS_ORDER, DUPLICATE);

prompt
prompt Creating table SYS_EXPORT_SCHEMA_02
prompt ===================================
prompt
create table SYS_EXPORT_SCHEMA_02
(
  abort_step              NUMBER,
  ancestor_process_order  NUMBER,
  base_object_name        VARCHAR2(30),
  base_object_schema      VARCHAR2(30),
  base_object_type        VARCHAR2(30),
  base_process_order      NUMBER,
  block_size              NUMBER,
  cluster_ok              NUMBER,
  completed_bytes         NUMBER,
  completed_rows          NUMBER,
  completion_time         DATE,
  control_queue           VARCHAR2(30),
  creation_level          NUMBER,
  cumulative_time         NUMBER,
  data_buffer_size        NUMBER,
  data_io                 NUMBER,
  dataobj_num             NUMBER,
  db_version              VARCHAR2(60),
  degree                  NUMBER,
  domain_process_order    NUMBER,
  dump_allocation         NUMBER,
  dump_fileid             NUMBER,
  dump_length             NUMBER,
  dump_orig_length        NUMBER,
  dump_position           NUMBER,
  duplicate               NUMBER,
  elapsed_time            NUMBER,
  error_count             NUMBER,
  extend_size             NUMBER,
  file_max_size           NUMBER,
  file_name               VARCHAR2(4000),
  file_type               NUMBER,
  flags                   NUMBER,
  grantor                 VARCHAR2(30),
  granules                NUMBER,
  guid                    RAW(16),
  in_progress             CHAR(1),
  instance                VARCHAR2(60),
  instance_id             NUMBER,
  is_default              NUMBER,
  job_mode                VARCHAR2(21),
  job_version             VARCHAR2(60),
  last_file               NUMBER,
  last_update             DATE,
  load_method             NUMBER,
  metadata_buffer_size    NUMBER,
  metadata_io             NUMBER,
  name                    VARCHAR2(30),
  object_int_oid          VARCHAR2(32),
  object_long_name        VARCHAR2(4000),
  object_name             VARCHAR2(200),
  object_number           NUMBER,
  object_path_seqno       NUMBER,
  object_row              NUMBER,
  object_schema           VARCHAR2(30),
  object_tablespace       VARCHAR2(30),
  object_type             VARCHAR2(30),
  object_type_path        VARCHAR2(200),
  old_value               VARCHAR2(4000),
  operation               VARCHAR2(8),
  option_tag              VARCHAR2(30),
  orig_base_object_schema VARCHAR2(30),
  original_object_name    VARCHAR2(128),
  original_object_schema  VARCHAR2(30),
  packet_number           NUMBER,
  parallelization         NUMBER,
  parent_process_order    NUMBER,
  partition_name          VARCHAR2(30),
  phase                   NUMBER,
  platform                VARCHAR2(101),
  process_name            VARCHAR2(30),
  process_order           NUMBER,
  processing_state        CHAR(1),
  processing_status       CHAR(1),
  property                NUMBER,
  queue_tabnum            NUMBER,
  remote_link             VARCHAR2(128),
  scn                     NUMBER,
  seed                    NUMBER,
  service_name            VARCHAR2(64),
  size_estimate           NUMBER,
  start_time              DATE,
  state                   VARCHAR2(12),
  status_queue            VARCHAR2(30),
  subpartition_name       VARCHAR2(30),
  target_xml_clob         CLOB,
  tde_rewrapped_key       RAW(2000),
  template_table          VARCHAR2(30),
  timezone                VARCHAR2(64),
  total_bytes             NUMBER,
  trigflag                NUMBER,
  unload_method           NUMBER,
  user_directory          VARCHAR2(4000),
  user_file_name          VARCHAR2(4000),
  user_name               VARCHAR2(30),
  value_n                 NUMBER,
  value_t                 VARCHAR2(4000),
  version                 NUMBER,
  work_item               VARCHAR2(21),
  xml_clob                CLOB
)
;
comment on table SYS_EXPORT_SCHEMA_02
  is 'Data Pump Master Table EXPORT                         SCHEMA                        ';
create index SYS_MTABLE_000034FE3_IND_1 on SYS_EXPORT_SCHEMA_02 (OBJECT_SCHEMA, OBJECT_NAME, OBJECT_TYPE);
create index SYS_MTABLE_000034FE3_IND_2 on SYS_EXPORT_SCHEMA_02 (BASE_PROCESS_ORDER);
alter table SYS_EXPORT_SCHEMA_02
  add unique (PROCESS_ORDER, DUPLICATE);

prompt
prompt Creating table TAKAFUL_TYPE_SETUP_T
prompt ===================================
prompt
create table TAKAFUL_TYPE_SETUP_T
(
  org_id           NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  description      VARCHAR2(50),
  active           VARCHAR2(1),
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50)
)
;
alter table TAKAFUL_TYPE_SETUP_T
  add constraint PK_TK_TYPE primary key (ORG_ID, TAKAFUL_TYPE);
alter table TAKAFUL_TYPE_SETUP_T
  add constraint FK_TK_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TARIFF_APPLICATION_MAP_T
prompt =======================================
prompt
create table TARIFF_APPLICATION_MAP_T
(
  org_id           NUMBER not null,
  tariff_code      NUMBER not null,
  application_id   NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TARIFF_APPLICATION_MAP_T
  add constraint PK_TAR_APP_MAP_T primary key (ORG_ID, TARIFF_CODE, APPLICATION_ID);

prompt
prompt Creating table TASK_MANAGER_T
prompt =============================
prompt
create table TASK_MANAGER_T
(
  org_id               NUMBER not null,
  project_id           NUMBER not null,
  task_id              NUMBER not null,
  task_name            VARCHAR2(200),
  task_desc            VARCHAR2(1000),
  task_priority        VARCHAR2(10),
  task_start_date      DATE,
  task_target_date     DATE,
  task_actual_end_date DATE,
  task_category        VARCHAR2(50),
  task_status          VARCHAR2(10),
  task_assignee        NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  file_path            VARCHAR2(200),
  task_stage_id        NUMBER,
  parent_task_id       NUMBER,
  task_closed_by       VARCHAR2(50),
  task_group_id        NUMBER
)
;
alter table TASK_MANAGER_T
  add constraint PK_TASK_MANAGER_T primary key (ORG_ID, PROJECT_ID, TASK_ID);

prompt
prompt Creating table TASK_REGISTER_MAIN_T
prompt ===================================
prompt
create table TASK_REGISTER_MAIN_T
(
  org_id           NUMBER not null,
  register_id      NUMBER not null,
  t_date           DATE,
  time_in          DATE,
  time_out         DATE,
  task_summary     VARCHAR2(1000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TASK_REGISTER_MAIN_T
  add constraint PK_TASK_REGISTER_MAIN_T primary key (ORG_ID, REGISTER_ID);

prompt
prompt Creating table TASK_REGISTER_SUMMARY_T
prompt ======================================
prompt
create table TASK_REGISTER_SUMMARY_T
(
  org_id           NUMBER not null,
  register_id      NUMBER not null,
  detail_id        NUMBER not null,
  task_summary     VARCHAR2(1000),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TASK_REGISTER_SUMMARY_T
  add constraint PK_TASK_REGISTER_SUMMARY_T primary key (ORG_ID, REGISTER_ID, DETAIL_ID);

prompt
prompt Creating table TASK_STAGE_T
prompt ===========================
prompt
create table TASK_STAGE_T
(
  org_id                 NUMBER not null,
  task_stage_id          NUMBER not null,
  task_stage_description VARCHAR2(200),
  active                 VARCHAR2(5),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table TASK_STAGE_T
  add constraint PK_TASK_STAGE_T primary key (ORG_ID, TASK_STAGE_ID);

prompt
prompt Creating table TASK_TYPE_SETUP_T
prompt ================================
prompt
create table TASK_TYPE_SETUP_T
(
  task_type_id     NUMBER not null,
  task_type_desc   VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  org_id           NUMBER not null
)
;
alter table TASK_TYPE_SETUP_T
  add constraint PK_TASK_TYPE_SETUP_T primary key (ORG_ID, TASK_TYPE_ID);

prompt
prompt Creating table TEST_SETUP_T
prompt ===========================
prompt
create table TEST_SETUP_T
(
  code        NUMBER not null,
  description VARCHAR2(255),
  test_date   DATE,
  test_abbr   VARCHAR2(4)
)
;
alter table TEST_SETUP_T
  add constraint PK_TEST_SETUP_T_CODE primary key (CODE);

prompt
prompt Creating table THIRDPARTYKEY
prompt ============================
prompt
create table THIRDPARTYKEY
(
  username   VARCHAR2(100),
  key        VARCHAR2(100),
  isactive   NUMBER default 0,
  monthlimit NUMBER default 60000,
  daylimit   NUMBER default 600
)
;

prompt
prompt Creating table THIRDPARTYUSERS
prompt ==============================
prompt
create table THIRDPARTYUSERS
(
  username        VARCHAR2(100) not null,
  firstname       VARCHAR2(100),
  lastname        VARCHAR2(100),
  password        VARCHAR2(50),
  email           VARCHAR2(100),
  referralfrom    VARCHAR2(100),
  howdidyou       VARCHAR2(100),
  howdidyousource VARCHAR2(250),
  countrycode     VARCHAR2(100),
  contactnumber   VARCHAR2(20)
)
;
alter table THIRDPARTYUSERS
  add constraint THIRDPARTYUSERS_PK primary key (USERNAME);

prompt
prompt Creating table THIRPARTYCALLS
prompt =============================
prompt
create table THIRPARTYCALLS
(
  username          VARCHAR2(100),
  apikey            VARCHAR2(100),
  totallydailycalls NUMBER not null,
  calldate          DATE,
  isactive          VARCHAR2(1)
)
;

prompt
prompt Creating table TICKET_DOC_CHECKLIST_MAP_T
prompt =========================================
prompt
create table TICKET_DOC_CHECKLIST_MAP_T
(
  org_id             NUMBER not null,
  application_id     NUMBER not null,
  ticket_id          NUMBER not null,
  document_no        VARCHAR2(200),
  ticket_type        NUMBER not null,
  ticket_sub_type    NUMBER not null,
  document_type      VARCHAR2(1),
  doc_checklist_code NUMBER not null,
  required_document  VARCHAR2(200),
  file_path          VARCHAR2(500),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table TICKET_DOC_CHECKLIST_MAP_T
  add primary key (ORG_ID, APPLICATION_ID, TICKET_ID, TICKET_TYPE, TICKET_SUB_TYPE, DOC_CHECKLIST_CODE);

prompt
prompt Creating table TICKET_REASSIGN_ISM_MAPP_T
prompt =========================================
prompt
create table TICKET_REASSIGN_ISM_MAPP_T
(
  org_id             NUMBER not null,
  ticket_type_id     NUMBER not null,
  ticket_sub_type_id NUMBER not null,
  reassign_map_id    NUMBER not null,
  ism                NUMBER,
  ism_code           VARCHAR2(20),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table TICKET_REASSIGN_ISM_MAPP_T
  add constraint PK_TKT_REASSIGN_T primary key (ORG_ID, TICKET_TYPE_ID, TICKET_SUB_TYPE_ID, REASSIGN_MAP_ID);

prompt
prompt Creating table TKT_RESP_DEPT_ISM_T
prompt ==================================
prompt
create table TKT_RESP_DEPT_ISM_T
(
  org_id           NUMBER not null,
  dept_id          NUMBER not null,
  ism_code         VARCHAR2(100) not null,
  ism_desc         VARCHAR2(50),
  tat              VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TKT_RESP_DEPT_ISM_T
  add constraint PK_TKT_RESP_DEPT_ISM primary key (ORG_ID, DEPT_ID, ISM_CODE);

prompt
prompt Creating table TK_API_MAPPING_T
prompt ===============================
prompt
create table TK_API_MAPPING_T
(
  mapping_type     VARCHAR2(10) not null,
  api_value        VARCHAR2(100) not null,
  takaful_value    VARCHAR2(100),
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50)
)
;
alter table TK_API_MAPPING_T
  add constraint PK_TK_MAPPING primary key (MAPPING_TYPE, API_VALUE);

prompt
prompt Creating table TK_BID_OFFER_SETUP_T
prompt ===================================
prompt
create table TK_BID_OFFER_SETUP_T
(
  org_id               NUMBER not null,
  rate_id              NUMBER not null,
  rate                 NUMBER,
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(100),
  creation_date        DATE,
  last_updated_by      VARCHAR2(100),
  last_update_date     DATE
)
;
alter table TK_BID_OFFER_SETUP_T
  add constraint TK_BID_OFFER_SETUP_PK primary key (ORG_ID, RATE_ID);

prompt
prompt Creating table TK_BUSINESS_CLASS_T
prompt ==================================
prompt
create table TK_BUSINESS_CLASS_T
(
  b_class_code     NUMBER not null,
  b_class_name     VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_BUSINESS_CLASS_T
  add constraint PK_TK_BUSINESS_CLASS_T primary key (B_CLASS_CODE);

prompt
prompt Creating table TK_BUS_CLASS_SETUP_T
prompt ===================================
prompt
create table TK_BUS_CLASS_SETUP_T
(
  org_id               NUMBER not null,
  b_class_code         VARCHAR2(10) not null,
  b_class_desc         VARCHAR2(500),
  active               VARCHAR2(1),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  document_description VARCHAR2(4000),
  life_tag             VARCHAR2(1),
  show_expiry          VARCHAR2(1)
)
;
alter table TK_BUS_CLASS_SETUP_T
  add constraint PK_TK_BUS_CLASS_SETUP_T primary key (ORG_ID, B_CLASS_CODE);
alter table TK_BUS_CLASS_SETUP_T
  add constraint FK_ORG_BCLASS foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TK_BUS_CLASS_AGENTS_T
prompt ====================================
prompt
create table TK_BUS_CLASS_AGENTS_T
(
  org_id           NUMBER not null,
  b_class_code     VARCHAR2(10) not null,
  agent_code       NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_BUS_CLASS_AGENTS_T
  add constraint PK_TK_BUS_CLASS_AGENTS_T primary key (ORG_ID, B_CLASS_CODE, AGENT_CODE);
alter table TK_BUS_CLASS_AGENTS_T
  add constraint FK_AGENT_MAP_AGENT foreign key (ORG_ID, AGENT_CODE)
  references TK_AGENT_SETUP_T (ORG_ID, AGENT_CODE);
alter table TK_BUS_CLASS_AGENTS_T
  add constraint FK_AGENT_MAP_BCLASS foreign key (ORG_ID, B_CLASS_CODE)
  references TK_BUS_CLASS_SETUP_T (ORG_ID, B_CLASS_CODE);
alter table TK_BUS_CLASS_AGENTS_T
  add constraint FK_ORG_AGENT_MAP foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TK_BUS_CLASS_CNTRY_MAP_T
prompt =======================================
prompt
create table TK_BUS_CLASS_CNTRY_MAP_T
(
  org_id           NUMBER not null,
  b_class_code     VARCHAR2(10) not null,
  country_code     VARCHAR2(20) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_BUS_CLASS_CNTRY_MAP_T
  add constraint PK_TK_BCLASS_CNTRY_MAP_T primary key (ORG_ID, B_CLASS_CODE, COUNTRY_CODE);
alter table TK_BUS_CLASS_CNTRY_MAP_T
  add constraint FK_BCLASS_BCLASS_CNT_MAP foreign key (ORG_ID, B_CLASS_CODE)
  references TK_BUS_CLASS_SETUP_T (ORG_ID, B_CLASS_CODE);
alter table TK_BUS_CLASS_CNTRY_MAP_T
  add constraint FK_CNT_BCLASS_CNT_MAP foreign key (COUNTRY_CODE)
  references COUNTRY (COUNTRY_CODE);
alter table TK_BUS_CLASS_CNTRY_MAP_T
  add constraint FK_ORG_BCLASS_CNT_MAP foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TK_INSURANCE_COMPANY_T
prompt =====================================
prompt
create table TK_INSURANCE_COMPANY_T
(
  company_code     NUMBER not null,
  company_name     VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_INSURANCE_COMPANY_T
  add constraint PK_TK_INSURANCE_COMPANY_T primary key (COMPANY_CODE);

prompt
prompt Creating table TK_B_CLASS_PRODUCTS_T
prompt ====================================
prompt
create table TK_B_CLASS_PRODUCTS_T
(
  company_code      NUMBER not null,
  b_class_code      NUMBER not null,
  product_code      NUMBER not null,
  product_desc      VARCHAR2(200),
  active            VARCHAR2(1),
  contribution_rate NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table TK_B_CLASS_PRODUCTS_T
  add constraint PK_TK_INSU_COMP_PRODUCTS_T primary key (COMPANY_CODE, B_CLASS_CODE, PRODUCT_CODE);
alter table TK_B_CLASS_PRODUCTS_T
  add foreign key (COMPANY_CODE)
  references TK_INSURANCE_COMPANY_T (COMPANY_CODE);
alter table TK_B_CLASS_PRODUCTS_T
  add foreign key (B_CLASS_CODE)
  references TK_BUSINESS_CLASS_T (B_CLASS_CODE);

prompt
prompt Creating table TK_B_CLASS_PROD_FEATURE_T
prompt ========================================
prompt
create table TK_B_CLASS_PROD_FEATURE_T
(
  b_class_code     NUMBER not null,
  feature_code     NUMBER not null,
  feature_desc     VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_B_CLASS_PROD_FEATURE_T
  add constraint PK_TK_B_CLASS_PROD_FEATURE_T primary key (B_CLASS_CODE, FEATURE_CODE);
alter table TK_B_CLASS_PROD_FEATURE_T
  add foreign key (B_CLASS_CODE)
  references TK_BUSINESS_CLASS_T (B_CLASS_CODE);

prompt
prompt Creating table TK_B_CLASS_PROD_FEAT_MAP_T
prompt =========================================
prompt
create table TK_B_CLASS_PROD_FEAT_MAP_T
(
  company_code     NUMBER not null,
  b_class_code     NUMBER not null,
  product_code     NUMBER not null,
  feature_code     NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table TK_B_CLASS_PROD_FEAT_MAP_T
  add constraint PK_TK_PROD_FEAT_MAP primary key (COMPANY_CODE, B_CLASS_CODE, PRODUCT_CODE, FEATURE_CODE);
alter table TK_B_CLASS_PROD_FEAT_MAP_T
  add foreign key (COMPANY_CODE)
  references TK_INSURANCE_COMPANY_T (COMPANY_CODE);
alter table TK_B_CLASS_PROD_FEAT_MAP_T
  add foreign key (B_CLASS_CODE)
  references TK_BUSINESS_CLASS_T (B_CLASS_CODE);

prompt
prompt Creating table TK_B_CLASS_PROD_OTH_T
prompt ====================================
prompt
create table TK_B_CLASS_PROD_OTH_T
(
  b_class_code     NUMBER not null,
  field_code       NUMBER not null,
  field_desc       VARCHAR2(200),
  field_type       NUMBER,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  rate_tag         VARCHAR2(1),
  value_set_id     NUMBER,
  valueset_id      NUMBER,
  sql_query        VARCHAR2(1000),
  field_db_name    VARCHAR2(50)
)
;
alter table TK_B_CLASS_PROD_OTH_T
  add constraint PK_TK_B_CLASS_PROD_OTH_T primary key (B_CLASS_CODE, FIELD_CODE);
alter table TK_B_CLASS_PROD_OTH_T
  add foreign key (B_CLASS_CODE)
  references TK_BUSINESS_CLASS_T (B_CLASS_CODE);

prompt
prompt Creating table TK_B_CLASS_PROD_RATE_T
prompt =====================================
prompt
create table TK_B_CLASS_PROD_RATE_T
(
  serial_no        NUMBER not null,
  company_code     NUMBER,
  b_class_code     NUMBER,
  product_code     NUMBER,
  make_code        NUMBER,
  model_code       NUMBER,
  vehicle_year     NUMBER,
  engine_power     NUMBER,
  rate_actual      NUMBER,
  rate_discounted  NUMBER,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  vehicle_value    NUMBER,
  plan_type        VARCHAR2(10),
  destination      VARCHAR2(10),
  country_code     VARCHAR2(10)
)
;
alter table TK_B_CLASS_PROD_RATE_T
  add constraint PK_TK_B_CLASS_PROD_RATE_T primary key (SERIAL_NO);
alter table TK_B_CLASS_PROD_RATE_T
  add foreign key (COMPANY_CODE, B_CLASS_CODE, PRODUCT_CODE)
  references TK_B_CLASS_PRODUCTS_T (COMPANY_CODE, B_CLASS_CODE, PRODUCT_CODE);
