prompt PL/SQL Developer Export User Objects for user ZEAL_ERP@ORCLGBA
prompt Created by App.Admin on Wednesday, June 11, 2025
set define off
spool TidalERP-Script.log

prompt
prompt Creating table AGENT_AUTHORITY_T
prompt ================================
prompt
create table AGENT_AUTHORITY_T
(
  org_id           NUMBER not null,
  user_id          NUMBER not null,
  agent_auth_id    NUMBER not null,
  number_of_days   NUMBER,
  max_amount       NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  credit_limit     NUMBER,
  agent_comission  NUMBER,
  unlimited_credit VARCHAR2(2),
  parent_agent     NUMBER,
  branch_id        NUMBER not null
)
;
alter table AGENT_AUTHORITY_T
  add constraint PK_AGENT_AUTHORITY_T primary key (ORG_ID, USER_ID, AGENT_AUTH_ID, BRANCH_ID);

prompt
prompt Creating table AGENT_BRANCH_MAPPING_T
prompt =====================================
prompt
create table AGENT_BRANCH_MAPPING_T
(
  agent_id         NUMBER not null,
  branch_id        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AGENT_BRANCH_MAPPING_T
  add constraint PK_AGENT_BRANCH_MAPPING_T primary key (AGENT_ID, BRANCH_ID);

prompt
prompt Creating table TK_ORGANIZATION_SETUP_T
prompt ======================================
prompt
create table TK_ORGANIZATION_SETUP_T
(
  org_id                NUMBER not null,
  org_desc              VARCHAR2(500),
  active                VARCHAR2(1),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  logo_image            VARCHAR2(4000),
  organization_address  VARCHAR2(300),
  organization_address2 VARCHAR2(300),
  email                 VARCHAR2(100),
  website               VARCHAR2(100),
  uan                   VARCHAR2(10),
  phonenumber           VARCHAR2(100),
  other_lang_org_desc   NVARCHAR2(1000),
  default_country       VARCHAR2(10)
)
;
alter table TK_ORGANIZATION_SETUP_T
  add constraint PK_TK_ORGANIZATION_SETUP_T primary key (ORG_ID);

prompt
prompt Creating table TK_AGENT_SETUP_T
prompt ===============================
prompt
create table TK_AGENT_SETUP_T
(
  org_id              NUMBER not null,
  agent_code          NUMBER not null,
  agent_desc          VARCHAR2(500),
  commission_rate     NUMBER(9,6),
  commission_flat_amt NUMBER(15,2),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  agency_code         NUMBER,
  direct_agent        VARCHAR2(1),
  broker              VARCHAR2(1),
  gender              VARCHAR2(1),
  phone_no            VARCHAR2(15),
  address             VARCHAR2(50),
  reference_no        VARCHAR2(50),
  remarks             VARCHAR2(200)
)
;
alter table TK_AGENT_SETUP_T
  add constraint PK_TK_AGENT_SETUP_T primary key (ORG_ID, AGENT_CODE);
alter table TK_AGENT_SETUP_T
  add constraint FK_AGENT_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table AGENT_HIERARCHY_T
prompt ================================
prompt
create table AGENT_HIERARCHY_T
(
  org_id               NUMBER not null,
  agent_id             NUMBER not null,
  parent_agent         NUMBER,
  agent_level          NUMBER not null,
  percentage           VARCHAR2(50),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  effective_start_date DATE,
  effective_end_date   DATE,
  agency_code          NUMBER
)
;
alter table AGENT_HIERARCHY_T
  add constraint PK_AGENT_HIER primary key (ORG_ID, AGENT_LEVEL, AGENT_ID);
alter table AGENT_HIERARCHY_T
  add constraint AGENT_ID_FK foreign key (ORG_ID, AGENT_ID)
  references TK_AGENT_SETUP_T (ORG_ID, AGENT_CODE);
alter table AGENT_HIERARCHY_T
  add constraint ORG_ID_FK foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);
alter table AGENT_HIERARCHY_T
  add constraint PARENT_AGENT_FK foreign key (ORG_ID, PARENT_AGENT)
  references TK_AGENT_SETUP_T (ORG_ID, AGENT_CODE);

prompt
prompt Creating table TK_AGENCY_SETUP_T
prompt ================================
prompt
create table TK_AGENCY_SETUP_T
(
  org_id           NUMBER not null,
  agency_code      NUMBER not null,
  agency_desc      VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  overriding_rate  NUMBER(9,6),
  reference_no     VARCHAR2(50),
  remarks          VARCHAR2(200)
)
;
alter table TK_AGENCY_SETUP_T
  add constraint PK_TK_AGENCY_SETUP_T primary key (ORG_ID, AGENCY_CODE);
alter table TK_AGENCY_SETUP_T
  add constraint FK_AGENCY_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table AGENT_LEVEL_DEFINITION_T
prompt =======================================
prompt
create table AGENT_LEVEL_DEFINITION_T
(
  org_id               NUMBER not null,
  agency_code          NUMBER not null,
  level_id             NUMBER not null,
  level_description    VARCHAR2(250),
  level_length         NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  overriding_rate      NUMBER,
  effective_start_date DATE,
  effective_end_date   DATE
)
;
alter table AGENT_LEVEL_DEFINITION_T
  add constraint PK_AGENT_LEVEL primary key (ORG_ID, AGENCY_CODE, LEVEL_ID);
alter table AGENT_LEVEL_DEFINITION_T
  add constraint FK_AG_LEVEL_AGENCY foreign key (ORG_ID, AGENCY_CODE)
  references TK_AGENCY_SETUP_T (ORG_ID, AGENCY_CODE);

prompt
prompt Creating table AGENT_PLAN_MAPPING
prompt =================================
prompt
create table AGENT_PLAN_MAPPING
(
  org_id           NUMBER not null,
  tp_id            NUMBER not null,
  plan_mapping_id  NUMBER not null,
  user_id          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  branch_id        NUMBER not null
)
;
alter table AGENT_PLAN_MAPPING
  add constraint PK_AP_MAPPING_T primary key (ORG_ID, TP_ID, PLAN_MAPPING_ID, USER_ID, BRANCH_ID);

prompt
prompt Creating table AGENT_REGISTRATION_T
prompt ===================================
prompt
create table AGENT_REGISTRATION_T
(
  agent_id              NUMBER not null,
  agent_name            VARCHAR2(100),
  email                 VARCHAR2(250),
  contact               VARCHAR2(15),
  username              VARCHAR2(100),
  is_approved           VARCHAR2(1),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  remarks               VARCHAR2(500),
  address               VARCHAR2(200),
  ntn_number            VARCHAR2(13),
  name_of_director      VARCHAR2(50),
  cnic                  VARCHAR2(20),
  contact_person        VARCHAR2(50),
  authorize_person_name VARCHAR2(50),
  city                  VARCHAR2(60),
  active                VARCHAR2(1)
)
;
alter table AGENT_REGISTRATION_T
  add constraint PK_AGENT_REGISTRATION_T primary key (AGENT_ID);

prompt
prompt Creating table AGT_L1_PRD_BNS_CRITEREA_T
prompt ========================================
prompt
create table AGT_L1_PRD_BNS_CRITEREA_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  min_persistency_2 NUMBER not null,
  min_persistency_3 NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AGT_L1_PRD_BNS_CRITEREA_T
  add constraint CONSTRAINT_NAME unique (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID);

prompt
prompt Creating table AGT_L1_PRS_BNS_CRITEREA_T
prompt ========================================
prompt
create table AGT_L1_PRS_BNS_CRITEREA_T
(
  org_id                     NUMBER not null,
  channel_id                 NUMBER not null,
  model_id                   NUMBER not null,
  policy_id                  NUMBER not null,
  stipend_type               VARCHAR2(1) not null,
  min_due_plan               NUMBER not null,
  min_due_contribution_2year NUMBER not null,
  min_persistency_2          NUMBER not null,
  min_persistency_3          NUMBER not null,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE
)
;
alter table AGT_L1_PRS_BNS_CRITEREA_T
  add constraint PK_AGT_L1_PRS_BNS_CRITEREA_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, STIPEND_TYPE);

prompt
prompt Creating table AGT_L2_PMT_TRGT_CRITEREA_T
prompt =========================================
prompt
create table AGT_L2_PMT_TRGT_CRITEREA_T
(
  org_id                NUMBER not null,
  channel_id            NUMBER not null,
  model_id              NUMBER not null,
  policy_id             NUMBER not null,
  first_qtr_target_pct  NUMBER,
  second_qtr_target_pct NUMBER,
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  first_qtr_team_pct    NUMBER,
  second_qtr_team_pct   NUMBER
)
;
alter table AGT_L2_PMT_TRGT_CRITEREA_T
  add constraint PK_AGT_L2_PMT_TRGT_CRITEREA_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID);

prompt
prompt Creating table AGT_L2_PRD_BNS_CRITEREA_T
prompt ========================================
prompt
create table AGT_L2_PRD_BNS_CRITEREA_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  min_persistency_2 NUMBER not null,
  min_persistency_3 NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AGT_L2_PRD_BNS_CRITEREA_T
  add constraint PK_AGT_L2_PRD_BNS_CRITEREA_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID);

prompt
prompt Creating table AML_TYPE_DOCUMENT_MAPPING_T
prompt ==========================================
prompt
create table AML_TYPE_DOCUMENT_MAPPING_T
(
  org_id           NUMBER not null,
  aml_type         VARCHAR2(3) not null,
  document_type    VARCHAR2(10) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  doc_percentage   NUMBER
)
;
alter table AML_TYPE_DOCUMENT_MAPPING_T
  add constraint PK_AML_TYPE_DOC_MAPPING_T primary key (ORG_ID, AML_TYPE, DOCUMENT_TYPE);

prompt
prompt Creating table AM_AGENCY_DESIGNATION_T
prompt ======================================
prompt
create table AM_AGENCY_DESIGNATION_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  designation_id    NUMBER not null,
  designation_name  VARCHAR2(5),
  designation_level VARCHAR2(3),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_AGENCY_DESIGNATION_T
  add constraint PK_AM_AGENCY_DESIGNATION_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_AGENT_BANK_T
prompt ==============================
prompt
create table AM_AGENT_BANK_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  serial_no        NUMBER not null,
  bank_code        VARCHAR2(3),
  branch_code      VARCHAR2(3),
  account_no       VARCHAR2(40),
  iban             VARCHAR2(40),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_BANK_T
  add constraint PK_AM_AGENT_BANK_T primary key (ORG_ID, AGENT_ID, SERIAL_NO);

prompt
prompt Creating table AM_AGENT_T
prompt =========================
prompt
create table AM_AGENT_T
(
  org_id                         NUMBER not null,
  agent_id                       NUMBER not null,
  agent_name                     VARCHAR2(150),
  active                         VARCHAR2(1),
  cnic                           VARCHAR2(15),
  prefix                         VARCHAR2(2),
  father_husband_name            VARCHAR2(100),
  dob                            DATE,
  doj                            DATE,
  mother_name                    VARCHAR2(20),
  agent_status                   VARCHAR2(2),
  agent_type                     VARCHAR2(2),
  marital_status                 VARCHAR2(1),
  religion                       VARCHAR2(3),
  nationality                    VARCHAR2(3),
  email_id                       VARCHAR2(50),
  gender                         VARCHAR2(2),
  created_by                     VARCHAR2(50),
  creation_date                  DATE,
  last_updated_by                VARCHAR2(50),
  last_update_date               DATE,
  cdc_check_date                 DATE,
  username                       VARCHAR2(200),
  nic_expiry_date                DATE,
  first_name                     VARCHAR2(150),
  middle_name                    VARCHAR2(150),
  last_name                      VARCHAR2(150),
  agent_code                     VARCHAR2(50),
  empolyee_id                    NUMBER,
  contract_sent_date             DATE,
  contract_receive_date          DATE,
  appointment_letter_sent_date   DATE,
  appointment_letter_receivedate DATE,
  active_comment                 VARCHAR2(250)
)
;
alter table AM_AGENT_T
  add constraint PK_AM_AGENT_T primary key (ORG_ID, AGENT_ID);

prompt
prompt Creating table AM_AGENT_PARTNER_T
prompt =================================
prompt
create table AM_AGENT_PARTNER_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  partner_id       NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_PARTNER_T
  add constraint PK_AM_AGENT_PARTNER_T primary key (ORG_ID, AGENT_ID, PARTNER_ID);
alter table AM_AGENT_PARTNER_T
  add constraint AM_AGENT_PARTNER_T_R01 foreign key (ORG_ID, AGENT_ID)
  references AM_AGENT_T (ORG_ID, AGENT_ID);

prompt
prompt Creating table AM_AGENT_CHANNEL_T
prompt =================================
prompt
create table AM_AGENT_CHANNEL_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  partner_id       NUMBER not null,
  channel_id       NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_CHANNEL_T
  add constraint PK_AM_AGENT_CHANNEL_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID);
alter table AM_AGENT_CHANNEL_T
  add constraint AM_AGENT_CHANNEL_T_R01 foreign key (ORG_ID, AGENT_ID, PARTNER_ID)
  references AM_AGENT_PARTNER_T (ORG_ID, AGENT_ID, PARTNER_ID);

prompt
prompt Creating table AM_AGENT_CHANNEL_MODEL_T
prompt =======================================
prompt
create table AM_AGENT_CHANNEL_MODEL_T
(
  org_id                         NUMBER not null,
  agent_id                       NUMBER not null,
  partner_id                     NUMBER not null,
  channel_id                     NUMBER not null,
  model_id                       NUMBER not null,
  created_by                     VARCHAR2(50),
  creation_date                  DATE,
  last_updated_by                VARCHAR2(50),
  last_update_date               DATE,
  termination_id                 NUMBER,
  termination_date               DATE,
  termination_by                 VARCHAR2(50),
  delete_flag                    VARCHAR2(1),
  reinstate_id                   NUMBER,
  reinstate_date                 DATE,
  reinstate_by                   VARCHAR2(50),
  joining_date                   DATE,
  agent_status                   VARCHAR2(2),
  agent_type                     VARCHAR2(2),
  contract_sent_date             DATE,
  contract_receive_date          DATE,
  appointment_letter_sent_date   DATE,
  appointment_letter_receivedate DATE,
  active_comment                 VARCHAR2(250),
  active                         VARCHAR2(1)
)
;
alter table AM_AGENT_CHANNEL_MODEL_T
  add constraint PK_AM_AGENT_CHANNEL_MODEL_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID);
alter table AM_AGENT_CHANNEL_MODEL_T
  add constraint AM_AGENT_CHANNEL_MODEL_T_R01 foreign key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID)
  references AM_AGENT_CHANNEL_T (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID);

prompt
prompt Creating table AM_AGENT_COM_TRANSFER_DTL_T
prompt ==========================================
prompt
create table AM_AGENT_COM_TRANSFER_DTL_T
(
  org_id                  NUMBER not null,
  process_id              NUMBER not null,
  branch_id               NUMBER not null,
  main_product_code       NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  serial_no               NUMBER not null,
  commission_cycle_id     NUMBER not null,
  channel_id              NUMBER not null,
  channel_model_id        NUMBER not null,
  agent_code              NUMBER not null,
  cycle_level             VARCHAR2(20),
  designation             VARCHAR2(20),
  cycle_type              VARCHAR2(20),
  allocation_category     VARCHAR2(50),
  commission_rate         NUMBER(9,6),
  commission_flat_amt     NUMBER(15,2),
  commission_amount       NUMBER(15,2),
  agency_type             VARCHAR2(20),
  shares                  NUMBER,
  gross_contribution      NUMBER,
  activity_type           VARCHAR2(100),
  activity_date           DATE,
  comm_percent_share      NUMBER,
  doc_reference_no        VARCHAR2(50),
  contribution_received   NUMBER,
  comm_settled            NUMBER,
  installment_no          NUMBER,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  allocation_id           NUMBER not null,
  doc_ref_no_key          VARCHAR2(150),
  hold_comment            VARCHAR2(500),
  release_comment         VARCHAR2(500),
  cycle_nature            VARCHAR2(10),
  allocation_type         NUMBER,
  transferred_comm_amount NUMBER default (0),
  transfer_to_agent       NUMBER not null
)
;
alter table AM_AGENT_COM_TRANSFER_DTL_T
  add constraint PK_AM_AGENT_COM_TRANSFER_DTL_T primary key (ORG_ID, PROCESS_ID, BRANCH_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO, COMMISSION_CYCLE_ID, ALLOCATION_ID, CHANNEL_ID, CHANNEL_MODEL_ID, AGENT_CODE, TRANSFER_TO_AGENT);

prompt
prompt Creating table AM_AGENT_COM_TRANSFER_T
prompt ======================================
prompt
create table AM_AGENT_COM_TRANSFER_T
(
  process_id        NUMBER not null,
  org_id            NUMBER not null,
  agent_id          NUMBER,
  transfer_date     DATE,
  transfer_reason   NUMBER,
  transfer_to_agent NUMBER,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  post_flag         VARCHAR2(5),
  posted_date       DATE,
  posted_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_AGENT_COM_TRANSFER_T
  add constraint PK_AM_AGENT_COM_TRANSFER primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_AGENT_CONTR_PROMOTION_T
prompt =========================================
prompt
create table AM_AGENT_CONTR_PROMOTION_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  record_id        NUMBER not null,
  contribution_1   NUMBER,
  contribution_2   NUMBER,
  contribution_3   NUMBER,
  contribution_4   NUMBER,
  contribution_5   NUMBER,
  contribution_6   NUMBER,
  contribution_7   NUMBER,
  contribution_8   NUMBER,
  contribution_9   NUMBER,
  contribution_10  NUMBER,
  contribution_11  NUMBER,
  contribution_12  NUMBER,
  no_of_cases_1    NUMBER,
  no_of_cases_2    NUMBER,
  no_of_cases_3    NUMBER,
  no_of_cases_4    NUMBER,
  no_of_cases_5    NUMBER,
  no_of_cases_6    NUMBER,
  no_of_cases_7    NUMBER,
  no_of_cases_8    NUMBER,
  no_of_cases_9    NUMBER,
  no_of_cases_10   NUMBER,
  no_of_cases_11   NUMBER,
  no_of_cases_12   NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_CONTR_PROMOTION_T
  add constraint PK_AM_AGENT_CONTR_PROMOTION_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_AGENT_DESIGNATION_T
prompt =====================================
prompt
create table AM_AGENT_DESIGNATION_T
(
  org_id                NUMBER not null,
  agent_id              NUMBER not null,
  partner_id            NUMBER not null,
  channel_id            NUMBER not null,
  model_id              NUMBER not null,
  designation_id        NUMBER not null,
  is_salaried           VARCHAR2(1),
  supervisor_id         NUMBER,
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  supervisor_channel_id NUMBER,
  supervisor_model_id   NUMBER,
  supervisor_partner_id NUMBER,
  supervisor_level_id   NUMBER
)
;
alter table AM_AGENT_DESIGNATION_T
  add constraint PK_AM_AGENT_DESIGNATION_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, DESIGNATION_ID);
alter table AM_AGENT_DESIGNATION_T
  add constraint AM_AGENT_DESIGNATION_T_R01 foreign key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID)
  references AM_AGENT_CHANNEL_MODEL_T (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID);

prompt
prompt Creating table AM_AGENT_EDU_HISTORY_T
prompt =====================================
prompt
create table AM_AGENT_EDU_HISTORY_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  education_id     NUMBER not null,
  education_type   VARCHAR2(3),
  degree_name      VARCHAR2(30),
  institution_code VARCHAR2(20),
  passing_year     NUMBER,
  passing_gpa      NUMBER,
  passing_grade    VARCHAR2(3),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_EDU_HISTORY_T
  add constraint PK_AM_AGENT_EDU_HISTORY_T primary key (ORG_ID, AGENT_ID, EDUCATION_ID);

prompt
prompt Creating table AM_AGENT_EMP_HISTORY_T
prompt =====================================
prompt
create table AM_AGENT_EMP_HISTORY_T
(
  org_id            NUMBER not null,
  agent_id          NUMBER not null,
  employment_id     NUMBER not null,
  employer_name     VARCHAR2(50),
  designation       VARCHAR2(20),
  from_date         DATE,
  to_date           DATE,
  is_current        VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  employment_status VARCHAR2(2),
  reason_of_leaving VARCHAR2(500)
)
;
alter table AM_AGENT_EMP_HISTORY_T
  add constraint PK_AM_AGENT_EMP_HISTORY_T primary key (ORG_ID, AGENT_ID, EMPLOYMENT_ID);

prompt
prompt Creating table AM_AGENT_HIERARCHY_CHANGE_T
prompt ==========================================
prompt
create table AM_AGENT_HIERARCHY_CHANGE_T
(
  change_id        NUMBER not null,
  org_id           NUMBER not null,
  agent_id         NUMBER,
  change_date      DATE,
  change_reason    VARCHAR2(250),
  lock_flag        VARCHAR2(5),
  locked_date      DATE,
  locked_by        VARCHAR2(150),
  post_flag        VARCHAR2(5),
  posted_date      DATE,
  posted_by        VARCHAR2(150),
  creation_date    DATE,
  created_by       VARCHAR2(150),
  last_update_date DATE,
  last_updated_by  VARCHAR2(150)
)
;
alter table AM_AGENT_HIERARCHY_CHANGE_T
  add constraint PK_AM_AGENT_HIERARCHY_CHANGE_T primary key (ORG_ID, CHANGE_ID);

prompt
prompt Creating table AM_AGENT_HIERARCHY_REASON_T
prompt ==========================================
prompt
create table AM_AGENT_HIERARCHY_REASON_T
(
  code             NUMBER not null,
  org_id           NUMBER not null,
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_HIERARCHY_REASON_T
  add constraint PK_AM_AGENT_HIERARCHY_REASON_T primary key (ORG_ID, CODE);

prompt
prompt Creating table AM_AGENT_LEVEL_CHANGE_T
prompt ======================================
prompt
create table AM_AGENT_LEVEL_CHANGE_T
(
  level_change_id     NUMBER not null,
  org_id              NUMBER not null,
  agent_id            NUMBER,
  level_change_date   DATE,
  level_change_type   CHAR(1),
  level_change_reason VARCHAR2(250),
  lock_flag           VARCHAR2(5),
  locked_date         DATE,
  locked_by           VARCHAR2(150),
  post_flag           VARCHAR2(5),
  posted_date         DATE,
  posted_by           VARCHAR2(150),
  creation_date       DATE,
  created_by          VARCHAR2(150),
  last_update_date    DATE,
  last_updated_by     VARCHAR2(150)
)
;
alter table AM_AGENT_LEVEL_CHANGE_T
  add constraint PK_AM_AGENT_LEVEL_CHANGE_T primary key (ORG_ID, LEVEL_CHANGE_ID);

prompt
prompt Creating table AM_AGENT_PARTNER_BRANCHES_T
prompt ==========================================
prompt
create table AM_AGENT_PARTNER_BRANCHES_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  partner_id       NUMBER not null,
  branch_id        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_PARTNER_BRANCHES_T
  add constraint PK_AM_AGENT_PARTNER_BRANCHES_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, BRANCH_ID);

prompt
prompt Creating table AM_AGENT_PERSISTENCY_LV1_T
prompt =========================================
prompt
create table AM_AGENT_PERSISTENCY_LV1_T
(
  org_id                       NUMBER not null,
  process_year                 NUMBER not null,
  agent_id                     NUMBER not null,
  persistency_year             NUMBER not null,
  total_count                  NUMBER not null,
  paid_count                   NUMBER not null,
  persistency_percentage       NUMBER not null,
  renewed_contribution         NUMBER,
  due_contribution             NUMBER,
  contribution_pers_percentage NUMBER,
  created_by                   VARCHAR2(50),
  creation_date                DATE
)
;
alter table AM_AGENT_PERSISTENCY_LV1_T
  add constraint PK_AM_AGENT_PERSISTENCY_LV1_T primary key (ORG_ID, PROCESS_YEAR, AGENT_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_AGENT_PERSISTENCY_LV2_T
prompt =========================================
prompt
create table AM_AGENT_PERSISTENCY_LV2_T
(
  org_id                       NUMBER not null,
  process_year                 NUMBER not null,
  partner_id                   NUMBER not null,
  agent_id                     NUMBER not null,
  persistency_year             NUMBER not null,
  total_count                  NUMBER not null,
  paid_count                   NUMBER not null,
  persistency_percentage       NUMBER not null,
  renewed_contribution         NUMBER,
  due_contribution             NUMBER,
  contribution_pers_percentage NUMBER,
  created_by                   VARCHAR2(50),
  creation_date                DATE
)
;
alter table AM_AGENT_PERSISTENCY_LV2_T
  add constraint PK_AM_AGENT_PERSISTENCY_LV2_T primary key (ORG_ID, PROCESS_YEAR, PARTNER_ID, AGENT_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_AGENT_PERSISTENCY_LV3_T
prompt =========================================
prompt
create table AM_AGENT_PERSISTENCY_LV3_T
(
  org_id                       NUMBER not null,
  process_year                 NUMBER not null,
  partner_id                   NUMBER not null,
  channel_id                   NUMBER not null,
  agent_id                     NUMBER not null,
  persistency_year             NUMBER not null,
  total_count                  NUMBER not null,
  paid_count                   NUMBER not null,
  persistency_percentage       NUMBER not null,
  renewed_contribution         NUMBER,
  due_contribution             NUMBER,
  contribution_pers_percentage NUMBER,
  created_by                   VARCHAR2(50),
  creation_date                DATE
)
;
alter table AM_AGENT_PERSISTENCY_LV3_T
  add constraint PK_AM_AGENT_PERSISTENCY_LV3_T primary key (ORG_ID, PROCESS_YEAR, PARTNER_ID, CHANNEL_ID, AGENT_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_AGENT_PERSISTENCY_T
prompt =====================================
prompt
create table AM_AGENT_PERSISTENCY_T
(
  org_id                       NUMBER not null,
  process_year                 NUMBER not null,
  partner_id                   NUMBER not null,
  channel_id                   NUMBER not null,
  model_id                     NUMBER not null,
  agent_id                     NUMBER not null,
  persistency_year             NUMBER not null,
  total_count                  NUMBER not null,
  paid_count                   NUMBER not null,
  persistency_percentage       NUMBER not null,
  created_by                   VARCHAR2(50),
  creation_date                DATE,
  renewed_contribution         NUMBER,
  due_contribution             NUMBER,
  description_other_lang       NVARCHAR2(500),
  contribution_pers_percentage NUMBER
)
;
alter table AM_AGENT_PERSISTENCY_T
  add constraint PK_AM_AGENT_PERSISTENCY_T primary key (ORG_ID, PROCESS_YEAR, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_AGENT_REINSTATE_HEADER_T
prompt ==========================================
prompt
create table AM_AGENT_REINSTATE_HEADER_T
(
  org_id           NUMBER not null,
  reinstate_id     NUMBER not null,
  agent_id         NUMBER,
  reinstate_date   DATE,
  reinstate_reason NUMBER,
  lock_flag        VARCHAR2(5),
  locked_date      DATE,
  locked_by        VARCHAR2(150),
  post_flag        VARCHAR2(5),
  posted_date      DATE,
  posted_by        VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_REINSTATE_HEADER_T
  add constraint PK_AM_AGENT_REINSTATE_HEADER_T primary key (ORG_ID, REINSTATE_ID);

prompt
prompt Creating table AM_AGENT_REINSTATE_REASON_T
prompt ==========================================
prompt
create table AM_AGENT_REINSTATE_REASON_T
(
  code             NUMBER not null,
  org_id           NUMBER not null,
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_REINSTATE_REASON_T
  add constraint PK_AM_REINSTATE_REASON_T primary key (ORG_ID, CODE);

prompt
prompt Creating table AM_AGENT_TERMINATION_T
prompt =====================================
prompt
create table AM_AGENT_TERMINATION_T
(
  termination_id     NUMBER not null,
  org_id             NUMBER not null,
  agent_id           NUMBER,
  termination_type   VARCHAR2(150),
  termination_date   DATE,
  termination_reason NUMBER,
  transfer_to_agent  NUMBER,
  lock_flag          VARCHAR2(5),
  locked_date        DATE,
  locked_by          VARCHAR2(150),
  post_flag          VARCHAR2(5),
  posted_date        DATE,
  posted_by          VARCHAR2(150),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table AM_AGENT_TERMINATION_T
  add constraint PK_AM_AGENT_TERMINATION_T primary key (ORG_ID, TERMINATION_ID);

prompt
prompt Creating table AM_AGENT_TRAINING_T
prompt ==================================
prompt
create table AM_AGENT_TRAINING_T
(
  org_id           NUMBER not null,
  agent_id         NUMBER not null,
  training_id      NUMBER not null,
  training_name    VARCHAR2(250) not null,
  batch_number     VARCHAR2(50),
  venue            VARCHAR2(250),
  from_date        DATE,
  to_date          DATE,
  training_result  VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGENT_TRAINING_T
  add constraint PK_AM_AGENT_TRAINING_T primary key (ORG_ID, AGENT_ID, TRAINING_ID);

prompt
prompt Creating table AM_AGENT_TRANSFER_REASON_T
prompt =========================================
prompt
create table AM_AGENT_TRANSFER_REASON_T
(
  code             NUMBER not null,
  org_id           NUMBER not null,
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  reason_subject   VARCHAR2(300),
  reason_content   VARCHAR2(300)
)
;
alter table AM_AGENT_TRANSFER_REASON_T
  add constraint PK_AM_AGENT_TRANSFER_REASON_T primary key (ORG_ID, CODE);

prompt
prompt Creating table AM_AGENT_TRANSFER_T
prompt ==================================
prompt
create table AM_AGENT_TRANSFER_T
(
  transfer_id       NUMBER not null,
  org_id            NUMBER not null,
  agent_id          NUMBER,
  transfer_type     VARCHAR2(150),
  transfer_date     DATE,
  transfer_reason   NUMBER,
  transfer_to_agent NUMBER,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  post_flag         VARCHAR2(5),
  posted_date       DATE,
  posted_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_AGENT_TRANSFER_T
  add constraint PK_AM_AGENT_TRANSFER_T primary key (ORG_ID, TRANSFER_ID);

prompt
prompt Creating table AM_AGT_HIERARCHY_LOG_T
prompt =====================================
prompt
create table AM_AGT_HIERARCHY_LOG_T
(
  org_id                 NUMBER not null,
  partner_id             NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  record_id              NUMBER not null,
  agent_id               NUMBER not null,
  previous_supervisor_id NUMBER not null,
  new_supervisor_id      NUMBER not null,
  process_description    VARCHAR2(50),
  created_by             VARCHAR2(50),
  creation_date          DATE
)
;
alter table AM_AGT_HIERARCHY_LOG_T
  add constraint PK_AM_AGT_HIERARCHY_LOG_T primary key (ORG_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, RECORD_ID);

prompt
prompt Creating table AM_AGT_L1_PERS_BONUS_T
prompt =====================================
prompt
create table AM_AGT_L1_PERS_BONUS_T
(
  org_id                 NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  policy_id              NUMBER not null,
  persistency_ratio_from NUMBER not null,
  persistency_ratio_to   NUMBER not null,
  persistency_bonus      NUMBER not null,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_AGT_L1_PERS_BONUS_T
  add constraint PK_AM_AGT_L1_PERS_BONUS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, PERSISTENCY_RATIO_FROM, PERSISTENCY_RATIO_TO, PERSISTENCY_BONUS);

prompt
prompt Creating table AM_AGT_L1_PRDCT_BONUS_T
prompt ======================================
prompt
create table AM_AGT_L1_PRDCT_BONUS_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  target_frequency VARCHAR2(1) not null,
  target_amount    NUMBER not null,
  bonus_percentage NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  stipend_type     VARCHAR2(1) not null
)
;
alter table AM_AGT_L1_PRDCT_BONUS_T
  add constraint PK_AM_AGT_L1_PRDCT_BONUS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_AGT_L1_PROD_BONUS_T
prompt =====================================
prompt
create table AM_AGT_L1_PROD_BONUS_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  no_of_cases      NUMBER not null,
  frequency        VARCHAR2(1) not null,
  contribution     NUMBER not null,
  bonus_percentage NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_AGT_L1_PROD_BONUS_T
  add constraint PK_AM_AGT_L1_PROD_BONUS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_AGT_L2_PMT_TARGET_T
prompt =====================================
prompt
create table AM_AGT_L2_PMT_TARGET_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_id    NUMBER not null,
  frequency         VARCHAR2(1) not null,
  contribution      NUMBER not null,
  no_of_consultants NUMBER not null,
  no_of_managers    NUMBER not null,
  bonus_percentage  NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  contribution_2    NUMBER
)
;
alter table AM_AGT_L2_PMT_TARGET_T
  add constraint PK_AM_AGT_L2_PMT_TARGET_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_AGT_L2_PRD_BONUS_T
prompt ====================================
prompt
create table AM_AGT_L2_PRD_BONUS_T
(
  org_id               NUMBER not null,
  channel_id           NUMBER not null,
  model_id             NUMBER not null,
  policy_id            NUMBER not null,
  designation_id       NUMBER not null,
  min_month_asst       NUMBER not null,
  avg_month_business   NUMBER not null,
  min_additional_contr NUMBER not null,
  bonus_percentage     NUMBER not null,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table AM_AGT_L2_PRD_BONUS_T
  add constraint PK_AM_AGT_L2_PRD_BONUS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_PARTNER_T
prompt ===========================
prompt
create table AM_PARTNER_T
(
  org_id                NUMBER not null,
  partner_id            NUMBER not null,
  partner_name          VARCHAR2(100),
  is_partner            VARCHAR2(1),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  bank_code             NUMBER,
  branch_code           NUMBER,
  bank_account          VARCHAR2(50),
  text_seperator        VARCHAR2(1),
  version_no            NUMBER,
  serial_no             NUMBER,
  extra_information     VARCHAR2(200),
  pmd_type              VARCHAR2(50),
  contribution_type     VARCHAR2(50),
  file_prefix           VARCHAR2(25),
  file_extension        VARCHAR2(25),
  suite_analysis_allow  VARCHAR2(1),
  is_bank               VARCHAR2(1),
  logo_attachment       VARCHAR2(500),
  short_code            VARCHAR2(50),
  doc_type              VARCHAR2(1),
  is_header_include     VARCHAR2(1),
  show_suite_score      VARCHAR2(1),
  merge_installment     VARCHAR2(1),
  os_net_off_suspense   VARCHAR2(1),
  is_bank_acc_mandatory VARCHAR2(1),
  agency_code           VARCHAR2(50)
)
;
alter table AM_PARTNER_T
  add constraint PK_AM_PARTNER_T primary key (ORG_ID, PARTNER_ID);

prompt
prompt Creating table AM_PARTNER_GROUP_T
prompt =================================
prompt
create table AM_PARTNER_GROUP_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  partner_group_id NUMBER not null,
  group_name       VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active_flag      VARCHAR2(1)
)
;
alter table AM_PARTNER_GROUP_T
  add constraint PK_AM_PARTNER_GROUP_T primary key (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID);
alter table AM_PARTNER_GROUP_T
  add constraint AM_PARTNER_GROUP_T_FK1 foreign key (ORG_ID, PARTNER_ID)
  references AM_PARTNER_T (ORG_ID, PARTNER_ID);

prompt
prompt Creating table AM_PARTNER_REGION_T
prompt ==================================
prompt
create table AM_PARTNER_REGION_T
(
  org_id              NUMBER not null,
  partner_id          NUMBER not null,
  partner_group_id    NUMBER not null,
  partner_region_id   NUMBER not null,
  partner_region_name VARCHAR2(150),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  active_flag         VARCHAR2(1)
)
;
alter table AM_PARTNER_REGION_T
  add constraint PK_AM_PARTNER_REGION_T primary key (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID);
alter table AM_PARTNER_REGION_T
  add constraint AM_PARTNER_REGION_T_FK1 foreign key (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID)
  references AM_PARTNER_GROUP_T (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID);

prompt
prompt Creating table AM_PARTNER_AREA_T
prompt ================================
prompt
create table AM_PARTNER_AREA_T
(
  org_id            NUMBER not null,
  partner_id        NUMBER not null,
  partner_group_id  NUMBER not null,
  partner_region_id NUMBER not null,
  partner_area_id   NUMBER not null,
  partner_area_name VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  active_flag       VARCHAR2(1)
)
;
alter table AM_PARTNER_AREA_T
  add constraint PK_AM_PARTNER_AREA_T primary key (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID, PARTNER_AREA_ID);
alter table AM_PARTNER_AREA_T
  add constraint AM_PARTNER_AREA_T_FK1 foreign key (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID)
  references AM_PARTNER_REGION_T (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID);

prompt
prompt Creating table AM_PARTNER_BRANCHES_T
prompt ====================================
prompt
create table AM_PARTNER_BRANCHES_T
(
  org_id                NUMBER not null,
  partner_id            NUMBER not null,
  partner_branch_id     NUMBER not null,
  partner_branch_name   VARCHAR2(100),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  org_branch_id         VARCHAR2(50),
  region_id             NUMBER,
  agency_branch_id      NUMBER,
  extra_information     VARCHAR2(200),
  group_id              NUMBER,
  area_id               NUMBER,
  branch_manual_code    VARCHAR2(20),
  banca_branch_category VARCHAR2(30),
  branch_rm_name        VARCHAR2(50),
  branch_rm_code        VARCHAR2(20),
  default_tag           VARCHAR2(1),
  active                VARCHAR2(1)
)
;
alter table AM_PARTNER_BRANCHES_T
  add constraint PK_AM_PARTNER_BRANCHES_T primary key (ORG_ID, PARTNER_ID, PARTNER_BRANCH_ID);
alter table AM_PARTNER_BRANCHES_T
  add constraint AM_PARTNER_BRANCHES_T_FK1 foreign key (ORG_ID, PARTNER_ID)
  references AM_PARTNER_T (ORG_ID, PARTNER_ID);
alter table AM_PARTNER_BRANCHES_T
  add constraint AM_PARTNER_BRANCHES_T_FK2 foreign key (ORG_ID, PARTNER_ID, GROUP_ID)
  references AM_PARTNER_GROUP_T (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID);
alter table AM_PARTNER_BRANCHES_T
  add constraint AM_PARTNER_BRANCHES_T_FK3 foreign key (ORG_ID, PARTNER_ID, GROUP_ID, REGION_ID)
  references AM_PARTNER_REGION_T (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID);
alter table AM_PARTNER_BRANCHES_T
  add constraint AM_PARTNER_BRANCHES_T_FK4 foreign key (ORG_ID, PARTNER_ID, GROUP_ID, REGION_ID, AREA_ID)
  references AM_PARTNER_AREA_T (ORG_ID, PARTNER_ID, PARTNER_GROUP_ID, PARTNER_REGION_ID, PARTNER_AREA_ID);

prompt
prompt Creating table AM_AGT_PRT_BR_ADMIN_MAP_T
prompt ========================================
prompt
create table AM_AGT_PRT_BR_ADMIN_MAP_T
(
  org_id            NUMBER not null,
  partner_id        NUMBER not null,
  username          VARCHAR2(50) not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  partner_branch_id NUMBER not null
)
;
alter table AM_AGT_PRT_BR_ADMIN_MAP_T
  add constraint PK_AGT_BR_MAP primary key (ORG_ID, PARTNER_ID, PARTNER_BRANCH_ID, USERNAME);
alter table AM_AGT_PRT_BR_ADMIN_MAP_T
  add constraint FK_BR_AG_BR_MAP_AG foreign key (ORG_ID, PARTNER_ID, PARTNER_BRANCH_ID)
  references AM_PARTNER_BRANCHES_T (ORG_ID, PARTNER_ID, PARTNER_BRANCH_ID);

prompt
prompt Creating table AM_AGT_VALIDATION_POLICY_T
prompt =========================================
prompt
create table AM_AGT_VALIDATION_POLICY_T
(
  org_id             NUMBER not null,
  policy_id          NUMBER not null,
  channel_id         NUMBER not null,
  model_id           NUMBER not null,
  app_id             NUMBER not null,
  policy_description VARCHAR2(250) not null,
  policy_start_date  DATE,
  policy_end_date    DATE,
  active_tag         CHAR(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table AM_AGT_VALIDATION_POLICY_T
  add constraint PK_AM_AGT_VALIDATION_POLICY_T primary key (ORG_ID, POLICY_ID, CHANNEL_ID, MODEL_ID, APP_ID);

prompt
prompt Creating table AM_CHANNEL_MODEL_T
prompt =================================
prompt
create table AM_CHANNEL_MODEL_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  model_name       VARCHAR2(50),
  model_desc       VARCHAR2(100),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  commission_type  VARCHAR2(1)
)
;
alter table AM_CHANNEL_MODEL_T
  add constraint PK_AM_CHANNEL_MODEL_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID);

prompt
prompt Creating table AM_COMPENSATION_T
prompt ================================
prompt
create table AM_COMPENSATION_T
(
  org_id                     NUMBER not null,
  designation_id             NUMBER not null,
  compensation_id            NUMBER not null,
  salary_type                VARCHAR2(2),
  monthly_stipend            NUMBER,
  sectorial_allowance        NUMBER,
  semi_annual_perf_incentive NUMBER,
  monthly_fuel_limit         NUMBER,
  monthly_mobile_allowance   NUMBER,
  tablet_pc                  NUMBER,
  laptop                     NUMBER,
  car_make_id                NUMBER,
  car_model_id               NUMBER,
  annual_life_insurance      NUMBER,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  vehicl_allowance           NUMBER
)
;
alter table AM_COMPENSATION_T
  add constraint PK_AM_COMPENSATION_T primary key (ORG_ID, DESIGNATION_ID, COMPENSATION_ID);

prompt
prompt Creating table AM_COMPENSATION_TYPE_T
prompt =====================================
prompt
create table AM_COMPENSATION_TYPE_T
(
  org_id                 NUMBER not null,
  compensation_type_id   NUMBER not null,
  compensation_type_name VARCHAR2(250) not null,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_COMPENSATION_TYPE_T
  add constraint PK_AM_COMPENSATION_TYPE_T primary key (ORG_ID, COMPENSATION_TYPE_ID);

prompt
prompt Creating table AM_DESIGNATION_T
prompt ===============================
prompt
create table AM_DESIGNATION_T
(
  org_id            NUMBER not null,
  designation_id    NUMBER not null,
  designation_name  VARCHAR2(5),
  designation_level VARCHAR2(3),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_DESIGNATION_T
  add constraint PK_AM_DESIGNATION_T primary key (ORG_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_DISTRIBUTION_CHANNEL_T
prompt ========================================
prompt
create table AM_DISTRIBUTION_CHANNEL_T
(
  org_id             NUMBER not null,
  channel_id         NUMBER not null,
  channel_name       VARCHAR2(50),
  channel_desc       VARCHAR2(100),
  active             VARCHAR2(2),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  channel_short_code VARCHAR2(10)
)
;
alter table AM_DISTRIBUTION_CHANNEL_T
  add constraint PK_AM_DISTRIBUTION_CHANNEL_T primary key (ORG_ID, CHANNEL_ID);

prompt
prompt Creating table AM_GL_AGENT_PERS_AMT_T
prompt =====================================
prompt
create table AM_GL_AGENT_PERS_AMT_T
(
  org_id              NUMBER not null,
  channel_id          NUMBER not null,
  model_id            NUMBER not null,
  policy_id           NUMBER not null,
  designation_id      NUMBER not null,
  compensation_type   VARCHAR2(1) not null,
  compensation_amount NUMBER not null,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table AM_GL_AGENT_PERS_AMT_T
  add constraint PK_AM_GL_AGENT_PERS_AMT_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID, COMPENSATION_TYPE);

prompt
prompt Creating table AM_GL_AGENT_TRGT_AMT_T
prompt =====================================
prompt
create table AM_GL_AGENT_TRGT_AMT_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  target_amount_1  NUMBER,
  target_amount_2  NUMBER,
  target_amount_3  NUMBER,
  target_amount_4  NUMBER,
  target_amount_5  NUMBER,
  target_amount_6  NUMBER,
  target_amount_7  NUMBER,
  target_amount_8  NUMBER,
  target_amount_9  NUMBER,
  target_amount_10 NUMBER,
  target_amount_11 NUMBER,
  target_amount_12 NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_GL_AGENT_TRGT_AMT_T
  add constraint PK_AM_GL_AGENT_TRGT_AMT_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_GL_AGENT_VALID_T
prompt ==================================
prompt
create table AM_GL_AGENT_VALID_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  freqeuncy        VARCHAR2(1) not null,
  target_type      VARCHAR2(1) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_GL_AGENT_VALID_T
  add constraint PK_AM_GL_AGENT_VALID_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_HIERARCHY_CHANNEL_MODEL_T
prompt ===========================================
prompt
create table AM_HIERARCHY_CHANNEL_MODEL_T
(
  org_id                 NUMBER not null,
  agent_id               NUMBER not null,
  partner_id             NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  previous_supervisor_id NUMBER,
  new_supervisor_id      NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  change_id              NUMBER not null,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_HIERARCHY_CHANNEL_MODEL_T
  add constraint PK_AM_HIERARCHY_CHANNEL_MODEL primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, CHANGE_ID);
alter table AM_HIERARCHY_CHANNEL_MODEL_T
  add foreign key (ORG_ID, CHANGE_ID)
  references AM_AGENT_HIERARCHY_CHANGE_T (ORG_ID, CHANGE_ID);

prompt
prompt Creating table AM_HIERARCHY_TERMINATION_T
prompt =========================================
prompt
create table AM_HIERARCHY_TERMINATION_T
(
  org_id                 NUMBER not null,
  agent_id               NUMBER not null,
  partner_id             NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  previous_supervisor_id NUMBER,
  new_supervisor_id      NUMBER,
  created_by             VARCHAR2(50),
  creation_date          DATE,
  record_id              NUMBER not null
)
;
alter table AM_HIERARCHY_TERMINATION_T
  add constraint PK_AM_HIER_TERMINATION_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, RECORD_ID);

prompt
prompt Creating table AM_HOSPITALIZATION_BENEFIT_T
prompt ===========================================
prompt
create table AM_HOSPITALIZATION_BENEFIT_T
(
  org_id           NUMBER not null,
  designation_id   NUMBER not null,
  h_benefit_id     NUMBER not null,
  relation_type    VARCHAR2(5),
  benefit_amount   NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  benefit_type     VARCHAR2(50)
)
;
alter table AM_HOSPITALIZATION_BENEFIT_T
  add constraint PK_AM_H_BENEFIT_T primary key (ORG_ID, DESIGNATION_ID, H_BENEFIT_ID);

prompt
prompt Creating table AM_KPI_TYPE_T
prompt ============================
prompt
create table AM_KPI_TYPE_T
(
  org_id           NUMBER not null,
  kpi_code         NUMBER not null,
  kpi_description  VARCHAR2(150),
  active_flag      VARCHAR2(1),
  display_order    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_KPI_TYPE_T
  add constraint PK_AM_KPI_TYPE_T primary key (ORG_ID, KPI_CODE);

prompt
prompt Creating table AM_L1_AGT_CONTR_PROMOTION_T
prompt ==========================================
prompt
create table AM_L1_AGT_CONTR_PROMOTION_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_from NUMBER not null,
  designation_to   NUMBER not null,
  durations        NUMBER not null,
  no_of_cases      NUMBER,
  contribution     NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_L1_AGT_CONTR_PROMOTION_T
  add constraint PK_AM_L1_AGT_CONTR_PROMOTION_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_FROM, DESIGNATION_TO, DURATIONS);

prompt
prompt Creating table AM_L1_AGT_CONT_TARGETS_T
prompt =======================================
prompt
create table AM_L1_AGT_CONT_TARGETS_T
(
  org_id                   NUMBER not null,
  channel_id               NUMBER not null,
  model_id                 NUMBER not null,
  policy_id                NUMBER not null,
  record_id                NUMBER not null,
  designation_level        NUMBER not null,
  freqeuncy_mode           CHAR(1) not null,
  no_of_cases              NUMBER,
  contribution             NUMBER,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  contribution_target_type VARCHAR2(100)
)
;
alter table AM_L1_AGT_CONT_TARGETS_T
  add constraint PK_AM_L1_AGT_CONT_TARGETS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_L1_AGT_NEW_JOIN_PERS_T
prompt ========================================
prompt
create table AM_L1_AGT_NEW_JOIN_PERS_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_level NUMBER not null,
  master_record_id  NUMBER not null,
  record_id         NUMBER not null,
  compensation_type NUMBER not null,
  amount            NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_L1_AGT_NEW_JOIN_PERS_T
  add constraint PK_AM_L1_AGT_NEW_JOIN_PERS_T primary key (ORG_ID, CHANNEL_ID, POLICY_ID, DESIGNATION_LEVEL, MASTER_RECORD_ID, RECORD_ID);

prompt
prompt Creating table AM_L1_AGT_PERS_PROMOTION_T
prompt =========================================
prompt
create table AM_L1_AGT_PERS_PROMOTION_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_from NUMBER not null,
  designation_to   NUMBER not null,
  durations        NUMBER not null,
  year_number      NUMBER,
  persistency      NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  record_id        NUMBER not null
)
;
alter table AM_L1_AGT_PERS_PROMOTION_T
  add constraint PK_AM_L1_AGT_PERS_PROMOTION_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_L1_AGT_PERS_TARGETS_T
prompt =======================================
prompt
create table AM_L1_AGT_PERS_TARGETS_T
(
  org_id                 NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  policy_id              NUMBER not null,
  record_id              NUMBER not null,
  designation_level      NUMBER not null,
  year_number            NUMBER not null,
  persistancy_percentage NUMBER(10,2),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_L1_AGT_PERS_TARGETS_T
  add constraint PK_AM_L1_AGT_PERS_TARGETS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_L1_AGT_PROMOTION_MST_T
prompt ========================================
prompt
create table AM_L1_AGT_PROMOTION_MST_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_from NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE
)
;
alter table AM_L1_AGT_PROMOTION_MST_T
  add constraint PK_AM_AGT_PROMOTION_MST_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_FROM);

prompt
prompt Creating table AM_L1_AGT_SALARY_PERS_T
prompt ======================================
prompt
create table AM_L1_AGT_SALARY_PERS_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_level NUMBER not null,
  master_record_id  NUMBER not null,
  record_id         NUMBER not null,
  persistency_from  NUMBER(10,2) not null,
  persistency_to    NUMBER(10,2) not null,
  compensation_type NUMBER not null,
  amount            NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_L1_AGT_SALARY_PERS_T
  add constraint PK_AM_L1_AGT_SALARY_PERS_T primary key (ORG_ID, CHANNEL_ID, POLICY_ID, DESIGNATION_LEVEL, MASTER_RECORD_ID, RECORD_ID);

prompt
prompt Creating table AM_L1_AGT_SALARY_VALID_T
prompt =======================================
prompt
create table AM_L1_AGT_SALARY_VALID_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_level NUMBER not null,
  record_id         NUMBER not null,
  contribution_from NUMBER not null,
  contribution_to   NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_L1_AGT_SALARY_VALID_T
  add constraint PK_AM_L1_AGT_SALARY_VALID_T primary key (ORG_ID, CHANNEL_ID, POLICY_ID, DESIGNATION_LEVEL, RECORD_ID);

prompt
prompt Creating table AM_L2_AGT_PERS_TARGETS_T
prompt =======================================
prompt
create table AM_L2_AGT_PERS_TARGETS_T
(
  org_id                 NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  policy_id              NUMBER not null,
  record_id              NUMBER not null,
  designation_level      NUMBER not null,
  year_number            NUMBER not null,
  persistancy_percentage NUMBER(10,2),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_L2_AGT_PERS_TARGETS_T
  add constraint PK_AM_L2_AGT_PERS_TARGETS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_L2_AGT_PROM_PERS_TARGETS_T
prompt ============================================
prompt
create table AM_L2_AGT_PROM_PERS_TARGETS_T
(
  org_id                 NUMBER not null,
  channel_id             NUMBER not null,
  model_id               NUMBER not null,
  policy_id              NUMBER not null,
  record_id              NUMBER not null,
  designation_id         NUMBER not null,
  designation_id_to      NUMBER not null,
  year_number            NUMBER not null,
  persistancy_percentage NUMBER(10,2),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE
)
;
alter table AM_L2_AGT_PROM_PERS_TARGETS_T
  add constraint PK_AM_L2_AGT_PROM_PERS_TARGETS_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID, DESIGNATION_ID, DESIGNATION_ID_TO);

prompt
prompt Creating table AM_LEVEL_CHANGE_REASON_T
prompt =======================================
prompt
create table AM_LEVEL_CHANGE_REASON_T
(
  code             NUMBER not null,
  org_id           NUMBER not null,
  reason_type      CHAR(1),
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_LEVEL_CHANGE_REASON_T
  add constraint PK_AM_LEVEL_CHANGE_REASON_T primary key (ORG_ID, CODE);

prompt
prompt Creating table AM_LEVEL_CHANNEL_MODEL_T
prompt =======================================
prompt
create table AM_LEVEL_CHANNEL_MODEL_T
(
  org_id            NUMBER not null,
  agent_id          NUMBER not null,
  partner_id        NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  previous_level    NUMBER,
  new_level         NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  level_change_id   NUMBER not null,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  new_supervisor_id NUMBER
)
;
alter table AM_LEVEL_CHANNEL_MODEL_T
  add constraint PK_AM_LEVEL_CHANNEL_MODEL_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, LEVEL_CHANGE_ID);
alter table AM_LEVEL_CHANNEL_MODEL_T
  add foreign key (ORG_ID, LEVEL_CHANGE_ID)
  references AM_AGENT_LEVEL_CHANGE_T (ORG_ID, LEVEL_CHANGE_ID);

prompt
prompt Creating table AM_LV1_PERS_BONUS_DTL_T
prompt ======================================
prompt
create table AM_LV1_PERS_BONUS_DTL_T
(
  org_id               NUMBER not null,
  process_id           NUMBER not null,
  policy_id            NUMBER not null,
  partner_id           NUMBER not null,
  channel_id           NUMBER not null,
  model_id             NUMBER not null,
  designation_id       NUMBER,
  agent_id             NUMBER not null,
  due_plan             NUMBER,
  due_contribution     NUMBER,
  renewed_contribution NUMBER,
  persistency_year_2   NUMBER,
  persistency_year_3   NUMBER,
  bonus_amount         NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  persistency_bonus    NUMBER,
  disp_persistency_2   VARCHAR2(25),
  disp_persistency_3   VARCHAR2(25)
)
;
alter table AM_LV1_PERS_BONUS_DTL_T
  add constraint PK_AM_LV1_PERS_BONUS_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV1_PERS_BONUS_HEADER_T
prompt =========================================
prompt
create table AM_LV1_PERS_BONUS_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  agent_id          NUMBER,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1)
)
;
alter table AM_LV1_PERS_BONUS_HEADER_T
  add constraint PK_AM_LV1_PERS_BONUS_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV1_POSITION_TARGET_DTL_T
prompt ===========================================
prompt
create table AM_LV1_POSITION_TARGET_DTL_T
(
  org_id                            NUMBER not null,
  process_id                        NUMBER not null,
  policy_id                         NUMBER not null,
  partner_id                        NUMBER not null,
  channel_id                        NUMBER not null,
  model_id                          NUMBER not null,
  designation_id                    NUMBER,
  agent_id                          NUMBER not null,
  target_amount                     NUMBER,
  target_plan_count                 NUMBER,
  target_persistency_percentage_2   NUMBER,
  target_persistency_percentage_3   NUMBER,
  achieved_amount                   NUMBER,
  achieved_plan_count               NUMBER,
  achieved_persistency_percentage_2 NUMBER,
  achieved_persistency_percentage_3 NUMBER,
  achieved_plan_count_percentage    NUMBER,
  achieved_amount_percentage        NUMBER,
  created_by                        VARCHAR2(50),
  creation_date                     DATE,
  last_updated_by                   VARCHAR2(50),
  last_update_date                  DATE,
  new_designation_id                NUMBER,
  disp_persistency_3                VARCHAR2(25),
  disp_persistency_2                VARCHAR2(25)
)
;
alter table AM_LV1_POSITION_TARGET_DTL_T
  add constraint PK_AM_LV1_POSITION_TARGET_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV1_POSITION_TGT_HEADER_T
prompt ===========================================
prompt
create table AM_LV1_POSITION_TGT_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  persistency_type  VARCHAR2(1),
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_LV1_POSITION_TGT_HEADER_T
  add constraint PK_AM_LV1_POSITION_TGT_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV1_PRDCT_BONUS_DTL_T
prompt =======================================
prompt
create table AM_LV1_PRDCT_BONUS_DTL_T
(
  org_id             NUMBER not null,
  process_id         NUMBER not null,
  policy_id          NUMBER not null,
  partner_id         NUMBER not null,
  channel_id         NUMBER not null,
  model_id           NUMBER not null,
  designation_id     NUMBER,
  agent_id           NUMBER not null,
  target_amount      NUMBER,
  paid_contribution  NUMBER,
  bonus_percentage   NUMBER,
  bonus_amount       NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  disp_persistency_3 VARCHAR2(25),
  disp_persistency_2 VARCHAR2(25)
)
;
alter table AM_LV1_PRDCT_BONUS_DTL_T
  add constraint PK_AM_LV1_PRDCT_BONUS_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV1_PRDCT_BONUS_HEADER_T
prompt ==========================================
prompt
create table AM_LV1_PRDCT_BONUS_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_LV1_PRDCT_BONUS_HEADER_T
  add constraint PK_AM_LV1_PRDCT_BONUS_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV1_PROD_BONUS_DTL_T
prompt ======================================
prompt
create table AM_LV1_PROD_BONUS_DTL_T
(
  org_id             NUMBER not null,
  process_id         NUMBER not null,
  policy_id          NUMBER not null,
  partner_id         NUMBER not null,
  channel_id         NUMBER not null,
  model_id           NUMBER not null,
  designation_id     NUMBER,
  agent_id           NUMBER not null,
  target_amount      NUMBER,
  plan_count         NUMBER,
  target_plan_count  NUMBER,
  paid_contribution  NUMBER,
  persistency_year_2 NUMBER,
  persistency_year_3 NUMBER,
  bonus_percentage   NUMBER,
  bonus_amount       NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  disp_persistency_3 VARCHAR2(25),
  disp_persistency_2 VARCHAR2(25)
)
;
alter table AM_LV1_PROD_BONUS_DTL_T
  add constraint PK_AM_LV1_PROD_BONUS_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV1_PROD_BONUS_HEADER_T
prompt =========================================
prompt
create table AM_LV1_PROD_BONUS_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  agent_id          NUMBER,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1)
)
;
alter table AM_LV1_PROD_BONUS_HEADER_T
  add constraint PK_AM_LV1_PROD_BONUS_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV1_PROMOTION_TARGET_DTL_T
prompt ============================================
prompt
create table AM_LV1_PROMOTION_TARGET_DTL_T
(
  org_id                            NUMBER not null,
  process_id                        NUMBER not null,
  policy_id                         NUMBER not null,
  partner_id                        NUMBER not null,
  channel_id                        NUMBER not null,
  model_id                          NUMBER not null,
  designation_id                    NUMBER,
  agent_id                          NUMBER not null,
  target_amount                     NUMBER,
  target_plan_count                 NUMBER,
  target_persistency_percentage_2   NUMBER,
  target_persistency_percentage_3   NUMBER,
  achieved_amount                   NUMBER,
  achieved_plan_count               NUMBER,
  achieved_persistency_percentage_2 NUMBER,
  achieved_persistency_percentage_3 NUMBER,
  achieved_plan_count_percentage    NUMBER,
  achieved_amount_percentage        NUMBER,
  created_by                        VARCHAR2(50),
  creation_date                     DATE,
  last_updated_by                   VARCHAR2(50),
  last_update_date                  DATE,
  new_designation_id                NUMBER,
  disp_pers_year_2                  VARCHAR2(50),
  disp_pers_year_3                  VARCHAR2(50)
)
;
alter table AM_LV1_PROMOTION_TARGET_DTL_T
  add constraint PK_AM_LV1_PRM_BONUS_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV1_PROMOTION_TARGET_HEADER_T
prompt ===============================================
prompt
create table AM_LV1_PROMOTION_TARGET_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1)
)
;
alter table AM_LV1_PROMOTION_TARGET_HEADER_T
  add constraint PK_AM_LV1_PRM_TARGET_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV1_SLRY_DETAIL_T
prompt ===================================
prompt
create table AM_LV1_SLRY_DETAIL_T
(
  org_id                  NUMBER not null,
  process_id              NUMBER not null,
  policy_id               NUMBER not null,
  partner_id              NUMBER not null,
  channel_id              NUMBER not null,
  model_id                NUMBER not null,
  agent_id                NUMBER not null,
  designation_level       NUMBER,
  plan_count              NUMBER,
  paid_contribution       NUMBER,
  contribution_percentage NUMBER,
  compensation_type_id    NUMBER not null,
  compensation_amount     NUMBER,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  disp_persistency_2      VARCHAR2(25)
)
;
alter table AM_LV1_SLRY_DETAIL_T
  add constraint PK_LV1_SLRY_DETAIL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID, COMPENSATION_TYPE_ID);

prompt
prompt Creating table AM_LV1_SLRY_HEADER_T
prompt ===================================
prompt
create table AM_LV1_SLRY_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  agent_id          NUMBER,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1),
  fiscal_year       VARCHAR2(50),
  quater            VARCHAR2(10)
)
;
alter table AM_LV1_SLRY_HEADER_T
  add constraint PK_AM_LV1_SLRY_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV2_NHIRED_TARGETS_DTL_T
prompt ==========================================
prompt
create table AM_LV2_NHIRED_TARGETS_DTL_T
(
  org_id                   NUMBER not null,
  channel_id               NUMBER not null,
  model_id                 NUMBER not null,
  policy_id                NUMBER not null,
  designation_id           NUMBER not null,
  target_contribution_q1   NUMBER not null,
  target_contribution_q2   NUMBER not null,
  target_consultant_q1     NUMBER not null,
  target_consultant_q2     NUMBER not null,
  target_manager_q1        NUMBER not null,
  target_manager_q2        NUMBER not null,
  achieved_contribution_q1 NUMBER not null,
  achieved_contribution_q2 NUMBER not null,
  achieved_consultant_q1   NUMBER not null,
  achieved_consultant_q2   NUMBER not null,
  achieved_manager_q1      NUMBER not null,
  achieved_manager_q2      NUMBER not null,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE
)
;
alter table AM_LV2_NHIRED_TARGETS_DTL_T
  add constraint PK_AM_LV2_NHIRED_TARGETS_DTL_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_LV2_NHIRED_TARGETS_HD_T
prompt =========================================
prompt
create table AM_LV2_NHIRED_TARGETS_HD_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_LV2_NHIRED_TARGETS_HD_T
  add constraint PK_AM_LV2_NHIRED_TARGETS_HD_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV2_POSITION_TARGET_DTL_T
prompt ===========================================
prompt
create table AM_LV2_POSITION_TARGET_DTL_T
(
  org_id                           NUMBER not null,
  process_id                       NUMBER not null,
  policy_id                        NUMBER not null,
  partner_id                       NUMBER not null,
  channel_id                       NUMBER not null,
  model_id                         NUMBER not null,
  designation_id                   NUMBER,
  agent_id                         NUMBER not null,
  target_plan                      NUMBER,
  achieved_plan                    NUMBER,
  achieved_plan_percentage         NUMBER,
  achieved_plan_weight             NUMBER,
  achieved_plan_weight_per         NUMBER,
  target_contribution              NUMBER,
  achieved_contribution            NUMBER,
  achieved_contribution_percentage NUMBER,
  achieved_contribution_weight     NUMBER,
  achieved_contribution_weight_per NUMBER,
  target_producers                 NUMBER,
  achieved_producers               NUMBER,
  achieved_producers_percentage    NUMBER,
  achieved_producers_weight        NUMBER,
  achieved_producers_weight_per    NUMBER,
  target_qlf_managers              NUMBER,
  achieved_qlf_managers            NUMBER,
  achieved_qlf_managers_percentage NUMBER,
  achieved_qlf_managers_weight     NUMBER,
  achieved_qlf_managers_weight_per NUMBER,
  target_strength                  NUMBER,
  achieved_strength                NUMBER,
  strength_percentage              NUMBER,
  strength_weight                  NUMBER,
  strength_weight_per              NUMBER,
  created_by                       VARCHAR2(50),
  creation_date                    DATE,
  last_updated_by                  VARCHAR2(50),
  last_update_date                 DATE,
  target_persistency_2             NUMBER,
  target_persistency_3             NUMBER,
  achieved_persistency_2           NUMBER,
  achieved_persistency_3           NUMBER
)
;
alter table AM_LV2_POSITION_TARGET_DTL_T
  add constraint PK_AM_LV2_POSITION_TARGET_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV2_POSITION_TGT_HEADER_T
prompt ===========================================
prompt
create table AM_LV2_POSITION_TGT_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  persistency_type  VARCHAR2(1),
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_LV2_POSITION_TGT_HEADER_T
  add constraint PK_AM_LV2_POSITION_TGT_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV2_PROD_BONUS_DTL_T
prompt ======================================
prompt
create table AM_LV2_PROD_BONUS_DTL_T
(
  org_id               NUMBER not null,
  process_id           NUMBER not null,
  policy_id            NUMBER not null,
  partner_id           NUMBER not null,
  channel_id           NUMBER not null,
  model_id             NUMBER not null,
  designation_id       NUMBER,
  agent_id             NUMBER not null,
  min_additional_contr NUMBER,
  avg_business         NUMBER,
  excess_contribution  NUMBER,
  no_of_month          NUMBER,
  persistency_year_2   NUMBER,
  persistency_year_3   NUMBER,
  bonus_percentage     NUMBER,
  bonus_amount         NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  disp_persistency_2   VARCHAR2(50),
  disp_persistency_3   VARCHAR2(50)
)
;
alter table AM_LV2_PROD_BONUS_DTL_T
  add constraint PK_AM_LV2_PROD_BONUS_DTL primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV2_PROD_BONUS_HEADER_T
prompt =========================================
prompt
create table AM_LV2_PROD_BONUS_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  agent_id          NUMBER,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  persistency_type  VARCHAR2(1),
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table AM_LV2_PROD_BONUS_HEADER_T
  add constraint PK_AM_LV2_PROD_BONUS_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV2_PROMOTION_TARGET_DTL_T
prompt ============================================
prompt
create table AM_LV2_PROMOTION_TARGET_DTL_T
(
  org_id                           NUMBER not null,
  process_id                       NUMBER not null,
  policy_id                        NUMBER not null,
  partner_id                       NUMBER not null,
  channel_id                       NUMBER not null,
  model_id                         NUMBER not null,
  designation_id                   NUMBER,
  designation_id_to                NUMBER,
  agent_id                         NUMBER not null,
  target_plan                      NUMBER,
  achieved_plan                    NUMBER,
  achieved_plan_percentage         NUMBER,
  achieved_plan_weight             NUMBER,
  achieved_plan_weight_per         NUMBER,
  target_contribution              NUMBER,
  achieved_contribution            NUMBER,
  achieved_contribution_percentage NUMBER,
  achieved_contribution_weight     NUMBER,
  achieved_contribution_weight_per NUMBER,
  target_producers                 NUMBER,
  achieved_producers               NUMBER,
  achieved_producers_percentage    NUMBER,
  achieved_producers_weight        NUMBER,
  achieved_producers_weight_per    NUMBER,
  target_qlf_managers              NUMBER,
  achieved_qlf_managers            NUMBER,
  achieved_qlf_managers_percentage NUMBER,
  achieved_qlf_managers_weight     NUMBER,
  achieved_qlf_managers_weight_per NUMBER,
  target_strength                  NUMBER,
  achieved_strength                NUMBER,
  strength_percentage              NUMBER,
  strength_weight                  NUMBER,
  strength_weight_per              NUMBER,
  created_by                       VARCHAR2(50),
  creation_date                    DATE,
  last_updated_by                  VARCHAR2(50),
  last_update_date                 DATE,
  target_persistency_2             NUMBER,
  target_persistency_3             NUMBER,
  achieved_persistency_2           NUMBER,
  achieved_persistency_3           NUMBER
)
;
alter table AM_LV2_PROMOTION_TARGET_DTL_T
  add constraint PK_AM_LV2_PROMOTION_TARGET_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV2_PROMOTION_TARGET_HEADER_T
prompt ===============================================
prompt
create table AM_LV2_PROMOTION_TARGET_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1)
)
;
alter table AM_LV2_PROMOTION_TARGET_HEADER_T
  add constraint PK_AM_LV2_PRM_TARGET_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_LV2_SALARY_VALID_DTL_T
prompt ========================================
prompt
create table AM_LV2_SALARY_VALID_DTL_T
(
  org_id               NUMBER not null,
  process_id           NUMBER not null,
  policy_id            NUMBER not null,
  partner_id           NUMBER not null,
  channel_id           NUMBER not null,
  model_id             NUMBER not null,
  designation_id       NUMBER,
  agent_id             NUMBER not null,
  paid_contribution    NUMBER,
  persistency_impact   NUMBER,
  no_of_producers      NUMBER,
  producer_impact      NUMBER,
  persistency_2nd_year NUMBER,
  gross_salary         NUMBER,
  net_impact           NUMBER,
  net_salary           NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table AM_LV2_SALARY_VALID_DTL_T
  add constraint PK_AM_LV2_SALARY_VALID_DTL_T primary key (ORG_ID, PROCESS_ID, POLICY_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID);

prompt
prompt Creating table AM_LV2_SLRY_HEADER_T
prompt ===================================
prompt
create table AM_LV2_SLRY_HEADER_T
(
  org_id            NUMBER not null,
  process_id        NUMBER not null,
  agent_id          NUMBER,
  partner_id        NUMBER,
  channel_id        NUMBER,
  model_id          NUMBER,
  partner_branch_id NUMBER,
  from_date         DATE,
  to_date           DATE,
  lock_flag         VARCHAR2(5),
  locked_date       DATE,
  locked_by         VARCHAR2(150),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  persistency_type  VARCHAR2(1),
  fiscal_year       VARCHAR2(50),
  quater            VARCHAR2(10)
)
;
alter table AM_LV2_SLRY_HEADER_T
  add constraint PK_AM_LV2_SLRY_HEADER_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_MGR_PROMOTION_DTL_T
prompt =====================================
prompt
create table AM_MGR_PROMOTION_DTL_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_id    NUMBER not null,
  kpi_type          NUMBER not null,
  kpi_weight        NUMBER not null,
  value_1           NUMBER,
  value_2           NUMBER,
  value_3           NUMBER,
  value_4           NUMBER,
  value_5           NUMBER,
  value_6           NUMBER,
  value_7           NUMBER,
  value_8           NUMBER,
  value_9           NUMBER,
  value_10          NUMBER,
  value_11          NUMBER,
  value_12          NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  designation_id_to NUMBER not null
)
;
alter table AM_MGR_PROMOTION_DTL_T
  add constraint PK_AM_MGR_PROMOTION_DTL_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID, DESIGNATION_ID_TO, KPI_TYPE);

prompt
prompt Creating table AM_MGR_PROMOTION_HD_T
prompt ====================================
prompt
create table AM_MGR_PROMOTION_HD_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_id    NUMBER not null,
  target_frequency  VARCHAR2(10) not null,
  target_type       VARCHAR2(10) not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  designation_id_to NUMBER not null
)
;
alter table AM_MGR_PROMOTION_HD_T
  add constraint PK_AM_MGR_PROMOTION_HD_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID, DESIGNATION_ID_TO);

prompt
prompt Creating table AM_MGR_SALARY_DTL_T
prompt ==================================
prompt
create table AM_MGR_SALARY_DTL_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_id    NUMBER not null,
  kpi_weight        NUMBER not null,
  value_1           NUMBER,
  value_2           NUMBER,
  value_3           NUMBER,
  value_4           NUMBER,
  value_5           NUMBER,
  value_6           NUMBER,
  value_7           NUMBER,
  value_8           NUMBER,
  value_9           NUMBER,
  value_10          NUMBER,
  value_11          NUMBER,
  value_12          NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  compensation_type NUMBER not null,
  hd_record_id      NUMBER not null,
  kpi_type          NUMBER not null
)
;
alter table AM_MGR_SALARY_DTL_T
  add constraint PK_AM_MGR_SALARY_DTL_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, HD_RECORD_ID, COMPENSATION_TYPE);

prompt
prompt Creating table AM_MGR_SALARY_HD_T
prompt =================================
prompt
create table AM_MGR_SALARY_HD_T
(
  org_id            NUMBER not null,
  channel_id        NUMBER not null,
  model_id          NUMBER not null,
  policy_id         NUMBER not null,
  designation_id    NUMBER not null,
  target_frequency  VARCHAR2(10) not null,
  target_type       VARCHAR2(10) not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  contribution_from NUMBER,
  contribution_to   NUMBER,
  record_id         NUMBER not null
)
;
alter table AM_MGR_SALARY_HD_T
  add constraint PK_AM_MGR_SALARY_HD_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_MGR_TARGET_DTL_T
prompt ==================================
prompt
create table AM_MGR_TARGET_DTL_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  kpi_type         NUMBER not null,
  kpi_weight       NUMBER not null,
  value_1          NUMBER,
  value_2          NUMBER,
  value_3          NUMBER,
  value_4          NUMBER,
  value_5          NUMBER,
  value_6          NUMBER,
  value_7          NUMBER,
  value_8          NUMBER,
  value_9          NUMBER,
  value_10         NUMBER,
  value_11         NUMBER,
  value_12         NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_MGR_TARGET_DTL_T
  add constraint PK_AM_MGR_TARGET_DTL_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID, KPI_TYPE);

prompt
prompt Creating table AM_MGR_TARGET_HD_T
prompt =================================
prompt
create table AM_MGR_TARGET_HD_T
(
  org_id           NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  designation_id   NUMBER not null,
  target_frequency VARCHAR2(10) not null,
  target_type      VARCHAR2(10) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE
)
;
alter table AM_MGR_TARGET_HD_T
  add constraint PK_AM_MGR_TARGET_HD_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, DESIGNATION_ID);

prompt
prompt Creating table AM_MONTHLY_STIPEND_T
prompt ===================================
prompt
create table AM_MONTHLY_STIPEND_T
(
  org_id             NUMBER not null,
  designation_id     NUMBER not null,
  compensation_id    NUMBER not null,
  stipend_id         NUMBER not null,
  min_premium        NUMBER,
  max_premium        NUMBER,
  monthly_salary     NUMBER,
  additional_benefit NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table AM_MONTHLY_STIPEND_T
  add constraint PK_AM_MONTHLY_STIPEND_T primary key (ORG_ID, DESIGNATION_ID, COMPENSATION_ID, STIPEND_ID);

prompt
prompt Creating table AM_MONXMONT_FORMAT_DTL_T
prompt =======================================
prompt
create table AM_MONXMONT_FORMAT_DTL_T
(
  serial_no        NUMBER,
  org_id           NUMBER,
  partner_id       NUMBER,
  format_type      VARCHAR2(20),
  format_category  VARCHAR2(20),
  expression_value VARCHAR2(200),
  expression_type  VARCHAR2(200),
  display_order    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  prefix           VARCHAR2(200),
  postfix          VARCHAR2(200)
)
;

prompt
prompt Creating table AM_OVERRDING_DOC_DETAIL_T
prompt ========================================
prompt
create table AM_OVERRDING_DOC_DETAIL_T
(
  record_id         NUMBER not null,
  org_id            NUMBER not null,
  branch_id         NUMBER,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  takaful_type      VARCHAR2(1),
  document_type     VARCHAR2(1),
  document_no       VARCHAR2(10),
  record_type       VARCHAR2(1),
  document_year     VARCHAR2(10),
  issue_count       NUMBER,
  application_id    NUMBER,
  endorsement_no    NUMBER,
  created_date      DATE,
  created_by        VARCHAR2(50)
)
;
alter table AM_OVERRDING_DOC_DETAIL_T
  add constraint PK_AM_OVERRDING_DOC_DETAIL_T primary key (ORG_ID, RECORD_ID);

prompt
prompt Creating table AM_PARTNER_BANK_MAP_T
prompt ====================================
prompt
create table AM_PARTNER_BANK_MAP_T
(
  org_id           NUMBER not null,
  bank_id          NUMBER not null,
  partner_id       NUMBER not null,
  active_tag       VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  default_tag      VARCHAR2(1)
)
;
alter table AM_PARTNER_BANK_MAP_T
  add constraint PK_AM_PARTNER_BANK_MAP_T primary key (ORG_ID, PARTNER_ID, BANK_ID);

prompt
prompt Creating table AM_PARTNER_CHANNEL_T
prompt ===================================
prompt
create table AM_PARTNER_CHANNEL_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  channel_id       NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PARTNER_CHANNEL_T
  add constraint PK_AM_PARTNER_CHANNEL_T primary key (ORG_ID, PARTNER_ID, CHANNEL_ID);

prompt
prompt Creating table AM_PARTNER_DOC_STATUS_MAP_T
prompt ==========================================
prompt
create table AM_PARTNER_DOC_STATUS_MAP_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  status_code      NUMBER,
  doc_status_id    NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PARTNER_DOC_STATUS_MAP_T
  add constraint AM_PARTNER_DOC_MAP_T primary key (ORG_ID, PARTNER_ID, DOC_STATUS_ID);

prompt
prompt Creating table AM_PARTNER_POLICY_MAP_T
prompt ======================================
prompt
create table AM_PARTNER_POLICY_MAP_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  policy_id        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PARTNER_POLICY_MAP_T
  add constraint PK_AM_PARTNER_POLICY_MAP_T primary key (ORG_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, POLICY_ID);

prompt
prompt Creating table AM_PARTNER_PRODUCT_MAP_T
prompt =======================================
prompt
create table AM_PARTNER_PRODUCT_MAP_T
(
  org_id           NUMBER not null,
  product_id       NUMBER not null,
  partner_id       NUMBER not null,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PARTNER_PRODUCT_MAP_T
  add constraint PK_AM_PARTNER_PRODUCT_MAP_T primary key (ORG_ID, PARTNER_ID, PRODUCT_ID);

prompt
prompt Creating table AM_PARTNER_REFREE_T
prompt ==================================
prompt
create table AM_PARTNER_REFREE_T
(
  org_id           NUMBER not null,
  partner_id       NUMBER not null,
  emp_id           NUMBER not null,
  emp_name         VARCHAR2(250) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PARTNER_REFREE_T
  add constraint PK_AM_PARTNER_REFREE_T primary key (ORG_ID, PARTNER_ID, EMP_ID);

prompt
prompt Creating table AM_PERSISTANCY_PROCESS_T
prompt =======================================
prompt
create table AM_PERSISTANCY_PROCESS_T
(
  org_id           NUMBER not null,
  process_id       NUMBER not null,
  process_date     DATE not null,
  partner_id       NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  agent_id         NUMBER not null,
  as_at_date       DATE,
  lock_flag        VARCHAR2(5),
  locked_date      DATE,
  locked_by        VARCHAR2(150),
  post_flag        VARCHAR2(5),
  posted_date      DATE,
  posted_by        VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PERSISTANCY_PROCESS_T
  add constraint PK_AM_PERSISTANCY_PROCESS_T primary key (ORG_ID, PROCESS_ID);

prompt
prompt Creating table AM_PERSISTENCY_BONUS_T
prompt =====================================
prompt
create table AM_PERSISTENCY_BONUS_T
(
  org_id           NUMBER not null,
  designation_id   NUMBER not null,
  p_bonus_id       NUMBER not null,
  bonus_type       VARCHAR2(5),
  bonus_from       DATE,
  bonus_to         DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  percentage       NUMBER
)
;
alter table AM_PERSISTENCY_BONUS_T
  add constraint PK_AM_P_BONUS_T primary key (ORG_ID, DESIGNATION_ID, P_BONUS_ID);

prompt
prompt Creating table AM_PERSISTENCY_SLAB_T
prompt ====================================
prompt
create table AM_PERSISTENCY_SLAB_T
(
  org_id           NUMBER not null,
  designation_id   NUMBER not null,
  p_bonus_id       NUMBER not null,
  p_slab_id        NUMBER not null,
  from_percentage  NUMBER,
  to_percentage    NUMBER,
  bonus_percentage NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PERSISTENCY_SLAB_T
  add constraint PK_AM_P_SLAB_T primary key (ORG_ID, DESIGNATION_ID, P_BONUS_ID, P_SLAB_ID);

prompt
prompt Creating table AM_PERSIST_PROCESS_DETAIL_T
prompt ==========================================
prompt
create table AM_PERSIST_PROCESS_DETAIL_T
(
  org_id                       NUMBER not null,
  process_id                   NUMBER not null,
  process_year                 NUMBER not null,
  partner_id                   NUMBER not null,
  channel_id                   NUMBER not null,
  model_id                     NUMBER not null,
  agent_id                     NUMBER not null,
  persistency_year             NUMBER not null,
  total_count                  NUMBER not null,
  paid_count                   NUMBER not null,
  persistency_percentage       NUMBER not null,
  created_by                   VARCHAR2(50),
  creation_date                DATE,
  renewed_contribution         NUMBER,
  due_contribution             NUMBER,
  contribution_pers_percentage NUMBER
)
;
alter table AM_PERSIST_PROCESS_DETAIL_T
  add constraint PK_AM_PERSIST_PROCESS_DETAIL_T primary key (ORG_ID, PROCESS_ID, PROCESS_YEAR, PARTNER_ID, CHANNEL_ID, MODEL_ID, AGENT_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_PERS_DETAIL_T
prompt ===============================
prompt
create table AM_PERS_DETAIL_T
(
  org_id                 NUMBER not null,
  process_id             NUMBER not null,
  process_year           NUMBER not null,
  persistency_year       NUMBER not null,
  total_count            NUMBER not null,
  paid_count             NUMBER not null,
  persistency_percentage NUMBER not null
)
;
alter table AM_PERS_DETAIL_T
  add constraint PK_AM_PERS_DETAIL_T primary key (ORG_ID, PROCESS_ID, PERSISTENCY_YEAR);

prompt
prompt Creating table AM_PRS_SLRY_VALID_IMPACT_T
prompt =========================================
prompt
create table AM_PRS_SLRY_VALID_IMPACT_T
(
  org_id           NUMBER not null,
  policy_id        NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  record_id        NUMBER not null,
  figure_from      NUMBER,
  figure_to        NUMBER,
  impact           NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_PRS_SLRY_VALID_IMPACT_T
  add constraint PK_AM_PRS_SLRY_VALID_IMPACT_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_REGION_SETUP_T
prompt ================================
prompt
create table AM_REGION_SETUP_T
(
  org_id           NUMBER not null,
  region_id        NUMBER not null,
  region_desc      VARCHAR2(20),
  active           VARCHAR2(2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_REGION_SETUP_T
  add constraint PK_AM_REGION_SETUP_T primary key (ORG_ID, REGION_ID);

prompt
prompt Creating table AM_REINSTATE_CHANNEL_MODEL_T
prompt ===========================================
prompt
create table AM_REINSTATE_CHANNEL_MODEL_T
(
  org_id        NUMBER not null,
  agent_id      NUMBER not null,
  partner_id    NUMBER not null,
  channel_id    NUMBER not null,
  model_id      NUMBER not null,
  created_by    VARCHAR2(50),
  creation_date DATE,
  reinstate_id  NUMBER not null
)
;
alter table AM_REINSTATE_CHANNEL_MODEL_T
  add constraint PK_REINSTATE_CHANNEL_MODEL_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, REINSTATE_ID);
alter table AM_REINSTATE_CHANNEL_MODEL_T
  add foreign key (ORG_ID, REINSTATE_ID)
  references AM_AGENT_REINSTATE_HEADER_T (ORG_ID, REINSTATE_ID);

prompt
prompt Creating table AM_SALARY_VALID_IMPACT_T
prompt =======================================
prompt
create table AM_SALARY_VALID_IMPACT_T
(
  org_id           NUMBER not null,
  policy_id        NUMBER not null,
  channel_id       NUMBER not null,
  model_id         NUMBER not null,
  record_id        NUMBER not null,
  number_from      NUMBER,
  number_to        NUMBER,
  impact           NUMBER,
  impact_category  VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  designation_id   NUMBER
)
;
alter table AM_SALARY_VALID_IMPACT_T
  add constraint PK_AM_PERS_IMPACT_T primary key (ORG_ID, CHANNEL_ID, MODEL_ID, POLICY_ID, RECORD_ID);

prompt
prompt Creating table AM_SCORING_CRITERIA_T
prompt ====================================
prompt
create table AM_SCORING_CRITERIA_T
(
  org_id               NUMBER not null,
  designation_id       NUMBER not null,
  scoring_criteria_id  NUMBER not null,
  minimum_criteria     NUMBER,
  maximum_criteria     NUMBER,
  criteria_description VARCHAR2(150),
  criteria_score       NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table AM_SCORING_CRITERIA_T
  add constraint PK_AM_SCORING_CRITERIA_T primary key (ORG_ID, DESIGNATION_ID, SCORING_CRITERIA_ID);

prompt
prompt Creating table AM_TARGET_AND_VALIDATION_T
prompt =========================================
prompt
create table AM_TARGET_AND_VALIDATION_T
(
  org_id              NUMBER not null,
  designation_id      NUMBER not null,
  target_id           NUMBER not null,
  premimum_rs_annual  NUMBER,
  premium_rs_monthly  NUMBER,
  cases_num           NUMBER,
  validation_period   NUMBER,
  grace_period        NUMBER,
  validation_criteria NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table AM_TARGET_AND_VALIDATION_T
  add constraint PK_AM_TARGET_AND_VALIDATION_T primary key (ORG_ID, DESIGNATION_ID, TARGET_ID);

prompt
prompt Creating table AM_TERMINATION_CHANNEL_MODEL_T
prompt =============================================
prompt
create table AM_TERMINATION_CHANNEL_MODEL_T
(
  org_id        NUMBER not null,
  agent_id      NUMBER not null,
  partner_id    NUMBER not null,
  channel_id    NUMBER not null,
  model_id      NUMBER not null,
  created_by    VARCHAR2(50),
  creation_date DATE,
  terminated_id NUMBER not null
)
;
alter table AM_TERMINATION_CHANNEL_MODEL_T
  add constraint PK_TERMINATION_CHANNEL_MODEL_T primary key (ORG_ID, AGENT_ID, PARTNER_ID, CHANNEL_ID, MODEL_ID, TERMINATED_ID);
alter table AM_TERMINATION_CHANNEL_MODEL_T
  add foreign key (ORG_ID, TERMINATED_ID)
  references AM_AGENT_TERMINATION_T (ORG_ID, TERMINATION_ID);

prompt
prompt Creating table AM_TERMINATION_DOC_DETAIL_GL_T
prompt =============================================
prompt
create table AM_TERMINATION_DOC_DETAIL_GL_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  product_code         NUMBER not null,
  sub_product_code     NUMBER not null,
  takaful_type         VARCHAR2(1) not null,
  document_type        VARCHAR2(1) not null,
  document_no          VARCHAR2(10) not null,
  record_type          VARCHAR2(1) not null,
  document_year        VARCHAR2(10) not null,
  issue_count          NUMBER not null,
  endorsement_no       NUMBER not null,
  application_id       NUMBER not null,
  gdh_doc_reference_no VARCHAR2(50),
  master_ref_no        VARCHAR2(500) not null,
  termination_id       NUMBER,
  transfer_to_agent    NUMBER,
  partner_branch_id    NUMBER,
  created_by           VARCHAR2(50),
  creation_date        DATE
)
;
alter table AM_TERMINATION_DOC_DETAIL_GL_T
  add foreign key (ORG_ID, TERMINATION_ID)
  references AM_AGENT_TERMINATION_T (ORG_ID, TERMINATION_ID);

prompt
prompt Creating table AM_TERMINATION_DOC_DETAIL_T
prompt ==========================================
prompt
create table AM_TERMINATION_DOC_DETAIL_T
(
  org_id            NUMBER not null,
  termination_id    NUMBER not null,
  doc_type          VARCHAR2(50),
  doc_ref_no        VARCHAR2(150) not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  transfer_to_agent NUMBER,
  partner_branch_id NUMBER
)
;
alter table AM_TERMINATION_DOC_DETAIL_T
  add constraint PK_AM_TERMINATION_DOC_DETAIL_T primary key (ORG_ID, TERMINATION_ID, DOC_REF_NO);
alter table AM_TERMINATION_DOC_DETAIL_T
  add foreign key (ORG_ID, TERMINATION_ID)
  references AM_AGENT_TERMINATION_T (ORG_ID, TERMINATION_ID);

prompt
prompt Creating table AM_TERMINATION_DOC_HISTORY_T
prompt ===========================================
prompt
create table AM_TERMINATION_DOC_HISTORY_T
(
  org_id              NUMBER not null,
  termination_id      NUMBER not null,
  doc_type            VARCHAR2(50),
  doc_ref_no          VARCHAR2(150) not null,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  transfer_from_agent NUMBER,
  partner_branch_id   NUMBER
)
;
alter table AM_TERMINATION_DOC_HISTORY_T
  add constraint AM_TERMINATION_DOC_MASTER_T primary key (ORG_ID, TERMINATION_ID, DOC_REF_NO);
alter table AM_TERMINATION_DOC_HISTORY_T
  add foreign key (ORG_ID, TERMINATION_ID)
  references AM_AGENT_TERMINATION_T (ORG_ID, TERMINATION_ID);

prompt
prompt Creating table AM_TERMINATION_REASON_T
prompt ======================================
prompt
create table AM_TERMINATION_REASON_T
(
  code             NUMBER not null,
  org_id           NUMBER not null,
  description      VARCHAR2(150),
  active_flag      VARCHAR2(5),
  display_order    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  terminate_type   VARCHAR2(50)
)
;
alter table AM_TERMINATION_REASON_T
  add constraint PK_AM_TERMINATION_REASON_T primary key (ORG_ID, CODE);

prompt
prompt Creating table AM_TRANSFER_DETAIL_GL_T
prompt ======================================
prompt
create table AM_TRANSFER_DETAIL_GL_T
(
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  product_code         NUMBER not null,
  sub_product_code     NUMBER not null,
  takaful_type         VARCHAR2(1) not null,
  document_type        VARCHAR2(1) not null,
  document_no          VARCHAR2(50) not null,
  record_type          VARCHAR2(1) not null,
  document_year        VARCHAR2(10) not null,
  issue_count          NUMBER not null,
  endorsement_no       NUMBER not null,
  application_id       NUMBER not null,
  gdh_doc_reference_no VARCHAR2(50),
  master_ref_no        VARCHAR2(500) not null,
  transfer_id          NUMBER not null,
  transfer_to_agent    NUMBER not null,
  partner_branch_id    NUMBER,
  created_by           VARCHAR2(50) not null,
  creation_date        DATE not null
)
;
alter table AM_TRANSFER_DETAIL_GL_T
  add foreign key (ORG_ID, TRANSFER_ID)
  references AM_AGENT_TRANSFER_T (ORG_ID, TRANSFER_ID);

prompt
prompt Creating table AM_TRANSFER_DOC_DETAIL_T
prompt =======================================
prompt
create table AM_TRANSFER_DOC_DETAIL_T
(
  org_id              NUMBER not null,
  transfer_id         NUMBER not null,
  doc_type            VARCHAR2(50),
  doc_ref_no          VARCHAR2(150) not null,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  transfer_to_agent   NUMBER,
  partner_id          NUMBER,
  channel_id          NUMBER,
  model_id            NUMBER,
  partner_branch_id   NUMBER,
  transfer_from_agent INTEGER
)
;
alter table AM_TRANSFER_DOC_DETAIL_T
  add constraint PK_AM_TRANSFER_DOC_DETAIL_T primary key (ORG_ID, TRANSFER_ID, DOC_REF_NO);
alter table AM_TRANSFER_DOC_DETAIL_T
  add foreign key (ORG_ID, TRANSFER_ID)
  references AM_AGENT_TRANSFER_T (ORG_ID, TRANSFER_ID);

prompt
prompt Creating table AM_TRANSFER_DOC_HISTORY_T
prompt ========================================
prompt
create table AM_TRANSFER_DOC_HISTORY_T
(
  org_id              NUMBER not null,
  transfer_id         NUMBER not null,
  doc_type            VARCHAR2(50),
  doc_ref_no          VARCHAR2(150) not null,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  transfer_from_agent NUMBER,
  partner_id          NUMBER,
  channel_id          NUMBER,
  model_id            NUMBER,
  partner_branch_id   NUMBER
)
;
alter table AM_TRANSFER_DOC_HISTORY_T
  add constraint AM_TRANSFER_DOC_HISTORY_T primary key (ORG_ID, TRANSFER_ID, DOC_REF_NO);

prompt
prompt Creating table AM_VEHICLE_MAKE_T
prompt ================================
prompt
create table AM_VEHICLE_MAKE_T
(
  org_id           NUMBER not null,
  make_id          NUMBER not null,
  make_name        VARCHAR2(40),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_VEHICLE_MAKE_T
  add constraint PK_AM_VEHICLE_MAKE_T primary key (ORG_ID, MAKE_ID);

prompt
prompt Creating table AM_VEHICLE_MODEL_T
prompt =================================
prompt
create table AM_VEHICLE_MODEL_T
(
  org_id           NUMBER not null,
  make_id          NUMBER not null,
  model_id         NUMBER not null,
  model_name       VARCHAR2(40),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table AM_VEHICLE_MODEL_T
  add constraint PK_AM_VEHICLE_MODEL_T primary key (ORG_ID, MAKE_ID, MODEL_ID);

prompt
prompt Creating table ANNOUNCEMENT_MAPPING_T
prompt =====================================
prompt
create table ANNOUNCEMENT_MAPPING_T
(
  org_id           NUMBER not null,
  announcement_id  NUMBER not null,
  grades           VARCHAR2(150),
  positions        VARCHAR2(50),
  locations        VARCHAR2(50),
  payrollids       VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  organizations    VARCHAR2(200),
  application_id   NUMBER
)
;
alter table ANNOUNCEMENT_MAPPING_T
  add constraint PK_ANNOUNCEMENT_MAPPING_T primary key (ORG_ID, ANNOUNCEMENT_ID);

prompt
prompt Creating table ANNOUNCEMENT_T
prompt =============================
prompt
create table ANNOUNCEMENT_T
(
  org_id            NUMBER not null,
  application_id    NUMBER not null,
  announcement_id   NUMBER not null,
  announcement_name VARCHAR2(500),
  description       VARCHAR2(600),
  date_from         DATE,
  date_to           DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  file_path         VARCHAR2(300),
  url               VARCHAR2(500)
)
;
alter table ANNOUNCEMENT_T
  add constraint PK_ANNOUNCEMENT_T primary key (ORG_ID, APPLICATION_ID, ANNOUNCEMENT_ID);

prompt
prompt Creating table AUDIT_LOGS_T
prompt ===========================
prompt
create table AUDIT_LOGS_T
(
  serial_no NUMBER not null,
  tablename VARCHAR2(50),
  userid    VARCHAR2(50),
  log_date  DATE,
  sql_query VARCHAR2(4000)
)
;
alter table AUDIT_LOGS_T
  add constraint PK_AUDIT_LOGS_T primary key (SERIAL_NO);

prompt
prompt Creating table BANK_FORMAT_HD_T
prompt ===============================
prompt
create table BANK_FORMAT_HD_T
(
  serial_no        NUMBER,
  org_id           NUMBER,
  bank_id          NUMBER,
  format_type      VARCHAR2(20),
  format_category  VARCHAR2(20),
  expression_value VARCHAR2(200),
  expression_type  VARCHAR2(200),
  display_order    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  prefix           VARCHAR2(200),
  postfix          VARCHAR2(200)
)
;

prompt
prompt Creating table BANK_RECON_BANK_CHARGES_T
prompt ========================================
prompt
create table BANK_RECON_BANK_CHARGES_T
(
  org_id           NUMBER not null,
  recon_process_id NUMBER not null,
  serial_no        NUMBER not null,
  charged_date     DATE,
  amount           NUMBER,
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table BANK_RECON_BANK_CHARGES_T
  add constraint BANK_RECON_BANK_CHARGES_T_PK primary key (ORG_ID, RECON_PROCESS_ID, SERIAL_NO);

prompt
prompt Creating table BANK_RECON_DTL_T
prompt ===============================
prompt
create table BANK_RECON_DTL_T
(
  org_id             NUMBER not null,
  header_id          NUMBER not null,
  detail_id          NUMBER not null,
  row_description    VARCHAR2(250),
  no_of_rows         NUMBER,
  cr_amount          NUMBER,
  dr_amount          NUMBER,
  closing_amount     NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  transaction_date   DATE,
  voucher_type       VARCHAR2(50),
  voucher_no         NUMBER,
  voucher_date       DATE,
  reconciliation_tag VARCHAR2(1)
)
;
alter table BANK_RECON_DTL_T
  add constraint PK_BANK_RECON_DTL_T primary key (ORG_ID, HEADER_ID, DETAIL_ID);

prompt
prompt Creating table BANK_RECON_HD_T
prompt ==============================
prompt
create table BANK_RECON_HD_T
(
  org_id              NUMBER not null,
  header_id           NUMBER not null,
  bank_code           VARCHAR2(50),
  upload_date         DATE,
  file_name           VARCHAR2(250),
  no_of_rows          NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  total_debit_amount  NUMBER,
  total_credit_amount NUMBER,
  matching_type       VARCHAR2(2),
  payment_type        VARCHAR2(1),
  recon_type          VARCHAR2(1),
  opening_balance     NUMBER,
  branch_code         NUMBER,
  bank_account        VARCHAR2(100),
  coa_code            VARCHAR2(100),
  bank_account_code   VARCHAR2(100)
)
;
alter table BANK_RECON_HD_T
  add constraint PK_BANK_RECON_HD_T primary key (ORG_ID, HEADER_ID);

prompt
prompt Creating table BANK_RECON_VOUCHER_T
prompt ===================================
prompt
create table BANK_RECON_VOUCHER_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER,
  voucher_type      VARCHAR2(10),
  fiscal_year       VARCHAR2(10),
  voucher_no        VARCHAR2(10),
  detail_sr_no      NUMBER,
  serial_no         NUMBER not null,
  detail_id         NUMBER,
  voucher_amount    NUMBER,
  creation_date     DATE,
  created_by        VARCHAR2(50),
  last_updated_by   VARCHAR2(50),
  last_updated_date DATE,
  recon_process_id  NUMBER,
  voucher_date      DATE,
  matching_type     VARCHAR2(2)
)
;
alter table BANK_RECON_VOUCHER_T
  add constraint BANK_RECON_VOUCHER_T_PK primary key (ORG_ID, SERIAL_NO);

prompt
prompt Creating table BANK_STATEMENT_TAG_T
prompt ===================================
prompt
create table BANK_STATEMENT_TAG_T
(
  org_id              NUMBER not null,
  gl_tag_code         NUMBER not null,
  tag_code            NUMBER not null,
  tag_name            VARCHAR2(100) not null,
  gl_nature           VARCHAR2(10) not null,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  cost_center_code    VARCHAR2(50),
  credit_voucher_type VARCHAR2(20),
  debit_voucher_type  VARCHAR2(20)
)
;
alter table BANK_STATEMENT_TAG_T
  add constraint PK_BANK_STATEMENT_TAG_T primary key (ORG_ID, TAG_CODE);

prompt
prompt Creating table BENEFIT_TYPE_T
prompt =============================
prompt
create table BENEFIT_TYPE_T
(
  org_id                  NUMBER not null,
  benefit_type_code       NUMBER not null,
  benefit_type_short_desc VARCHAR2(30),
  benefit_type_title      VARCHAR2(100),
  death_benefit           VARCHAR2(1),
  remarks                 VARCHAR2(200),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  active                  VARCHAR2(1),
  application_id          NUMBER not null,
  calculation_type        NUMBER,
  include_in_tsar         VARCHAR2(1),
  calculation_value       VARCHAR2(500),
  calculation_variable    VARCHAR2(500),
  calculation_type_tsar   VARCHAR2(1)
)
;
create unique index BENEFIT_TYPE_T_INDEX1 on BENEFIT_TYPE_T (ORG_ID, APPLICATION_ID, BENEFIT_TYPE_CODE);
alter table BENEFIT_TYPE_T
  add constraint BENEFIT_TYPE_T_PK primary key (ORG_ID, APPLICATION_ID, BENEFIT_TYPE_CODE);

prompt
prompt Creating table BIRTHDAY_EMAIL_LOG_T
prompt ===================================
prompt
create table BIRTHDAY_EMAIL_LOG_T
(
  org_id          NUMBER not null,
  rec_id          NUMBER not null,
  email_date      DATE,
  status          VARCHAR2(1),
  email_subject   VARCHAR2(250),
  email_body      VARCHAR2(2000),
  email_signature VARCHAR2(300),
  to_email        VARCHAR2(2000),
  bcc_email       VARCHAR2(4000),
  image_name      VARCHAR2(150),
  created_by      VARCHAR2(50),
  creation_date   DATE,
  signature2      VARCHAR2(150),
  email_to_name   VARCHAR2(2000)
)
;
alter table BIRTHDAY_EMAIL_LOG_T
  add constraint PK_BIRTHDAY_EMAIL_LOG_T primary key (ORG_ID, REC_ID);

prompt
prompt Creating table BRANCH_CURRENCY_MAPPING_T
prompt ========================================
prompt
create table BRANCH_CURRENCY_MAPPING_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  currency_code    VARCHAR2(50) not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1),
  default_tag      VARCHAR2(50)
)
;
alter table BRANCH_CURRENCY_MAPPING_T
  add constraint BRANCH_CURRENCY_MAPPING_T_PK primary key (ORG_ID, BRANCH_ID, CURRENCY_CODE);

prompt
prompt Creating table BRANCH_WISE_DISCOUNT_T
prompt =====================================
prompt
create table BRANCH_WISE_DISCOUNT_T
(
  org_id                  NUMBER not null,
  branch_id               VARCHAR2(10) not null,
  product_code            VARCHAR2(10) not null,
  sub_product_code        VARCHAR2(10) not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  branch_code             NUMBER not null,
  special_discount        NUMBER,
  special_discount_amount NUMBER,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE
)
;
alter table BRANCH_WISE_DISCOUNT_T
  add constraint PK_BR_WISE_DISC primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BRANCH_CODE);

prompt
prompt Creating table BULK_KO_HEADER_T
prompt ===============================
prompt
create table BULK_KO_HEADER_T
(
  knockoff_id        NUMBER not null,
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  sl_type            VARCHAR2(50),
  sl_code            VARCHAR2(50),
  knockoff_date      DATE,
  from_date          DATE,
  to_date            DATE,
  filter             VARCHAR2(20),
  multi_bank         VARCHAR2(1),
  bank_code          VARCHAR2(50),
  branch_code        VARCHAR2(50),
  bank_account       VARCHAR2(50),
  instrument_type    VARCHAR2(50),
  instrument_number  VARCHAR2(50),
  instrument_date    DATE,
  instrument_amount  NUMBER,
  voucher_type       VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  post_flag          VARCHAR2(1),
  posted_date        DATE,
  posted_by          VARCHAR2(50),
  drawn_on           VARCHAR2(50),
  endorsement_no     VARCHAR2(300),
  claim_no           VARCHAR2(300),
  channel            VARCHAR2(300),
  agent              VARCHAR2(300),
  employee           VARCHAR2(300),
  location           VARCHAR2(300),
  lob                VARCHAR2(300),
  bu                 VARCHAR2(300),
  policy_year        VARCHAR2(300),
  policy_no          VARCHAR2(50),
  cost_center_code   VARCHAR2(50),
  lock_flag          VARCHAR2(1),
  drawn_on_bank      VARCHAR2(50),
  verified_flag      NVARCHAR2(5),
  verified_by        NVARCHAR2(50),
  verified_date      DATE,
  cancel_flag        VARCHAR2(1),
  cancel_by          VARCHAR2(50),
  cancel_date        DATE,
  reverse_flag       VARCHAR2(2),
  bank_account_code  VARCHAR2(50),
  advice_group       VARCHAR2(20),
  header_description VARCHAR2(150),
  voucher_ref_no     VARCHAR2(50),
  locked_date        DATE,
  instrument_no      VARCHAR2(50),
  locked_by          VARCHAR2(150),
  advice_type        VARCHAR2(25),
  advice_number      VARCHAR2(50),
  batch_number       VARCHAR2(100)
)
;
alter table BULK_KO_HEADER_T
  add constraint BULK_KNOCKOFF_PAYMENT_PK primary key (KNOCKOFF_ID, ORG_ID, BRANCH_ID);

prompt
prompt Creating table GL_SUBLEDGER_ACCOUNTS
prompt ====================================
prompt
create table GL_SUBLEDGER_ACCOUNTS
(
  sl_type          VARCHAR2(10) not null,
  sl_code          VARCHAR2(50) not null,
  sl_desc          VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  org_id           NUMBER not null,
  auto_tag         VARCHAR2(1),
  active           VARCHAR2(1)
)
;
alter table GL_SUBLEDGER_ACCOUNTS
  add constraint GL_SUBLEDGER_ACCOUNTS_PK primary key (ORG_ID, SL_TYPE, SL_CODE);

prompt
prompt Creating table BULK_KO_DETAIL_T
prompt ===============================
prompt
create table BULK_KO_DETAIL_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  knockoff_id         NUMBER not null,
  ko_sr_no            NUMBER not null,
  advice_type         VARCHAR2(10),
  fiscal_year         VARCHAR2(10),
  advice_no           VARCHAR2(10),
  sl_sr_no            NUMBER,
  cost_center_code    VARCHAR2(10),
  coa_code            VARCHAR2(50),
  sl_type             VARCHAR2(10),
  sl_code             VARCHAR2(50),
  sl_description      VARCHAR2(500),
  debit_base_curr     NUMBER,
  credit_base_curr    NUMBER,
  currency_code       VARCHAR2(10),
  exchange_rate       NUMBER,
  debit_foreign_curr  NUMBER,
  credit_foreign_curr NUMBER,
  document_reference  VARCHAR2(500),
  knockoff_amount     NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  ledger_description  VARCHAR2(500),
  policy_year         VARCHAR2(300),
  policy_no           VARCHAR2(300),
  endorsement_no      VARCHAR2(300),
  claim_no            VARCHAR2(300),
  bu                  VARCHAR2(300),
  lob                 VARCHAR2(300),
  location            VARCHAR2(300),
  employee            VARCHAR2(300),
  channel             VARCHAR2(300),
  agent               VARCHAR2(300),
  row_description     VARCHAR2(300),
  tax_flag            VARCHAR2(1),
  tax_code            VARCHAR2(10),
  advice_amount       NUMBER,
  adjusted_amount     NUMBER,
  detail_sr_no        NUMBER,
  error_msg           VARCHAR2(300),
  tax_code1           VARCHAR2(50),
  tax_value1          NUMBER,
  tax_code2           VARCHAR2(50),
  tax_value2          NUMBER,
  tax_code3           VARCHAR2(50),
  tax_value3          NUMBER,
  tax_code4           VARCHAR2(50),
  tax_value4          NUMBER,
  knock_off_amount    NUMBER,
  tax_payer_status    VARCHAR2(100),
  tax_payer_type      VARCHAR2(100),
  all_dimensions      VARCHAR2(300),
  partial_amount      NUMBER,
  validation_flag     CHAR(1),
  advice_group        VARCHAR2(20),
  cnic                VARCHAR2(60),
  payment_mode        VARCHAR2(2),
  advice_payment_type CHAR(1),
  instrument_number   VARCHAR2(50),
  voucher_ref_no      VARCHAR2(150)
)
;
alter table BULK_KO_DETAIL_T
  add constraint PK_BULK_KO_PAYM_DETAIL primary key (ORG_ID, BRANCH_ID, KNOCKOFF_ID, KO_SR_NO);
alter table BULK_KO_DETAIL_T
  add constraint BULK_KO_PMT_DETAIL_T_R01 foreign key (ORG_ID, SL_TYPE, SL_CODE)
  references GL_SUBLEDGER_ACCOUNTS (ORG_ID, SL_TYPE, SL_CODE);
alter table BULK_KO_DETAIL_T
  add constraint FK_BULK_KO_PAYM_HEADER foreign key (KNOCKOFF_ID, ORG_ID, BRANCH_ID)
  references BULK_KO_HEADER_T (KNOCKOFF_ID, ORG_ID, BRANCH_ID);

prompt
prompt Creating table BULK_POSDTL_T
prompt ============================
prompt
create table BULK_POSDTL_T
(
  org_id                                 NUMBER not null,
  bulk_pos_id                            NUMBER not null,
  dtl_sr_no                              NUMBER not null,
  branch_id                              NUMBER not null,
  main_product_code                      NUMBER not null,
  sub_product_code                       NUMBER not null,
  document_no                            VARCHAR2(10),
  document_year                          NUMBER,
  application_id                         NUMBER not null,
  doc_reference_no                       VARCHAR2(50),
  issue_count                            NUMBER not null,
  cnic_no                                VARCHAR2(50),
  name1                                  VARCHAR2(50),
  middle_name1                           VARCHAR2(50),
  last_name1                             VARCHAR2(50),
  dob1                                   DATE,
  age1                                   NUMBER(3),
  mobile_no                              VARCHAR2(20),
  payment_term                           NUMBER,
  policy_term                            NUMBER(3),
  basic_contribution_modal               NUMBER,
  sum_covered_modal                      NUMBER,
  basic_contribution                     NUMBER(15,2),
  comm_date                              DATE,
  total_contribution_modal               NUMBER,
  channel_id                             NUMBER,
  gender1                                VARCHAR2(1),
  model_id                               NUMBER,
  agent_id                               NUMBER,
  partner_id                             NUMBER,
  partner_branch_id                      NUMBER,
  title                                  VARCHAR2(50),
  payment_mode                           VARCHAR2(1),
  cover_multiple                         NUMBER,
  sum_covered_index                      NUMBER(15,2),
  contribution_index                     NUMBER(15,2),
  no_of_persons                          NUMBER,
  taxstatus                              VARCHAR2(5),
  sum_covered                            NUMBER(15,2),
  created_by                             VARCHAR2(50),
  creation_date                          DATE,
  error_remarks                          VARCHAR2(600),
  convert_to_proposal                    VARCHAR2(1),
  master_ref_no                          VARCHAR2(50),
  beneficiary_name                       VARCHAR2(200),
  beneficiary_dob                        DATE,
  beneficiary_relation                   NUMBER(9,6),
  beneficiary_cnic                       VARCHAR2(25),
  beneficiary_percentage                 NUMBER(15,2),
  is_guardian                            VARCHAR2(1),
  guardian_name                          VARCHAR2(50),
  guardian_relation_code                 VARCHAR2(10),
  guardian_dob                           DATE,
  guardian_cnic_no                       VARCHAR2(50),
  assets_bonuses_last_year               NUMBER,
  assets_bonuses_current_year            NUMBER,
  assets_property_last_year              NUMBER,
  assets_annual_current_year             NUMBER,
  assets_inheritance_last_year           NUMBER,
  assets_inheritance_current_year        NUMBER,
  assets_annual_last_year                NUMBER,
  liability_expenses_last_year           NUMBER,
  liability_expenses_current_year        NUMBER,
  assets_property_current_year           NUMBER,
  saving_and_investment                  NUMBER,
  health_insurance                       NUMBER,
  desirable_returns                      NUMBER,
  desirable_pension                      NUMBER,
  life_insurance                         NUMBER,
  desirable_sum_assured                  NUMBER,
  desirable_limit_coverage               NUMBER,
  pension_planning                       NUMBER,
  life_stage_recom                       VARCHAR2(200),
  protection_need_recom                  VARCHAR2(200),
  appetite_for_risk_recom                VARCHAR2(200),
  policy_recommendation                  VARCHAR2(200),
  year_commitment                        VARCHAR2(200),
  risk_elements                          VARCHAR2(200),
  membership_recom                       VARCHAR2(200),
  consultant_name                        VARCHAR2(500),
  consultant_code                        VARCHAR2(500),
  cold_contact                           VARCHAR2(500),
  known_duration                         VARCHAR2(50),
  is_relative                            VARCHAR2(10),
  relation_state                         VARCHAR2(500),
  takaful_purpose                        VARCHAR2(50),
  application_pending                    VARCHAR2(10),
  covered_income                         NUMBER,
  unfavorable_info                       VARCHAR2(10),
  unfavorable_detail                     VARCHAR2(500),
  saving_need                            VARCHAR2(50),
  building_capital                       NUMBER,
  planning_children_wedding              NUMBER,
  planning_children_education            NUMBER,
  retirement_income                      NUMBER,
  financial_security_in_event_of_death   NUMBER,
  financial_security_in_event_of_illness NUMBER,
  investing_capital                      NUMBER,
  saving_needs                           NUMBER,
  liability_loan_last_year               NUMBER,
  liability_loan_current_year            NUMBER,
  illustration_ref_no_key                VARCHAR2(400),
  proposal_no_key                        VARCHAR2(400),
  email_address                          VARCHAR2(100),
  reprocess_tag                          VARCHAR2(1),
  occupation                             VARCHAR2(50),
  annual_salary                          NUMBER,
  employment_class                       VARCHAR2(1),
  type_of_employment                     VARCHAR2(50),
  nature_of_business                     VARCHAR2(50),
  band_code                              VARCHAR2(50),
  average_monthly_income                 NUMBER,
  working_tag                            VARCHAR2(10),
  client_category                        VARCHAR2(10),
  source_of_income                       VARCHAR2(50),
  length_of_service                      NUMBER,
  retirement_age                         NUMBER,
  covered_in_pension_scheme              VARCHAR2(1),
  designation                            VARCHAR2(100),
  employer_detail                        VARCHAR2(1000),
  daily_duties                           VARCHAR2(500),
  comments                               VARCHAR2(2000)
)
;
alter table BULK_POSDTL_T
  add constraint PK_BULK_POSDTL_T primary key (ORG_ID, BULK_POS_ID, DTL_SR_NO);

prompt
prompt Creating table BULK_POSHD_T
prompt ===========================
prompt
create table BULK_POSHD_T
(
  org_id            NUMBER not null,
  bulk_pos_id       NUMBER not null,
  process_date      DATE,
  remarks           VARCHAR2(150),
  created_by        VARCHAR2(150),
  created_at        DATE,
  main_product_code NUMBER,
  sub_product_code  NUMBER,
  is_process        VARCHAR2(1)
)
;
alter table BULK_POSHD_T
  add constraint PK_BULK_POSHD_T primary key (ORG_ID, BULK_POS_ID);

prompt
prompt Creating table BULK_PR_HD_T
prompt ===========================
prompt
create table BULK_PR_HD_T
(
  org_id       NUMBER not null,
  bulk_pr_id   NUMBER not null,
  process_date DATE,
  remarks      VARCHAR2(150),
  created_by   VARCHAR2(150),
  created_at   DATE
)
;
alter table BULK_PR_HD_T
  add constraint PK_BULK_PR_HD_T primary key (ORG_ID, BULK_PR_ID);

prompt
prompt Creating table BUNDLE_SETUP_T
prompt =============================
prompt
create table BUNDLE_SETUP_T
(
  org_id             NUMBER not null,
  app_id             NUMBER not null,
  bundle_id          NUMBER not null,
  bundle_code        NVARCHAR2(50),
  bundle_description NVARCHAR2(500),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table BUNDLE_SETUP_T
  add primary key (ORG_ID, APP_ID, BUNDLE_ID);

prompt
prompt Creating table BUSINESS_UNIT_T
prompt ==============================
prompt
create table BUSINESS_UNIT_T
(
  org_id           NUMBER not null,
  bu_ref           VARCHAR2(30) not null,
  bu_name          VARCHAR2(500),
  active           VARCHAR2(2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table BUSINESS_UNIT_T
  add constraint PK_BU_T primary key (ORG_ID, BU_REF);

prompt
prompt Creating table CHART_OF_ACCOUNT_GL_T
prompt ====================================
prompt
create table CHART_OF_ACCOUNT_GL_T
(
  coa_code         VARCHAR2(20) not null,
  coa_desc         VARCHAR2(250),
  coa_type         VARCHAR2(1),
  coa_nature       VARCHAR2(10),
  coa_sub_nature   VARCHAR2(10),
  coa_level        NUMBER,
  coa_active       VARCHAR2(1),
  created_by       VARCHAR2(20),
  creation_date    TIMESTAMP(6),
  last_updated_by  VARCHAR2(100),
  last_update_date TIMESTAMP(6),
  vertical_parent  VARCHAR2(20),
  org_id           NUMBER not null,
  sl_mandatory_tag VARCHAR2(1),
  auto_tag         VARCHAR2(1),
  knockoff_tag     VARCHAR2(1)
)
;
alter table CHART_OF_ACCOUNT_GL_T
  add constraint PK_GL_COA primary key (COA_CODE, ORG_ID);

prompt
prompt Creating table CHECKLIST_ANSWERS_T
prompt ==================================
prompt
create table CHECKLIST_ANSWERS_T
(
  org_id           NUMBER not null,
  checklist_key    VARCHAR2(100) not null,
  question_id      VARCHAR2(20) not null,
  answer           VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    TIMESTAMP(6),
  last_updated_by  VARCHAR2(50),
  last_update_date TIMESTAMP(6),
  remarks          VARCHAR2(500)
)
;
alter table CHECKLIST_ANSWERS_T
  add primary key (ORG_ID, CHECKLIST_KEY, QUESTION_ID);
alter table CHECKLIST_ANSWERS_T
  add foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table CLAIM_CANCE_REASONS_SETUP_T
prompt ==========================================
prompt
create table CLAIM_CANCE_REASONS_SETUP_T
(
  claim_cancellation_code NUMBER not null,
  org_id                  NUMBER not null,
  short_name              VARCHAR2(20),
  title                   VARCHAR2(100),
  description             VARCHAR2(300),
  display_order           VARCHAR2(10),
  active                  VARCHAR2(1),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE
)
;
alter table CLAIM_CANCE_REASONS_SETUP_T
  add constraint PK_CLAIM_CANCE_REASONS_SETUP_T primary key (CLAIM_CANCELLATION_CODE, ORG_ID);

prompt
prompt Creating table CLAIM_DECLINE_REASONS_SETUP_T
prompt ============================================
prompt
create table CLAIM_DECLINE_REASONS_SETUP_T
(
  org_id             NUMBER not null,
  claim_decline_code VARCHAR2(10) not null,
  short_name         VARCHAR2(30),
  title              VARCHAR2(30),
  description        VARCHAR2(1000),
  display_order      NUMBER,
  active             VARCHAR2(2),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table CLAIM_DECLINE_REASONS_SETUP_T
  add constraint PK_TK_CLAIM_DECLINE_T primary key (ORG_ID, CLAIM_DECLINE_CODE);

prompt
prompt Creating table CLAIM_EVENT_MATRIX_MAPPING_T
prompt ===========================================
prompt
create table CLAIM_EVENT_MATRIX_MAPPING_T
(
  org_id           NUMBER not null,
  event_id         NUMBER not null,
  matrix_id        VARCHAR2(100) not null,
  execution_order  VARCHAR2(1),
  death_tag        VARCHAR2(1),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  annuity_tag      VARCHAR2(1),
  application_id   NUMBER not null
)
;
alter table CLAIM_EVENT_MATRIX_MAPPING_T
  add constraint PK_EVENT_MATRIX_MAPPING_T primary key (ORG_ID, EVENT_ID, MATRIX_ID, APPLICATION_ID);

prompt
prompt Creating table CLAIM_REGISTRATION_T
prompt ===================================
prompt
create table CLAIM_REGISTRATION_T
(
  org_id                   VARCHAR2(10) not null,
  branch_id                VARCHAR2(10) not null,
  sub_product_code         VARCHAR2(10) not null,
  claim_no                 VARCHAR2(10) not null,
  claim_registration_no    VARCHAR2(50),
  reported_by              VARCHAR2(50),
  policy_holder            VARCHAR2(50),
  reporting_date           DATE,
  event_date               DATE,
  insured_name_reported    VARCHAR2(50),
  policy_no                VARCHAR2(50),
  loss_type                NUMBER,
  insured_id               NUMBER,
  loss_nature              VARCHAR2(20),
  cause_of_loss            NUMBER,
  remarks                  VARCHAR2(4000),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  initial_claim_amount     NUMBER,
  is_transferred           VARCHAR2(1),
  claim_intimation_nm      VARCHAR2(50),
  reported_mob_nm          VARCHAR2(15),
  reported_cnic            VARCHAR2(200),
  reported_email           VARCHAR2(200),
  reported_relation        VARCHAR2(200),
  application_id           NUMBER not null,
  endorsement_no           NUMBER,
  event_place              VARCHAR2(200),
  admission_date           DATE,
  discharge_date           DATE,
  issue_date               DATE,
  last_active_at_work_date DATE,
  last_salary_paid_date    DATE,
  intimation_source        VARCHAR2(20),
  fax_no                   VARCHAR2(100),
  total_days               NUMBER,
  event_country            VARCHAR2(5),
  event_state              VARCHAR2(7),
  proximate_cause          VARCHAR2(150),
  district                 VARCHAR2(150),
  cause_detail             VARCHAR2(100),
  claim_detail_no          VARCHAR2(16),
  item_cnic_no             VARCHAR2(30),
  claim_year               VARCHAR2(4) not null,
  employee_id              NUMBER,
  hospital_type            VARCHAR2(10),
  panel_hospital           VARCHAR2(50),
  non_panel_hospital       VARCHAR2(200),
  reporting_time           VARCHAR2(15),
  claim_payment_type       VARCHAR2(20),
  issue_count              NUMBER,
  cancel_tag               VARCHAR2(1),
  cancel_by                VARCHAR2(50),
  cancel_date              DATE,
  posting_by               VARCHAR2(50),
  posting_tag              VARCHAR2(1),
  posting_date             DATE,
  process_by               VARCHAR2(50),
  process_tag              VARCHAR2(1),
  process_date             DATE,
  hr_claim                 VARCHAR2(1),
  approve_tag              VARCHAR2(1),
  reject_tag               VARCHAR2(1),
  rejection_reason         NUMBER
)
;
alter table CLAIM_REGISTRATION_T
  add constraint PK_GL_CLAIM_REGISTRATION_T primary key (ORG_ID, BRANCH_ID, SUB_PRODUCT_CODE, CLAIM_NO, APPLICATION_ID, CLAIM_YEAR);

prompt
prompt Creating table CLAIM_REOPEN_REASON_SETUP_T
prompt ==========================================
prompt
create table CLAIM_REOPEN_REASON_SETUP_T
(
  claim_reopen_code NUMBER not null,
  org_id            NUMBER not null,
  short_name        VARCHAR2(20),
  title             VARCHAR2(100),
  description       VARCHAR2(300),
  display_order     VARCHAR2(10),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table CLAIM_REOPEN_REASON_SETUP_T
  add constraint PK_CLAIM_REOPEN_REASON_SETUP_T primary key (CLAIM_REOPEN_CODE, ORG_ID);

prompt
prompt Creating table CLAIM_REPORTING_CHANNEL_T
prompt ========================================
prompt
create table CLAIM_REPORTING_CHANNEL_T
(
  claim_rc_code    NUMBER not null,
  org_id           NUMBER not null,
  short_name       VARCHAR2(20),
  title            VARCHAR2(100),
  remarks          VARCHAR2(300),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table CLAIM_REPORTING_CHANNEL_T
  add constraint PK_CLAIM_REPORTING_CHANNEL_T primary key (CLAIM_RC_CODE, ORG_ID);

prompt
prompt Creating table CLAIM_RETAKAFUL_T
prompt ================================
prompt
create table CLAIM_RETAKAFUL_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  sub_product_code NUMBER not null,
  claim_no         VARCHAR2(10) not null,
  benefit_code     NUMBER not null,
  application_id   NUMBER not null,
  treaty_code      NUMBER not null,
  retakaful_code   NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  claim_year       VARCHAR2(4) not null,
  ri_share         NUMBER,
  ri_claim_amount  NUMBER
)
;
alter table CLAIM_RETAKAFUL_T
  add constraint PK_CLAIM_RETAK_T primary key (ORG_ID, BRANCH_ID, SUB_PRODUCT_CODE, CLAIM_NO, BENEFIT_CODE, APPLICATION_ID, TREATY_CODE, RETAKAFUL_CODE, CLAIM_YEAR);

prompt
prompt Creating table CLIENT_DIRECTOR_SETUP_T
prompt ======================================
prompt
create table CLIENT_DIRECTOR_SETUP_T
(
  org_id              NUMBER not null,
  client_code         NUMBER not null,
  director_id         NUMBER not null,
  director_name       VARCHAR2(50),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  gender              VARCHAR2(1),
  country_code        VARCHAR2(20),
  director_cnic       NUMBER,
  director_dob        DATE,
  director_age        NUMBER,
  designation_code    NUMBER,
  address             VARCHAR2(100),
  city_code           VARCHAR2(10),
  state_code          VARCHAR2(10),
  aml_screening       VARCHAR2(1),
  cnic_issue_date     DATE,
  cnic_expiry_date    DATE,
  file_path           VARCHAR2(500),
  father_husband_name VARCHAR2(100)
)
;
alter table CLIENT_DIRECTOR_SETUP_T
  add constraint PK_CLIENT_DIRECTOR_SETUP primary key (ORG_ID, DIRECTOR_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_INCOME_BAND_T
prompt =================================
prompt
create table GLAS_INCOME_BAND_T
(
  org_id           NUMBER not null,
  band_code        NUMBER not null,
  band_desc        VARCHAR2(50),
  min_income       NUMBER,
  max_income       NUMBER,
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_INCOME_BAND_T
  add constraint PK_INC_BAND primary key (ORG_ID, BAND_CODE);
alter table GLAS_INCOME_BAND_T
  add constraint FK_INC_BAND_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_CLIENT_SETUP_T
prompt ==================================
prompt
create table GLAS_CLIENT_SETUP_T
(
  org_id                     NUMBER not null,
  client_code                NUMBER not null,
  client_desc                VARCHAR2(500),
  client_short_desc          VARCHAR2(250),
  address                    VARCHAR2(200),
  email                      VARCHAR2(500),
  phone                      VARCHAR2(15),
  active                     VARCHAR2(1),
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  client_type                VARCHAR2(10),
  age                        NUMBER(3),
  dob                        DATE,
  height                     NUMBER,
  weight                     NUMBER,
  bmi                        NUMBER,
  occupation                 NUMBER,
  vat_reg_no                 VARCHAR2(50),
  vat_reg_date               DATE,
  nature_of_business         VARCHAR2(10),
  name_in_arabic             NVARCHAR2(500),
  contact_person_name        VARCHAR2(500),
  contact_person_no          VARCHAR2(50),
  contact_person_designation VARCHAR2(200),
  group_code                 VARCHAR2(10),
  height_scale               VARCHAR2(10),
  weight_scale               VARCHAR2(10),
  title                      VARCHAR2(10),
  client_nature              VARCHAR2(10),
  band_code                  NUMBER,
  client_category            VARCHAR2(10),
  cnic_no                    VARCHAR2(50),
  cnic_issue_date            DATE,
  cnic_expiry_date           DATE,
  father_name                VARCHAR2(50),
  maiden_name                VARCHAR2(50),
  marital_status             VARCHAR2(10),
  place_of_birth             VARCHAR2(50),
  passport_no                VARCHAR2(50),
  no_of_dependents           NUMBER,
  nationality_code           VARCHAR2(10),
  religion_code              NUMBER,
  working_tag                VARCHAR2(1),
  first_name                 VARCHAR2(50),
  middle_name                VARCHAR2(50),
  last_name                  VARCHAR2(50),
  annual_salary              NUMBER,
  total_sar                  NUMBER,
  referral_source            NUMBER,
  referral_other             VARCHAR2(10),
  gender                     VARCHAR2(10),
  nrp_tag                    VARCHAR2(1),
  communication_channel      VARCHAR2(10),
  father_cnic_no             VARCHAR2(50),
  father_cnic_issue_date     DATE,
  father_cnic_expiry_date    DATE,
  spouse_cnic_no             VARCHAR2(50),
  spouse_cnic_issue_date     DATE,
  spouse_cnic_expiry_date    DATE,
  category_code              VARCHAR2(10),
  source_of_income           NUMBER,
  credit_limit               NUMBER,
  credit_limit_days          NUMBER,
  credit_limit_tag           VARCHAR2(1),
  residencey                 VARCHAR2(50),
  uscitizen                  VARCHAR2(50),
  taxstatus                  VARCHAR2(50),
  entry_type                 VARCHAR2(10),
  mapped_username            VARCHAR2(200),
  action_type                VARCHAR2(200),
  action_detail              VARCHAR2(500),
  aml_type                   VARCHAR2(2)
)
;
alter table GLAS_CLIENT_SETUP_T
  add constraint PK_CLIENT_SETUP_T primary key (ORG_ID, CLIENT_CODE);
alter table GLAS_CLIENT_SETUP_T
  add constraint FK_CLIENT_INC_BAND foreign key (ORG_ID, BAND_CODE)
  references GLAS_INCOME_BAND_T (ORG_ID, BAND_CODE);
alter table GLAS_CLIENT_SETUP_T
  add constraint FK_CLIENT_SETUP_T_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table CLIENT_SETUP_ANNEXURE01_T
prompt ========================================
prompt
create table CLIENT_SETUP_ANNEXURE01_T
(
  annexure_sno        NUMBER not null,
  org_id              NUMBER not null,
  client_code         NUMBER not null,
  fullname            VARCHAR2(50),
  birthdate           DATE,
  occupation          VARCHAR2(50),
  currentresidence    VARCHAR2(50),
  currentcountry      VARCHAR2(50),
  residencytype       VARCHAR2(20),
  stay                VARCHAR2(20),
  visithome           VARCHAR2(50),
  returndate          DATE,
  homeplan            VARCHAR2(50),
  estatedetails       VARCHAR2(50),
  bankaccounts        VARCHAR2(50),
  settle_plan         VARCHAR2(20),
  country_nationality VARCHAR2(20),
  stayduration        VARCHAR2(50),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  family_lived        VARCHAR2(50)
)
;
alter table CLIENT_SETUP_ANNEXURE01_T
  add constraint PK_CLIENT_SETUP_ANNEXURE01_T primary key (ORG_ID, ANNEXURE_SNO, CLIENT_CODE);
alter table CLIENT_SETUP_ANNEXURE01_T
  add constraint FK_CLIENT_SETUP_ANNEXURE01_T foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table IL_DOC_STATUS_SETUP_T
prompt ====================================
prompt
create table IL_DOC_STATUS_SETUP_T
(
  org_id              NUMBER not null,
  status_code         NUMBER not null,
  status_desc         VARCHAR2(50),
  active              VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  manual_code         NUMBER,
  monthly_process_tag VARCHAR2(1),
  status_desc_print   VARCHAR2(50),
  min_residual_value  NUMBER,
  top_up_tag          VARCHAR2(1),
  claim_tag           VARCHAR2(5),
  report_path         VARCHAR2(500),
  group_code          NUMBER,
  category_code       NUMBER,
  event_code          NUMBER,
  is_inforce_status   VARCHAR2(1),
  persistency_flag    VARCHAR2(1),
  surplus_tag         VARCHAR2(1),
  valid_for_cnic_exp  VARCHAR2(1)
)
;
alter table IL_DOC_STATUS_SETUP_T
  add constraint PK_IL_DOC_STATUS primary key (ORG_ID, STATUS_CODE);
alter table IL_DOC_STATUS_SETUP_T
  add constraint FK_IL_DOC_STATUS_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TK_COST_CENTER_SETUP_T
prompt =====================================
prompt
create table TK_COST_CENTER_SETUP_T
(
  org_id                  NUMBER not null,
  cost_center_code        VARCHAR2(10) not null,
  cost_center_description VARCHAR2(200),
  auto_tag                VARCHAR2(1),
  active                  VARCHAR2(1),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE
)
;
alter table TK_COST_CENTER_SETUP_T
  add constraint TK_COST_CENTER_SETUP_T_PK primary key (ORG_ID, COST_CENTER_CODE);

prompt
prompt Creating table GLAS_SUB_PRODUCT_SETUP_T
prompt =======================================
prompt
create table GLAS_SUB_PRODUCT_SETUP_T
(
  org_id                       NUMBER not null,
  main_product_code            NUMBER not null,
  sub_product_code             NUMBER not null,
  description                  VARCHAR2(200),
  short_desc                   VARCHAR2(50),
  nature_code                  NUMBER,
  reinsurer_code               NUMBER,
  reinsurer_type               NUMBER,
  reinsurer_sub_code           NUMBER,
  reinsurer_effective_date     DATE,
  start_sq_policy              NUMBER,
  start_sq_claim               NUMBER,
  created_by                   VARCHAR2(50),
  creation_date                DATE,
  last_updated_by              VARCHAR2(50),
  last_update_date             DATE,
  active                       VARCHAR2(1),
  sum_covered_index            NUMBER(15,2),
  contribution_index           NUMBER(15,2),
  cont_margin                  NUMBER(9,6),
  last_age_index               NUMBER(3),
  waqala_fee                   NUMBER(15,2),
  expected_claim               NUMBER(15,2),
  wakala_fees                  NUMBER(15,2),
  application_id               NUMBER,
  min_premium                  NUMBER,
  min_no_of_insured            NUMBER,
  default_commission_rate      NUMBER,
  starting_sequence_no         NUMBER,
  default_renewal_days         NUMBER,
  cost_center_code             VARCHAR2(50),
  profit_center_code           VARCHAR2(50),
  policy_cancellation          VARCHAR2(1),
  age_basis                    VARCHAR2(20),
  investment_income            NUMBER,
  max_maturity_age             NUMBER,
  beneficiary_tag              VARCHAR2(1),
  rate_rounding                NUMBER,
  calculation_age_type         VARCHAR2(1),
  product_type_il              NUMBER,
  min_contribution             NUMBER,
  bid_offer                    NUMBER,
  cbc_tag                      VARCHAR2(1),
  treaty_type                  VARCHAR2(10),
  treaty_code                  NUMBER,
  treaty_detail_code           NUMBER,
  contribution_type_il         NUMBER,
  ptf_rate                     NUMBER,
  pia_rate                     NUMBER,
  allocation_notes             VARCHAR2(500),
  allow_reverse_calc           VARCHAR2(20),
  offer_spread_rate            NUMBER,
  validity_days                NUMBER,
  topup_allocation             NUMBER,
  pay_term                     VARCHAR2(5),
  max_contribution_adhoc       NUMBER,
  min_contribution_adhoc       NUMBER,
  auto_calculation_tag         VARCHAR2(10),
  max_partial_surrender        NUMBER,
  min_residual_value           NUMBER,
  other_lang_desc              NVARCHAR2(200),
  welcome_text                 VARCHAR2(2000),
  welcome_text_other_lang      NVARCHAR2(2000),
  anf_months_after_comm        NUMBER,
  anf_valid_months             NUMBER,
  non_payment_status           NUMBER,
  lapse_reinstate_years        NUMBER,
  surrender_processing_fee     NUMBER,
  indexation_on                VARCHAR2(1),
  fund_switch_charges          NUMBER,
  days_renew_intimation_before NUMBER,
  days_renew_intimation_after  NUMBER,
  lapse_charges_months         NUMBER,
  duplicate_pmd_charges        NUMBER,
  credit_shield                VARCHAR2(1),
  zakat_refund_days            NUMBER,
  auto_renewal_topup_tag       CHAR(1),
  lapse_days_no                NUMBER,
  fund_required                VARCHAR2(1),
  flp_days                     NUMBER,
  input_basis                  VARCHAR2(1),
  illustration_details_bases   VARCHAR2(10),
  auto_underwriting_tag        VARCHAR2(1),
  discounting_factor           NUMBER,
  second_life                  VARCHAR2(1),
  product_category             NUMBER,
  tabarru_calc_type            VARCHAR2(3),
  bid_offer_price_same         VARCHAR2(1),
  need_analysis_reqd           VARCHAR2(1),
  bundle_at_issue              NUMBER,
  duplicate_bundle             NUMBER,
  expected_comm_days           NUMBER,
  score_from                   NUMBER,
  score_to                     NUMBER,
  cnic_expiry_days             NUMBER,
  otp_mandatory                VARCHAR2(1),
  claim_lag_days               NUMBER
)
;
alter table GLAS_SUB_PRODUCT_SETUP_T
  add constraint PK_SUB_PR_SETUP primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);
alter table GLAS_SUB_PRODUCT_SETUP_T
  add constraint FK_DOC_STATUS_ANF_PROD foreign key (ORG_ID, NON_PAYMENT_STATUS)
  references IL_DOC_STATUS_SETUP_T (ORG_ID, STATUS_CODE);
alter table GLAS_SUB_PRODUCT_SETUP_T
  add constraint FK_PROD_CC foreign key (ORG_ID, COST_CENTER_CODE)
  references TK_COST_CENTER_SETUP_T (ORG_ID, COST_CENTER_CODE);
alter table GLAS_SUB_PRODUCT_SETUP_T
  add constraint FK_SUB_PR_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table TK_DOC_HEADER_T
prompt ==============================
prompt
create table TK_DOC_HEADER_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  product_code                NUMBER not null,
  sub_product_code            NUMBER not null,
  takaful_type                VARCHAR2(1) not null,
  document_type               VARCHAR2(1) not null,
  document_no                 VARCHAR2(10) not null,
  record_type                 VARCHAR2(1) not null,
  document_year               VARCHAR2(10) not null,
  issue_count                 NUMBER not null,
  endorsement_no              NUMBER not null,
  application_id              NUMBER not null,
  gdh_doc_reference_no        VARCHAR2(50),
  pps_party_code              NUMBER,
  pps_folio_code              VARCHAR2(20),
  gdh_issue_date              DATE,
  gdh_comm_date               DATE,
  gdh_expiry_date             DATE,
  gdh_sum_insured             NUMBER(15,2),
  gdh_gross_premium           NUMBER(15,2),
  gdh_net_premium             NUMBER(15,2),
  gdh_policycharges           NUMBER(15,2),
  creation_date               DATE,
  created_by                  VARCHAR2(50),
  last_update_date            DATE,
  last_updated_by             VARCHAR2(50),
  remarks                     VARCHAR2(500),
  member_id_type              VARCHAR2(10),
  premium_basis               VARCHAR2(3),
  producer_code               NUMBER,
  currency_code               VARCHAR2(10),
  payment_mode                VARCHAR2(10),
  payer_type                  VARCHAR2(10),
  rate_based_on               VARCHAR2(10),
  data_type                   VARCHAR2(10),
  member_id_label             VARCHAR2(100),
  wakala_fee                  NUMBER(15,2),
  loading_ovrd_rate           NUMBER(9,6),
  loading_rate                NUMBER(9,6),
  policy_fee                  NUMBER(15,2),
  overriding_rate             NUMBER(9,6),
  exchange_rate               NUMBER(9,6),
  next_due_date               DATE,
  quotation_date              DATE,
  sub_document_no             NUMBER,
  standard_treaty             VARCHAR2(10),
  post_date                   DATE,
  posting_tag                 VARCHAR2(1),
  post_user                   VARCHAR2(50),
  name1                       VARCHAR2(50),
  name2                       VARCHAR2(50),
  dob1                        DATE,
  dob2                        DATE,
  age1                        NUMBER(3),
  age2                        NUMBER(3),
  gender1                     VARCHAR2(1),
  gender2                     VARCHAR2(1),
  policy_term                 NUMBER(3),
  sum_covered                 NUMBER(15,2),
  sum_covered_index           NUMBER(15,2),
  contribution_index          NUMBER(15,2),
  basic_contribution          NUMBER(15,2),
  gross_contribution          NUMBER(15,2),
  net_contribution            NUMBER(15,2),
  cover_multiple              NUMBER(3),
  cont_margin                 NUMBER(9,6),
  last_age_index              NUMBER(3),
  waqala_fee                  NUMBER(15,2),
  expected_claim              NUMBER(15,2),
  investment_income           NUMBER(15,2),
  second_life                 VARCHAR2(1),
  bid_offer                   NUMBER(15,2),
  issue_date                  DATE,
  comm_date                   DATE,
  expiry_date                 DATE,
  quotation_ref_no            VARCHAR2(50),
  proposal_date               DATE,
  occupational_class          VARCHAR2(5),
  revised_tag                 VARCHAR2(1),
  convert_tag                 VARCHAR2(1),
  specialdiscount             NUMBER,
  specialdiscountamount       NUMBER,
  advance_amount              NUMBER,
  cover_type                  VARCHAR2(10),
  base_doc_no                 VARCHAR2(50),
  max_age_limit               NUMBER,
  period_type                 VARCHAR2(10),
  document_days               NUMBER,
  converted_policy_no         VARCHAR2(50),
  conert_proposal             VARCHAR2(1),
  ifrs_date                   DATE,
  alteration_type             VARCHAR2(10),
  alteration_date             DATE,
  class_load_basis            VARCHAR2(1),
  cost_center_code            VARCHAR2(10),
  knockoff_amount             NUMBER,
  master_ref_no               VARCHAR2(500),
  receivable_from             VARCHAR2(10),
  retakaful_contribution      NUMBER,
  alteration_issue_date       DATE,
  retakaful_sa                NUMBER,
  discount_pct_no_wakala      NUMBER,
  discount_amount_no_wakala   NUMBER,
  policy_renewal_reference_no VARCHAR2(50),
  org_branch_id               VARCHAR2(50),
  is_renewal_document         VARCHAR2(10),
  business_type               VARCHAR2(1),
  lock_tag                    VARCHAR2(5),
  lock_user                   VARCHAR2(50),
  lock_date                   DATE,
  approve_tag                 VARCHAR2(5),
  approval_comments           VARCHAR2(500),
  aml_risk_profile            VARCHAR2(1),
  max_child                   NUMBER,
  max_maternity               NUMBER,
  is_branch_wise_discount     VARCHAR2(5),
  process_pending_tag         VARCHAR2(1),
  commission_amount           NUMBER
)
;
alter table TK_DOC_HEADER_T
  add constraint PK_DOC_HEADER primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table TK_DOC_HEADER_T
  add constraint FK_DOCH_CLIENT foreign key (ORG_ID, PPS_PARTY_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);
alter table TK_DOC_HEADER_T
  add constraint FK_DOCH_SUB_PRODUCT foreign key (ORG_ID, PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);
alter table TK_DOC_HEADER_T
  add constraint FK_TK_DOC_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table CL_DOC_CLAIM_INSURED_ITEMS_T
prompt ===========================================
prompt
create table CL_DOC_CLAIM_INSURED_ITEMS_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  item_no            NUMBER not null,
  item_type          VARCHAR2(1),
  item_name          VARCHAR2(50),
  first_name         VARCHAR2(50),
  father_name        VARCHAR2(50),
  last_name          VARCHAR2(50),
  gender             VARCHAR2(1),
  nationality_code   NUMBER,
  date_of_birth      DATE,
  joining_date       DATE,
  effective_date     DATE,
  designation_code   NUMBER,
  category_code      NUMBER,
  salary             NUMBER,
  sum_insured        NUMBER,
  item_branch_id     NUMBER,
  life_class         NUMBER,
  accidental_class   NUMBER,
  account_no         NUMBER,
  loan_period        NUMBER,
  personal_id        VARCHAR2(50),
  remarks            VARCHAR2(500),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  height             NUMBER,
  weight             NUMBER,
  bmi                NUMBER,
  smoker_type        VARCHAR2(1),
  over_age_tag       VARCHAR2(1),
  below_age_tag      VARCHAR2(1),
  over_fcl_tag       VARCHAR2(1),
  below_fcl_tag      VARCHAR2(1),
  fcl                NUMBER(15,2),
  decision_type      NUMBER,
  basic_contribution NUMBER(15,2),
  gross_contribution NUMBER(15,2),
  sum_assured        NUMBER(15,2),
  retirement_date    DATE,
  age                NUMBER(3)
)
;
alter table CL_DOC_CLAIM_INSURED_ITEMS_T
  add constraint PK_DOC_CL_INS_ITEMS primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);
alter table CL_DOC_CLAIM_INSURED_ITEMS_T
  add constraint FK_DOC_CL_INS_ITEMS_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table CL_DOC_CLAIM_IN_BENEFIT_T
prompt ========================================
prompt
create table CL_DOC_CLAIM_IN_BENEFIT_T
(
  org_id             VARCHAR2(10) not null,
  branch_id          VARCHAR2(10) not null,
  product_code       VARCHAR2(10) not null,
  sub_product_code   VARCHAR2(10) not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  item_no            NUMBER not null,
  benefit_code       NUMBER not null,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  sum_assured        NUMBER(15,2),
  basic_contribution NUMBER(15,2),
  gross_contribution NUMBER(15,2),
  calculated_sa      NUMBER(15,2)
)
;
alter table CL_DOC_CLAIM_IN_BENEFIT_T
  add constraint PK_DOC_CL_INS_BENEFIT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ITEM_NO, BENEFIT_CODE);

prompt
prompt Creating table COA_DIMENSION_MAPPING_T
prompt ======================================
prompt
create table COA_DIMENSION_MAPPING_T
(
  org_id           NUMBER not null,
  coa_code         VARCHAR2(10) not null,
  coa_d_m_id       NUMBER not null,
  dimension_id     NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table COA_DIMENSION_MAPPING_T
  add constraint PK_COA_D_M_T primary key (ORG_ID, COA_CODE, COA_D_M_ID);

prompt
prompt Creating table COA_LEVEL_DEFINITION_T
prompt =====================================
prompt
create table COA_LEVEL_DEFINITION_T
(
  org_id            NUMBER not null,
  level_id          NUMBER not null,
  level_description VARCHAR2(250),
  level_length      NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table COA_LEVEL_DEFINITION_T
  add constraint PK_COA_LEVEL_DEFINITION primary key (ORG_ID, LEVEL_ID);

prompt
prompt Creating table COMM_CYCLE_HEADER_T
prompt ==================================
prompt
create table COMM_CYCLE_HEADER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  batch_no         NUMBER not null,
  batch_date       DATE,
  from_date        DATE,
  to_date          DATE,
  lock_flag        NVARCHAR2(20),
  comments         VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  description      VARCHAR2(500),
  posted_user_name VARCHAR2(50),
  post_date        DATE,
  post_flag        VARCHAR2(20),
  batch_name       VARCHAR2(100)
)
;
alter table COMM_CYCLE_HEADER_T
  add constraint COMM_CYCLE_HEADER_PK primary key (ORG_ID, BRANCH_ID, BATCH_NO);

prompt
prompt Creating table COMM_CYCLE_DETAIL_T
prompt ==================================
prompt
create table COMM_CYCLE_DETAIL_T
(
  s_no                 NUMBER not null,
  org_id               NUMBER not null,
  branch_id            NUMBER not null,
  batch_no             NUMBER not null,
  serial_no            NUMBER,
  commission_cycle_id  NUMBER,
  product_code         NUMBER,
  sub_product_code     NUMBER,
  takaful_type         VARCHAR2(1),
  document_type        VARCHAR2(1),
  document_no          VARCHAR2(10),
  record_type          VARCHAR2(1),
  document_year        VARCHAR2(10),
  issue_count          NUMBER not null,
  endorsement_no       NUMBER not null,
  application_id       NUMBER not null,
  gdh_doc_reference_no VARCHAR2(50),
  agent_code           NUMBER,
  commission_rate      NUMBER(9,6),
  commission_flat_amt  NUMBER(15,2),
  commission_amount    NUMBER(15,2),
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  agency_type          VARCHAR2(20),
  received_amount      NUMBER,
  comm_payble          NUMBER,
  comm_settled         NUMBER,
  comm_pending         NUMBER,
  payment_amount       NUMBER,
  gross_contribution   NUMBER,
  installment_no       NUMBER
)
;
alter table COMM_CYCLE_DETAIL_T
  add constraint COMM_CYCLE_DETAIL_PK primary key (ORG_ID, BRANCH_ID, BATCH_NO, S_NO);
alter table COMM_CYCLE_DETAIL_T
  add constraint FK_COMM_CYCLE_HEADER foreign key (ORG_ID, BRANCH_ID, BATCH_NO)
  references COMM_CYCLE_HEADER_T (ORG_ID, BRANCH_ID, BATCH_NO);

prompt
prompt Creating table COMM_CYCLE_PROC_HOLD_HISTORY_T
prompt =============================================
prompt
create table COMM_CYCLE_PROC_HOLD_HISTORY_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  s_no                NUMBER not null,
  serial_no           NUMBER not null,
  commission_cycle_id NUMBER not null,
  product_code        NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  installment_no      NUMBER,
  action_type         VARCHAR2(20),
  hold_action         VARCHAR2(1),
  action_by           VARCHAR2(50),
  action_date         DATE,
  action_comments     VARCHAR2(500)
)
;
alter table COMM_CYCLE_PROC_HOLD_HISTORY_T
  add constraint PK_COMM_CYCLE_HOLD_HISTORY primary key (ORG_ID, BRANCH_ID, S_NO, SERIAL_NO, COMMISSION_CYCLE_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table COUNTRY
prompt ======================
prompt
create table COUNTRY
(
  country_code     VARCHAR2(20) not null,
  country_desc     VARCHAR2(200),
  sec_active_flag  VARCHAR2(3),
  country_prefix   VARCHAR2(10),
  cik_label        NVARCHAR2(30),
  structure_code   NVARCHAR2(20),
  country_oder     NUMBER,
  pf_tabs_allow    VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  default_currency VARCHAR2(50),
  region           VARCHAR2(10),
  market_type      VARCHAR2(20),
  dialing_code     NUMBER,
  phone_no_length  NUMBER
)
;
create index IDX_COUNTRY on COUNTRY (COUNTRY_CODE, COUNTRY_DESC);
alter table COUNTRY
  add primary key (COUNTRY_CODE);

prompt
prompt Creating table COUNTRY_STATE_T
prompt ==============================
prompt
create table COUNTRY_STATE_T
(
  country_code     VARCHAR2(20) not null,
  state_code       NUMBER not null,
  state_name       VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1),
  short_code       VARCHAR2(5)
)
;
alter table COUNTRY_STATE_T
  add constraint PK_COUNTRY_STATE_T primary key (COUNTRY_CODE, STATE_CODE);
alter table COUNTRY_STATE_T
  add constraint FK_COUNTRY_STATE foreign key (COUNTRY_CODE)
  references COUNTRY (COUNTRY_CODE);

prompt
prompt Creating table COUNTRY_CITY_T
prompt =============================
prompt
create table COUNTRY_CITY_T
(
  country_code     VARCHAR2(20) not null,
  state_code       NUMBER not null,
  city_code        NUMBER not null,
  city_name        VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  active           VARCHAR2(1),
  service_provider VARCHAR2(100)
)
;
alter table COUNTRY_CITY_T
  add constraint PK_COUNTRY_CITY_T primary key (COUNTRY_CODE, STATE_CODE, CITY_CODE);
alter table COUNTRY_CITY_T
  add constraint FK_STATE_CITY foreign key (COUNTRY_CODE, STATE_CODE)
  references COUNTRY_STATE_T (COUNTRY_CODE, STATE_CODE);

prompt
prompt Creating table COURIER_MESSAGES_T
prompt =================================
prompt
create table COURIER_MESSAGES_T
(
  message_id        NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  ref_no            VARCHAR2(100),
  hold_tag          VARCHAR2(1),
  group_code        NUMBER,
  category_code     NUMBER,
  event_code        NUMBER,
  template_id       NUMBER,
  other_lang_tag    VARCHAR2(1),
  org_id            NUMBER,
  effective_date    DATE,
  attachment_path   VARCHAR2(500),
  rpt_generated_tag VARCHAR2(1),
  rpt_parameters    VARCHAR2(1000),
  day_end_date      DATE
)
;
alter table COURIER_MESSAGES_T
  add constraint PK_COURIER_MESSAGES primary key (MESSAGE_ID);

prompt
prompt Creating table CURRENCY_RATES_HISTORY_T
prompt =======================================
prompt
create table CURRENCY_RATES_HISTORY_T
(
  currency_date VARCHAR2(15) not null,
  currency_code VARCHAR2(50) not null,
  currency_name VARCHAR2(500),
  unit_per_usd  VARCHAR2(50),
  usd_per_unit  VARCHAR2(50),
  base_currency VARCHAR2(20) not null
)
;
alter table CURRENCY_RATES_HISTORY_T
  add constraint PK_CURRENCY_RATE primary key (BASE_CURRENCY, CURRENCY_DATE, CURRENCY_CODE);

prompt
prompt Creating table CURRENCY_SETUP_T
prompt ===============================
prompt
create table CURRENCY_SETUP_T
(
  currency_code      VARCHAR2(50),
  currency_name      VARCHAR2(500),
  base_currency_flag VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table CURRENCY_SETUP_T
  add constraint CURRENCY_SETUP_T_U01 unique (CURRENCY_CODE);

prompt
prompt Creating table DIGITAL_PROPOSAL_T
prompt =================================
prompt
create table DIGITAL_PROPOSAL_T
(
  org_id                   NUMBER not null,
  header_id                NUMBER not null,
  cnic_no                  VARCHAR2(25),
  issuance_date            DATE,
  expiry_date              DATE,
  full_name                VARCHAR2(100),
  date_of_birth            DATE,
  father_name              VARCHAR2(100),
  mother_name              VARCHAR2(100),
  birth_place              VARCHAR2(100),
  correspondence_address   VARCHAR2(250),
  country                  VARCHAR2(100),
  city                     VARCHAR2(100),
  district                 VARCHAR2(100),
  other_nationality        VARCHAR2(100),
  email_address            VARCHAR2(100),
  mobile_no                VARCHAR2(25),
  whatsapp_no              VARCHAR2(25),
  nominee_full_name_1      VARCHAR2(100),
  nominee_relationship_1   VARCHAR2(10),
  nominee_full_name_2      VARCHAR2(100),
  nominee_relationship_2   VARCHAR2(10),
  div_name                 VARCHAR2(25),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  payment_mode             VARCHAR2(1),
  policy_term              NUMBER,
  payment_term             NUMBER,
  partner_id               NUMBER,
  channel_id               NUMBER,
  model_id                 NUMBER,
  agent_id                 NUMBER,
  partner_branch_id        NUMBER,
  title_code               NUMBER,
  basic_contribution_modal NUMBER,
  comm_date                DATE,
  no_of_person             NUMBER,
  cover_multiple           NUMBER,
  contribution_indexation  NUMBER,
  sum_covered_indexation   NUMBER,
  total_contribution_modal NUMBER,
  state                    VARCHAR2(100),
  main_product_code        NUMBER,
  sub_product_code         NUMBER,
  branch_id                NUMBER,
  application_id           NUMBER,
  sum_covered              NUMBER,
  sum_covered_modal        NUMBER,
  basic_contribution       NUMBER,
  illustration_no          VARCHAR2(50),
  proposal_no              VARCHAR2(50),
  status                   VARCHAR2(10),
  package_id               NUMBER
)
;
alter table DIGITAL_PROPOSAL_T
  add constraint PK_DIGITAL_PROPOSAL_T primary key (ORG_ID, HEADER_ID);

prompt
prompt Creating table DIMENSION_SETUP_T
prompt ================================
prompt
create table DIMENSION_SETUP_T
(
  org_id           NUMBER not null,
  dimension_id     NUMBER not null,
  dimension_name   VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  mandatory_tag    VARCHAR2(2)
)
;
alter table DIMENSION_SETUP_T
  add constraint PK_DIMENSION_T primary key (ORG_ID, DIMENSION_ID);

prompt
prompt Creating table DOCUMENT_APPROVAL_SETUP_T
prompt ========================================
prompt
create table DOCUMENT_APPROVAL_SETUP_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  approval_order   NUMBER not null,
  document_type    VARCHAR2(2) not null,
  approver         VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table DOCUMENT_APPROVAL_SETUP_T
  add primary key (ORG_ID, APPLICATION_ID, APPROVAL_ORDER, DOCUMENT_TYPE);

prompt
prompt Creating table DOCUMENT_TYPE_SETUP_T
prompt ====================================
prompt
create table DOCUMENT_TYPE_SETUP_T
(
  org_id           NUMBER not null,
  document_type    VARCHAR2(1) not null,
  description      VARCHAR2(50),
  active           VARCHAR2(1),
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  financial_tag    VARCHAR2(1)
)
;
alter table DOCUMENT_TYPE_SETUP_T
  add constraint PK_DOC_TYPE primary key (ORG_ID, DOCUMENT_TYPE);
alter table DOCUMENT_TYPE_SETUP_T
  add constraint FK_DOCTYPE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table DOC_PRINTING_SETUP_T
prompt ===================================
prompt
create table DOC_PRINTING_SETUP_T
(
  org_id            NUMBER not null,
  doc_printing_code VARCHAR2(50) not null,
  doc_printing_desc VARCHAR2(50),
  active            VARCHAR2(20),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  template_name     VARCHAR2(500),
  application_id    VARCHAR2(20) not null,
  claim_tag         VARCHAR2(1),
  template_type     VARCHAR2(20),
  attachment        VARCHAR2(4000),
  show_after_lock   VARCHAR2(1),
  reprinting_tag    VARCHAR2(1)
)
;
alter table DOC_PRINTING_SETUP_T
  add constraint PK_DOC_PRINTING primary key (ORG_ID, DOC_PRINTING_CODE, APPLICATION_ID);

prompt
prompt Creating table DOC_PRINTING_DOC_MAPPING_T
prompt =========================================
prompt
create table DOC_PRINTING_DOC_MAPPING_T
(
  org_id            NUMBER not null,
  doc_printing_code VARCHAR2(50) not null,
  doctype_code      VARCHAR2(50) not null,
  active            VARCHAR2(20),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  person_name       VARCHAR2(50),
  designation       VARCHAR2(50),
  application_id    VARCHAR2(20) not null
)
;
alter table DOC_PRINTING_DOC_MAPPING_T
  add constraint PK_DOC_PRINTING_DOC primary key (ORG_ID, DOC_PRINTING_CODE, DOCTYPE_CODE, APPLICATION_ID);
alter table DOC_PRINTING_DOC_MAPPING_T
  add constraint FK_DOC_HEADER foreign key (ORG_ID, DOC_PRINTING_CODE, APPLICATION_ID)
  references DOC_PRINTING_SETUP_T (ORG_ID, DOC_PRINTING_CODE, APPLICATION_ID);

prompt
prompt Creating table DOC_PRINTING_PARAMETER_T
prompt =======================================
prompt
create table DOC_PRINTING_PARAMETER_T
(
  org_id            NUMBER not null,
  doc_printing_code VARCHAR2(50) not null,
  serial_no         NUMBER not null,
  db_column_name    VARCHAR2(50),
  active            VARCHAR2(20),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  application_id    VARCHAR2(20) not null
)
;
alter table DOC_PRINTING_PARAMETER_T
  add constraint PK_DOC_PRINTING_PARA_DOC primary key (ORG_ID, DOC_PRINTING_CODE, SERIAL_NO, APPLICATION_ID);
alter table DOC_PRINTING_PARAMETER_T
  add constraint FK_DOC_PRINTING_HEADER foreign key (ORG_ID, DOC_PRINTING_CODE, APPLICATION_ID)
  references DOC_PRINTING_SETUP_T (ORG_ID, DOC_PRINTING_CODE, APPLICATION_ID);

prompt
prompt Creating table DOC_PRINTING_SUB_PRODUCT_MAP_T
prompt =============================================
prompt
create table DOC_PRINTING_SUB_PRODUCT_MAP_T
(
  org_id               NUMBER not null,
  application_id       NUMBER not null,
  main_product_code    NUMBER,
  sub_product_code     NUMBER,
  sub_product_map_code NUMBER not null,
  doc_printing_code    NUMBER not null,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table DOC_PRINTING_SUB_PRODUCT_MAP_T
  add primary key (SUB_PRODUCT_MAP_CODE, DOC_PRINTING_CODE, ORG_ID, APPLICATION_ID);

prompt
prompt Creating table DOC_REF_FORMAT_DTL_T
prompt ===================================
prompt
create table DOC_REF_FORMAT_DTL_T
(
  org_id           NUMBER not null,
  doc_ref_id       NUMBER not null,
  app_id           NUMBER,
  expression_type  VARCHAR2(20),
  expression_value VARCHAR2(500),
  display_order    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  code             VARCHAR2(20),
  column_id        VARCHAR2(50)
)
;
alter table DOC_REF_FORMAT_DTL_T
  add constraint PK_DOC_REF_FORMAT_T primary key (ORG_ID, DOC_REF_ID);

prompt
prompt Creating table DOC_REF_FORMAT_HD_T
prompt ==================================
prompt
create table DOC_REF_FORMAT_HD_T
(
  code             VARCHAR2(20) not null,
  org_id           NUMBER not null,
  app_id           NUMBER,
  description      VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  tablename        VARCHAR2(50)
)
;
alter table DOC_REF_FORMAT_HD_T
  add constraint PK_DOC_REF_FORMAT_HD_T primary key (CODE, ORG_ID);

prompt
prompt Creating table MESSAGE_STATUS_SETUP_T
prompt =====================================
prompt
create table MESSAGE_STATUS_SETUP_T
(
  status_id          NUMBER not null,
  status_description VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table MESSAGE_STATUS_SETUP_T
  add constraint PK_MSG_STATUS primary key (STATUS_ID);

prompt
prompt Creating table SM_EMAIL_TYPES_T
prompt ===============================
prompt
create table SM_EMAIL_TYPES_T
(
  type_id     NUMBER not null,
  type_name   VARCHAR2(50),
  email       VARCHAR2(50),
  email_pwd   VARCHAR2(500),
  smtp_server VARCHAR2(150),
  smtp_port   NUMBER,
  email_to    VARCHAR2(500),
  email_bcc   VARCHAR2(500),
  email_cc    VARCHAR2(500)
)
;
alter table SM_EMAIL_TYPES_T
  add constraint PK_SM_EMAIL_TYPES primary key (TYPE_ID);

prompt
prompt Creating table EMAIL_MESSAGES_T
prompt ===============================
prompt
create table EMAIL_MESSAGES_T
(
  message_id        NUMBER not null,
  message_text      VARCHAR2(4000),
  status_id         NUMBER,
  retry_count       NUMBER,
  reason            VARCHAR2(2000),
  subject           VARCHAR2(500),
  fromemail         VARCHAR2(300),
  toemail           VARCHAR2(300),
  bccemail          VARCHAR2(400),
  email_type_id     NUMBER,
  email_cc          VARCHAR2(300),
  email_bcc         VARCHAR2(300),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  ref_no            VARCHAR2(100),
  hold_tag          VARCHAR2(1),
  group_code        NUMBER,
  category_code     NUMBER,
  event_code        NUMBER,
  template_id       NUMBER,
  other_lang_tag    VARCHAR2(1),
  org_id            NUMBER,
  effective_date    DATE,
  attachment_path   VARCHAR2(500),
  rpt_generated_tag VARCHAR2(1),
  rpt_parameters    VARCHAR2(1000),
  day_end_date      DATE,
  reject_tag        VARCHAR2(1),
  rejected_by       VARCHAR2(50),
  reject_date       DATE
)
;
alter table EMAIL_MESSAGES_T
  add constraint PK_EMAIL_MESSAGES primary key (MESSAGE_ID);
alter table EMAIL_MESSAGES_T
  add constraint FK_EMAIL_MSG_EMAIL_TYPE_MSG foreign key (EMAIL_TYPE_ID)
  references SM_EMAIL_TYPES_T (TYPE_ID);
alter table EMAIL_MESSAGES_T
  add constraint FK_EMAIL_MSG_STATUS_MSG foreign key (STATUS_ID)
  references MESSAGE_STATUS_SETUP_T (STATUS_ID);

prompt
prompt Creating table MESSAGE_TYPE_SETUP_T
prompt ===================================
prompt
create table MESSAGE_TYPE_SETUP_T
(
  message_type_id          NUMBER not null,
  message_type_description VARCHAR2(50),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE
)
;
alter table MESSAGE_TYPE_SETUP_T
  add constraint PK_MSG_TYPE primary key (MESSAGE_TYPE_ID);

prompt
prompt Creating table EMAIL_TEMPLATES_T
prompt ================================
prompt
create table EMAIL_TEMPLATES_T
(
  template_id              NUMBER not null,
  template_name            VARCHAR2(50),
  template_subject         VARCHAR2(500),
  template_body            VARCHAR2(2500),
  creation_date            DATE,
  created_by               VARCHAR2(50),
  last_update_date         DATE,
  last_updated_by          VARCHAR2(50),
  application_id           NUMBER,
  template_type_id         NUMBER,
  template_body_other_lang NVARCHAR2(2000),
  org_id                   NUMBER
)
;
alter table EMAIL_TEMPLATES_T
  add constraint PK_EMAIL_TEMPLATES_T primary key (TEMPLATE_ID);
alter table EMAIL_TEMPLATES_T
  add constraint FK_EMAIL_MSG_TYPE foreign key (TEMPLATE_TYPE_ID)
  references MESSAGE_TYPE_SETUP_T (MESSAGE_TYPE_ID);

prompt
prompt Creating table EMAIL_TEMPLATES_T_04092024
prompt =========================================
prompt
create table EMAIL_TEMPLATES_T_04092024
(
  template_id              NUMBER,
  template_name            VARCHAR2(50),
  template_subject         VARCHAR2(500),
  template_body            VARCHAR2(2500),
  creation_date            DATE,
  created_by               VARCHAR2(50),
  last_update_date         DATE,
  last_updated_by          VARCHAR2(50),
  application_id           NUMBER,
  template_type_id         NUMBER,
  template_body_other_lang NVARCHAR2(2000),
  org_id                   NUMBER
)
;

prompt
prompt Creating table EMPLOYEE_ATTACHMENT_T
prompt ====================================
prompt
create table EMPLOYEE_ATTACHMENT_T
(
  org_id           NUMBER not null,
  employeeid       NUMBER not null,
  attachment_code  NUMBER not null,
  file_path        VARCHAR2(300),
  attachment_type  VARCHAR2(1),
  attachment_desc  VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table EMPLOYEE_ATTACHMENT_T
  add constraint PK_EMPLOYEE_ATTACHMENT_T primary key (ORG_ID, EMPLOYEEID, ATTACHMENT_CODE);

prompt
prompt Creating table EMPLOYMENT_CLASS_T
prompt =================================
prompt
create table EMPLOYMENT_CLASS_T
(
  org_id              NUMBER not null,
  employment_class_id NUMBER not null,
  employment_class    VARCHAR2(1),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table EMPLOYMENT_CLASS_T
  add constraint PK_EMPLOYMENT_CLASS_T primary key (ORG_ID, EMPLOYMENT_CLASS_ID);

prompt
prompt Creating table EMPLOYMENT_TYPE_T
prompt ================================
prompt
create table EMPLOYMENT_TYPE_T
(
  org_id              NUMBER not null,
  employment_class_id NUMBER not null,
  employment_type_id  NUMBER not null,
  employment_type     VARCHAR2(100),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE
)
;
alter table EMPLOYMENT_TYPE_T
  add constraint PK_EMPLOYMENT_TYPE_T primary key (ORG_ID, EMPLOYMENT_CLASS_ID, EMPLOYMENT_TYPE_ID);

prompt
prompt Creating table ENTITY_ADDRESS_T
prompt ===============================
prompt
create table ENTITY_ADDRESS_T
(
  entity_type      VARCHAR2(10) not null,
  entity_code      VARCHAR2(20) not null,
  address_type     VARCHAR2(20) not null,
  address1         VARCHAR2(1000),
  address2         VARCHAR2(100),
  city_code        VARCHAR2(10),
  state_code       VARCHAR2(10),
  country_code     VARCHAR2(10),
  zip_code         VARCHAR2(50),
  phone1           VARCHAR2(30),
  phone2           VARCHAR2(50),
  fax1             VARCHAR2(50),
  fax2             VARCHAR2(50),
  email            VARCHAR2(100),
  website          VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  mobile_phone     NUMBER,
  home_phone       NUMBER,
  office_phone     NUMBER,
  house_no         VARCHAR2(50),
  unit_no          VARCHAR2(50),
  building         VARCHAR2(50),
  org_id           NUMBER not null,
  serial_no        NUMBER not null
)
;
alter table ENTITY_ADDRESS_T
  add constraint PK_ENTITY_ADDRESS_T primary key (ENTITY_TYPE, ENTITY_CODE, ADDRESS_TYPE, ORG_ID, SERIAL_NO);

prompt
prompt Creating table FINAL_SETTLEMENT_PROCESS_T
prompt =========================================
prompt
create table FINAL_SETTLEMENT_PROCESS_T
(
  employee_id          NUMBER,
  employee_name        VARCHAR2(200),
  notify_date          DATE,
  last_date            DATE,
  final_process_date   DATE,
  reason               NUMBER,
  remarks              VARCHAR2(200),
  eligible_for_rehire  VARCHAR2(1),
  add_by               NUMBER,
  add_date             DATE,
  edit_by              NUMBER,
  edit_date            DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE,
  final_settlment_id   NUMBER not null,
  org_id               NUMBER not null,
  final_settlement_tag VARCHAR2(1),
  payperiodsdatesid    NUMBER,
  payrollcalanderid    NUMBER
)
;
alter table FINAL_SETTLEMENT_PROCESS_T
  add primary key (ORG_ID, FINAL_SETTLMENT_ID);

prompt
prompt Creating table FINANCIAL_PRIORITY_T
prompt ===================================
prompt
create table FINANCIAL_PRIORITY_T
(
  org_id              NUMBER not null,
  priority_id         NUMBER not null,
  description         VARCHAR2(200),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  other_language_desc NVARCHAR2(200)
)
;
alter table FINANCIAL_PRIORITY_T
  add constraint PK_FINANCIAL_PRIORITY_T primary key (ORG_ID, PRIORITY_ID);

prompt
prompt Creating table FINANCIAL_SETUP_T
prompt ================================
prompt
create table FINANCIAL_SETUP_T
(
  org_id           NUMBER not null,
  financial_id     NUMBER not null,
  description      VARCHAR2(200),
  financial_type   VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table FINANCIAL_SETUP_T
  add constraint PK_FINANCIAL_SETUP_T primary key (ORG_ID, FINANCIAL_ID);

prompt
prompt Creating table FUND_SETUP_T
prompt ===========================
prompt
create table FUND_SETUP_T
(
  org_id           NUMBER not null,
  fund_code        NUMBER not null,
  fund_desc        VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  maxrate          NUMBER,
  fund_type        VARCHAR2(1),
  launch_date      DATE,
  risk_profile     VARCHAR2(1),
  price_type       VARCHAR2(1),
  other_lang_desc  NVARCHAR2(500),
  abbreviation     VARCHAR2(10)
)
;
alter table FUND_SETUP_T
  add constraint PK_FUND_SETUP_T primary key (ORG_ID, FUND_CODE);

prompt
prompt Creating table FUND_SETUP_TEST_DETAIL_T
prompt =======================================
prompt
create table FUND_SETUP_TEST_DETAIL_T
(
  org_id             NUMBER not null,
  fund_t_code        NUMBER not null,
  fund_detail_t_code NUMBER not null,
  fund_detail_desc   VARCHAR2(50),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table FUND_SETUP_TEST_DETAIL_T
  add constraint PK_FUND_SETUP_TEST_DETAIL_T primary key (ORG_ID, FUND_T_CODE, FUND_DETAIL_T_CODE);

prompt
prompt Creating table FUND_SETUP_TEST_T
prompt ================================
prompt
create table FUND_SETUP_TEST_T
(
  org_id           NUMBER not null,
  fund_t_code      NUMBER not null,
  fund_t_desc      VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  maxrate          NUMBER,
  fund_type        VARCHAR2(1),
  launch_date      DATE,
  risk_profile     VARCHAR2(1),
  price_type       VARCHAR2(1),
  other_lang_desc  NVARCHAR2(500)
)
;
alter table FUND_SETUP_TEST_T
  add constraint PK_FUND_SETUP_TEST_T primary key (ORG_ID, FUND_T_CODE);

prompt
prompt Creating table GENERAL_PARAMETER
prompt ================================
prompt
create table GENERAL_PARAMETER
(
  code             INTEGER not null,
  description      NVARCHAR2(500),
  type             NVARCHAR2(100),
  active           INTEGER,
  fullname         NVARCHAR2(100),
  grp              NVARCHAR2(10),
  priority         INTEGER,
  rpt              NVARCHAR2(10),
  created_by       VARCHAR2(100),
  creation_date    DATE,
  last_updated_by  VARCHAR2(100),
  last_update_date DATE
)
;
alter table GENERAL_PARAMETER
  add constraint GENERAL_PARAMETER_PK primary key (CODE);

prompt
prompt Creating table SM_APPLICATION_SETUPHD_T
prompt =======================================
prompt
create table SM_APPLICATION_SETUPHD_T
(
  application_id   NUMBER(3) not null,
  application_desc VARCHAR2(200),
  app_short_code   VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  branch_required  VARCHAR2(1),
  lob              VARCHAR2(3),
  otp_required     VARCHAR2(1)
)
;
alter table SM_APPLICATION_SETUPHD_T
  add constraint PK_APPHD primary key (APPLICATION_ID);

prompt
prompt Creating table GEN_PARAM_SETUPHD_T
prompt ==================================
prompt
create table GEN_PARAM_SETUPHD_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  setup_id         NUMBER not null,
  setup_name       VARCHAR2(200),
  active           VARCHAR2(1),
  setup_tablename  VARCHAR2(32),
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  setup_type       VARCHAR2(1)
)
;
alter table GEN_PARAM_SETUPHD_T
  add constraint PK_GEN_PARAM_NEW primary key (ORG_ID, APPLICATION_ID, SETUP_ID);
alter table GEN_PARAM_SETUPHD_T
  add constraint FK_PARAM_APP foreign key (APPLICATION_ID)
  references SM_APPLICATION_SETUPHD_T (APPLICATION_ID);
alter table GEN_PARAM_SETUPHD_T
  add constraint FK_PARAM_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GEN_PARAM_SETUP_DTL_T
prompt ====================================
prompt
create table GEN_PARAM_SETUP_DTL_T
(
  org_id           NUMBER not null,
  application_id   NUMBER not null,
  setup_id         NUMBER not null,
  code             NUMBER not null,
  description      VARCHAR2(200),
  active           VARCHAR2(1),
  creation_date    DATE,
  created_by       VARCHAR2(50),
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  abbreviation     VARCHAR2(20),
  default_tag      VARCHAR2(1),
  short_code       VARCHAR2(50),
  remarks          VARCHAR2(300),
  display_order    NUMBER,
  mandatory_tag    VARCHAR2(5),
  defaul_tag       VARCHAR2(1)
)
;
alter table GEN_PARAM_SETUP_DTL_T
  add constraint PK_GEN_PARAM_DTL primary key (ORG_ID, APPLICATION_ID, SETUP_ID, CODE);
alter table GEN_PARAM_SETUP_DTL_T
  add constraint FK_PARAM_HD foreign key (ORG_ID, APPLICATION_ID, SETUP_ID)
  references GEN_PARAM_SETUPHD_T (ORG_ID, APPLICATION_ID, SETUP_ID);

prompt
prompt Creating table GEN_VARIABLE_SETUP_T
prompt ===================================
prompt
create table GEN_VARIABLE_SETUP_T
(
  org_id                NUMBER not null,
  variable_code         VARCHAR2(100) not null,
  variable_name         VARCHAR2(250),
  variable_query        VARCHAR2(4000),
  effective_start_date  DATE,
  effective_end_date    DATE,
  variable_type         VARCHAR2(10),
  variable_query_detail VARCHAR2(4000),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE
)
;
alter table GEN_VARIABLE_SETUP_T
  add constraint PK_GEN_VAR_SETUP primary key (ORG_ID, VARIABLE_CODE);
alter table GEN_VARIABLE_SETUP_T
  add constraint FK_GEN_VAR_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GHAS_BENEFIT_CONTRIBUTION_T
prompt ==========================================
prompt
create table GHAS_BENEFIT_CONTRIBUTION_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  product_code              NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER,
  plan_code                 NUMBER not null,
  gh_benefit_code           NUMBER not null,
  detail_code               NUMBER not null,
  age_from                  NUMBER,
  age_to                    NUMBER,
  gender                    VARCHAR2(10),
  relation                  NUMBER,
  ben_contribution          NUMBER,
  wakala_amount             NUMBER,
  commission_amount         NUMBER,
  gross_contribution_amount NUMBER,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_updated_by           VARCHAR2(50),
  last_update_date          DATE
)
;
alter table GHAS_BENEFIT_CONTRIBUTION_T
  add constraint PK_GHAS_BENEFIT_CONTRIBUTION_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, PLAN_CODE, GH_BENEFIT_CODE, DETAIL_CODE);
alter table GHAS_BENEFIT_CONTRIBUTION_T
  add constraint FK_DOC_GH_DOC_BF_CONT_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_BENEFIT_FAM_LIMIT_T
prompt ===========================================
prompt
create table GHAS_DOC_BENEFIT_FAM_LIMIT_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  product_code      NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER,
  plan_code         NUMBER not null,
  gh_benefit_code   NUMBER not null,
  detail_code       NUMBER,
  relation_code     NUMBER not null,
  fam_benefit_limit NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GHAS_DOC_BENEFIT_FAM_LIMIT_T
  add constraint PK_GHAS_DOC_BEN_FM_LM_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, PLAN_CODE, GH_BENEFIT_CODE, RELATION_CODE);
alter table GHAS_DOC_BENEFIT_FAM_LIMIT_T
  add constraint FK_DOC_GH_DOC_BF_FAM_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_BENEFIT_T
prompt =================================
prompt
create table GHAS_DOC_BENEFIT_T
(
  org_id                         NUMBER not null,
  branch_id                      NUMBER not null,
  product_code                   NUMBER not null,
  sub_product_code               NUMBER not null,
  takaful_type                   VARCHAR2(1) not null,
  document_type                  VARCHAR2(1) not null,
  document_no                    VARCHAR2(10) not null,
  record_type                    VARCHAR2(1) not null,
  document_year                  VARCHAR2(10) not null,
  issue_count                    NUMBER not null,
  endorsement_no                 NUMBER not null,
  application_id                 NUMBER,
  plan_code                      NUMBER not null,
  gh_benefit_code                NUMBER not null,
  benefit_limit                  NUMBER,
  created_by                     VARCHAR2(50),
  creation_date                  DATE,
  last_updated_by                VARCHAR2(50),
  last_update_date               DATE,
  benefit_type                   VARCHAR2(50),
  wakala_percentage              NUMBER,
  commission_percentage          NUMBER,
  peril_limit                    NUMBER,
  deductable_percentage          NUMBER,
  ben_payment_basis              VARCHAR2(20),
  limit_type                     VARCHAR2(3),
  addition_charge_basis          VARCHAR2(20),
  deductable_type                VARCHAR2(10),
  deletion_refund_basis          VARCHAR2(20),
  addition_charge_basis_new_born VARCHAR2(20)
)
;
alter table GHAS_DOC_BENEFIT_T
  add constraint PK_GHAS_DOC_BENEFIT_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, PLAN_CODE, ENDORSEMENT_NO, GH_BENEFIT_CODE);
alter table GHAS_DOC_BENEFIT_T
  add constraint FK_DOC_GH_DOC_BF_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_BEN_AGE_LIMIT_T
prompt =======================================
prompt
create table GHAS_DOC_BEN_AGE_LIMIT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER,
  plan_code        NUMBER not null,
  gh_benefit_code  NUMBER not null,
  detail_code      NUMBER not null,
  relation         NUMBER,
  gender           VARCHAR2(10),
  max_age          NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  min_age          NUMBER
)
;
alter table GHAS_DOC_BEN_AGE_LIMIT_T
  add constraint PK_GHAS_DOC_BEN_AGE_LIMIT_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, PLAN_CODE, GH_BENEFIT_CODE, DETAIL_CODE);
alter table GHAS_DOC_BEN_AGE_LIMIT_T
  add constraint FK_DOC_GH_DOC_BF_AGE_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_BEN_CONDITION_T
prompt =======================================
prompt
create table GHAS_DOC_BEN_CONDITION_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  plan_code        NUMBER not null,
  gh_benefit_code  NUMBER not null,
  cond_code        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GHAS_DOC_BEN_CONDITION_T
  add constraint PK_DOC_BEN_CONDITION_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, PLAN_CODE, GH_BENEFIT_CODE, COND_CODE);

prompt
prompt Creating table GHAS_DOC_BEN_EXCLUSION_T
prompt =======================================
prompt
create table GHAS_DOC_BEN_EXCLUSION_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  plan_code        NUMBER not null,
  gh_benefit_code  NUMBER not null,
  exclusion_code   NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GHAS_DOC_BEN_EXCLUSION_T
  add constraint PK_DOC_BEN_EXCLUSION_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, PLAN_CODE, GH_BENEFIT_CODE, EXCLUSION_CODE);

prompt
prompt Creating table GHAS_DOC_PLANS_T
prompt ===============================
prompt
create table GHAS_DOC_PLANS_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  product_code               NUMBER not null,
  sub_product_code           NUMBER not null,
  takaful_type               VARCHAR2(1) not null,
  document_type              VARCHAR2(1) not null,
  document_no                VARCHAR2(10) not null,
  record_type                VARCHAR2(1) not null,
  document_year              VARCHAR2(10) not null,
  issue_count                NUMBER not null,
  endorsement_no             NUMBER not null,
  application_id             NUMBER not null,
  plan_code                  NUMBER not null,
  plan_description           VARCHAR2(200),
  active                     VARCHAR2(1),
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_updated_by            VARCHAR2(50),
  last_update_date           DATE,
  plan_limit                 NUMBER,
  relation_wise_contribution VARCHAR2(10),
  plan_summary               VARCHAR2(500)
)
;
alter table GHAS_DOC_PLANS_T
  add constraint PK_GHAS_DOC_PLANS_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, PLAN_CODE);
alter table GHAS_DOC_PLANS_T
  add constraint FK_DOC_PLANS_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_POOL_BEN_T
prompt ==================================
prompt
create table GHAS_DOC_POOL_BEN_T
(
  org_id           NUMBER not null,
  branch_id        VARCHAR2(10) not null,
  product_code     VARCHAR2(10) not null,
  sub_product_code VARCHAR2(10) not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  pool_code        NUMBER not null,
  benefit_code     NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GHAS_DOC_POOL_BEN_T
  add constraint PK_GHAS_DOC_POOL_BEN_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, POOL_CODE, BENEFIT_CODE);

prompt
prompt Creating table GHAS_DOC_POOL_DIST_T
prompt ===================================
prompt
create table GHAS_DOC_POOL_DIST_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER,
  pool_code          NUMBER not null,
  detail_code        NUMBER not null,
  pool_relation_code NUMBER,
  pool_benefit_limit NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GHAS_DOC_POOL_DIST_T
  add constraint PK_GHAS_DOC_POOL_DIST_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, ISSUE_COUNT, ENDORSEMENT_NO, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, POOL_CODE, DETAIL_CODE);
alter table GHAS_DOC_POOL_DIST_T
  add constraint FK_DOC_GH_DOC_POOL_DIST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_POOL_LIMIT_T
prompt ====================================
prompt
create table GHAS_DOC_POOL_LIMIT_T
(
  org_id           NUMBER not null,
  branch_id        VARCHAR2(10) not null,
  product_code     VARCHAR2(10) not null,
  sub_product_code VARCHAR2(10) not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  pool_code        NUMBER not null,
  limit_type       VARCHAR2(20) not null,
  max_limit        NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GHAS_DOC_POOL_LIMIT_T
  add constraint PK_GHAS_DOC_POOL_LIMIT_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, POOL_CODE, LIMIT_TYPE);

prompt
prompt Creating table GHAS_DOC_POOL_MAX_AGE_T
prompt ======================================
prompt
create table GHAS_DOC_POOL_MAX_AGE_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER,
  pool_code        NUMBER not null,
  detail_code      NUMBER not null,
  relation         NUMBER,
  gender           VARCHAR2(10),
  max_age          NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GHAS_DOC_POOL_MAX_AGE_T
  add constraint PK_GHAS_DOC_POOL_MAX_AGE_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, POOL_CODE, DETAIL_CODE);
alter table GHAS_DOC_POOL_MAX_AGE_T
  add constraint FK_DOC_GH_DOC_POOL_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_POOL_T
prompt ==============================
prompt
create table GHAS_DOC_POOL_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  product_code        NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  pool_code           NUMBER not null,
  pool_name           VARCHAR2(100),
  pool_type           VARCHAR2(20),
  pool_limit          NUMBER,
  admin_percentage    NUMBER,
  contribution_amount NUMBER,
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  pool_category       VARCHAR2(20)
)
;
alter table GHAS_DOC_POOL_T
  add constraint PK_GHAS_DOC_POOL_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, POOL_CODE);
alter table GHAS_DOC_POOL_T
  add constraint FK_DOC_POOL_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_DOC_SUB_BENEFIT_MAP_T
prompt =========================================
prompt
create table GHAS_DOC_SUB_BENEFIT_MAP_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER,
  plan_code        NUMBER not null,
  gh_benefit_code  NUMBER not null,
  sub_ben_code     NUMBER not null,
  sub_ben_limit    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  room_type        VARCHAR2(20)
)
;
alter table GHAS_DOC_SUB_BENEFIT_MAP_T
  add constraint PK_GHAS_DOC_SUB_BENEFIT_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, PLAN_CODE, GH_BENEFIT_CODE, SUB_BEN_CODE);
alter table GHAS_DOC_SUB_BENEFIT_MAP_T
  add constraint FK_DOC_GH_DOC_BF_SUB_BF_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GHAS_MED_ENTITY_PLAN_MAP_T
prompt =========================================
prompt
create table GHAS_MED_ENTITY_PLAN_MAP_T
(
  org_id                  NUMBER not null,
  branch_id               VARCHAR2(10) not null,
  product_code            VARCHAR2(10) not null,
  sub_product_code        VARCHAR2(10) not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  plan_code               NUMBER not null,
  medical_entity_category VARCHAR2(50) not null,
  medical_entity          VARCHAR2(50),
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE
)
;
alter table GHAS_MED_ENTITY_PLAN_MAP_T
  add constraint PK_GHAS_MED_ENT_PLAN_MAP_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, PLAN_CODE, MEDICAL_ENTITY_CATEGORY);

prompt
prompt Creating table GHAS_PROD_PLANS_T
prompt ================================
prompt
create table GHAS_PROD_PLANS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  plan_description  VARCHAR2(200),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  plan_limit        NUMBER,
  plan_summary      VARCHAR2(500)
)
;
alter table GHAS_PROD_PLANS_T
  add constraint PK_GHAS_PROD_PLANS_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE);
alter table GHAS_PROD_PLANS_T
  add constraint FK_GLAS_SUB_PRODUCT_SETUP_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE)
  references GLAS_SUB_PRODUCT_SETUP_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE);

prompt
prompt Creating table GHAS_PROD_BENEFIT_T
prompt ==================================
prompt
create table GHAS_PROD_BENEFIT_T
(
  org_id                NUMBER not null,
  main_product_code     NUMBER not null,
  sub_product_code      NUMBER not null,
  plan_code             NUMBER not null,
  ih_benefit_code       NUMBER not null,
  benefit_limit         NUMBER,
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  benefit_type          VARCHAR2(50),
  wakala_percentage     NUMBER,
  commission_percentage NUMBER,
  peril_limit           NUMBER,
  limit_type            VARCHAR2(3),
  deductable_percentage NUMBER,
  ben_payment_basis     VARCHAR2(20),
  addition_charge_basis VARCHAR2(20)
)
;
alter table GHAS_PROD_BENEFIT_T
  add constraint PK_GHAS_PROD_BENEFIT_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);
alter table GHAS_PROD_BENEFIT_T
  add constraint FK_GHAS_PROD_PLANS_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE)
  references GHAS_PROD_PLANS_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE);

prompt
prompt Creating table GHAS_PROD_BEN_AGE_LIMIT_T
prompt ========================================
prompt
create table GHAS_PROD_BEN_AGE_LIMIT_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  ih_benefit_code   NUMBER not null,
  detail_code       NUMBER not null,
  relation          NUMBER,
  gender            VARCHAR2(10),
  max_age           NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  min_age           NUMBER
)
;
alter table GHAS_PROD_BEN_AGE_LIMIT_T
  add constraint PK_GHAS_PROD_BEN_AGE_LIMIT_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, DETAIL_CODE);
alter table GHAS_PROD_BEN_AGE_LIMIT_T
  add constraint FK_GHAS_PROD_BEN_AGE_LIMIT_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GHAS_PROD_BEN_CONDITION_T
prompt ========================================
prompt
create table GHAS_PROD_BEN_CONDITION_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  ih_benefit_code   NUMBER not null,
  cond_code         NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GHAS_PROD_BEN_CONDITION_T
  add constraint PK_PROD_BEN_CONDITION_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, COND_CODE);
alter table GHAS_PROD_BEN_CONDITION_T
  add constraint FK_GHAS_PROD_BEN_CONDITION_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GHAS_PROD_BEN_CONTR_T
prompt ====================================
prompt
create table GHAS_PROD_BEN_CONTR_T
(
  org_id                    NUMBER not null,
  main_product_code         NUMBER not null,
  sub_product_code          NUMBER not null,
  plan_code                 NUMBER not null,
  ih_benefit_code           NUMBER not null,
  detail_code               NUMBER not null,
  age_from                  NUMBER,
  age_to                    NUMBER,
  gender                    VARCHAR2(10),
  relation                  NUMBER,
  ben_contribution          NUMBER,
  wakala_amount             NUMBER,
  commission_amount         NUMBER,
  gross_contribution_amount NUMBER,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_updated_by           VARCHAR2(50),
  last_update_date          DATE
)
;
alter table GHAS_PROD_BEN_CONTR_T
  add constraint PK_PROD_GHAS_BEN_CONTR_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, DETAIL_CODE);
alter table GHAS_PROD_BEN_CONTR_T
  add constraint FK_PROD_GH_BF_CONT_DOC foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GHAS_PROD_BEN_EXCLUSION_T
prompt ========================================
prompt
create table GHAS_PROD_BEN_EXCLUSION_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  ih_benefit_code   NUMBER not null,
  exclusion_code    NUMBER not null,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GHAS_PROD_BEN_EXCLUSION_T
  add constraint PK_PROD_BEN_EXCLUSION_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, EXCLUSION_CODE);
alter table GHAS_PROD_BEN_EXCLUSION_T
  add constraint FK_GHAS_PROD_BEN_EXCLUSION_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GHAS_PROD_BEN_FAM_LIMIT_T
prompt ========================================
prompt
create table GHAS_PROD_BEN_FAM_LIMIT_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  ih_benefit_code   NUMBER not null,
  detail_code       NUMBER not null,
  relation_code     NUMBER,
  fam_benefit_limit NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GHAS_PROD_BEN_FAM_LIMIT_T
  add constraint PK_GHAS_PROD_BEN_FM_LM_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, DETAIL_CODE);
alter table GHAS_PROD_BEN_FAM_LIMIT_T
  add constraint FK_PROD_GH_DOC_BF_FAM_DOC foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GHAS_PROD_SUB_BENEFIT_MAP_T
prompt ==========================================
prompt
create table GHAS_PROD_SUB_BENEFIT_MAP_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  plan_code         NUMBER not null,
  ih_benefit_code   NUMBER not null,
  sub_ben_code      NUMBER not null,
  sub_ben_limit     NUMBER,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  room_type         VARCHAR2(20)
)
;
alter table GHAS_PROD_SUB_BENEFIT_MAP_T
  add constraint PK_GHAS_PROD_SUB_BENEFIT_T primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE, SUB_BEN_CODE);
alter table GHAS_PROD_SUB_BENEFIT_MAP_T
  add constraint FK_GHAS_PROD_BENEFIT_T foreign key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE)
  references GHAS_PROD_BENEFIT_T (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, PLAN_CODE, IH_BENEFIT_CODE);

prompt
prompt Creating table GLAS_ALTERATION_TYPE_SETUP_T
prompt ===========================================
prompt
create table GLAS_ALTERATION_TYPE_SETUP_T
(
  org_id             NUMBER not null,
  alteration_type    VARCHAR2(50) not null,
  description        VARCHAR2(1000),
  financial_tag      VARCHAR2(1),
  active             VARCHAR2(2),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  application_id     NUMBER not null,
  eff_date_editable  VARCHAR2(1),
  monthly_tag        VARCHAR2(1),
  group_code         NUMBER,
  category_code      NUMBER,
  event_code         NUMBER,
  report_path        VARCHAR2(300),
  effective_date_on  VARCHAR2(15),
  undwt_required_tag VARCHAR2(1),
  revise_il_tag      VARCHAR2(1),
  installment_tag    VARCHAR2(1)
)
;
alter table GLAS_ALTERATION_TYPE_SETUP_T
  add constraint PK_ALT_TYPE_SETUP primary key (ORG_ID, APPLICATION_ID, ALTERATION_TYPE);

prompt
prompt Creating table GLAS_DISEASE_SETUP_T
prompt ===================================
prompt
create table GLAS_DISEASE_SETUP_T
(
  org_id             NUMBER not null,
  disease_code       NUMBER not null,
  disease_desc       VARCHAR2(500),
  disease_short_desc VARCHAR2(50),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  disease_reference  VARCHAR2(10),
  disease_long_desc  VARCHAR2(500)
)
;
alter table GLAS_DISEASE_SETUP_T
  add constraint PK_DISEASE_SETUP_T primary key (ORG_ID, DISEASE_CODE);
alter table GLAS_DISEASE_SETUP_T
  add constraint FK_DISEASE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_BENEFIT_DISEASES_T
prompt ======================================
prompt
create table GLAS_BENEFIT_DISEASES_T
(
  org_id           NUMBER not null,
  benefit_code     NUMBER not null,
  disease_code     NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  application_id   NUMBER not null
)
;
alter table GLAS_BENEFIT_DISEASES_T
  add constraint GLAS_BENEFIT_DISEASES_T_PK primary key (ORG_ID, APPLICATION_ID, BENEFIT_CODE, DISEASE_CODE);
alter table GLAS_BENEFIT_DISEASES_T
  add constraint FK_BENEFIT_DIS_DISEASE foreign key (ORG_ID, DISEASE_CODE)
  references GLAS_DISEASE_SETUP_T (ORG_ID, DISEASE_CODE);

prompt
prompt Creating table GLAS_BENEFIT_SETUP_T
prompt ===================================
prompt
create table GLAS_BENEFIT_SETUP_T
(
  org_id                NUMBER not null,
  benefit_type_code     NUMBER,
  benefit_code          NUMBER not null,
  benefit_desc          VARCHAR2(200),
  short_name            VARCHAR2(50),
  age_from              NUMBER,
  age_to                NUMBER,
  remarks               VARCHAR2(200),
  ref_no                VARCHAR2(50),
  printing_order        NUMBER,
  payment_basis         VARCHAR2(5),
  si_percent            NUMBER,
  salary_percent        NUMBER,
  max_amount            NUMBER,
  min_amount            NUMBER,
  waiting_period_days   NUMBER,
  benefit_period_days   NUMBER,
  scheme_code           NUMBER,
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  active                VARCHAR2(1),
  nature_code           VARCHAR2(10),
  application_id        NUMBER not null,
  exclude_include_tag   VARCHAR2(1),
  is_maternity          VARCHAR2(1),
  quotation_rate_basis  VARCHAR2(2),
  calculation_type_il   NUMBER,
  include_in_tsar       VARCHAR2(1),
  calculation_type_tsar VARCHAR2(1),
  calculation_value     VARCHAR2(500),
  calculation_variable  VARCHAR2(500),
  input_basis           VARCHAR2(10),
  include_term          VARCHAR2(10),
  ttda_flag             VARCHAR2(1),
  annuity_tag           VARCHAR2(1),
  is_opd                VARCHAR2(20),
  edit_claim_amount     VARCHAR2(1),
  other_lang_desc       VARCHAR2(200)
)
;
alter table GLAS_BENEFIT_SETUP_T
  add constraint GLAS_BENEFIT_SETUP_T_PK primary key (ORG_ID, APPLICATION_ID, BENEFIT_CODE);

prompt
prompt Creating table GLAS_BROKER_SETUP_T
prompt ==================================
prompt
create table GLAS_BROKER_SETUP_T
(
  org_id           NUMBER not null,
  broker_code      NUMBER not null,
  description      VARCHAR2(500),
  short_desc       VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_BROKER_SETUP_T
  add constraint PK_BROKER_SETUP primary key (ORG_ID, BROKER_CODE);

prompt
prompt Creating table GLAS_CLIENT_ATTACHMENTS_T
prompt ========================================
prompt
create table GLAS_CLIENT_ATTACHMENTS_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  attachment_code  NUMBER not null,
  attachment_desc  VARCHAR2(50),
  file_path        VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_ATTACHMENTS_T
  add constraint PK_CLIENT_ATTACH_SETUP_T primary key (ORG_ID, CLIENT_CODE, ATTACHMENT_CODE);
alter table GLAS_CLIENT_ATTACHMENTS_T
  add constraint FK_CLIENT_ATTACH_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GL_BANK_SETUP_T
prompt ==============================
prompt
create table GL_BANK_SETUP_T
(
  org_id           NUMBER not null,
  bank_code        NUMBER not null,
  bank_name        VARCHAR2(200),
  abbreviation     VARCHAR2(20),
  bank_type        VARCHAR2(3),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GL_BANK_SETUP_T
  add constraint GL_BANK_SETUP_T_PK primary key (ORG_ID, BANK_CODE);
alter table GL_BANK_SETUP_T
  add constraint GL_BANK_SETUP_T_UK1 unique (BANK_NAME, ORG_ID);
alter table GL_BANK_SETUP_T
  add constraint GL_BANK_SETUP_T_UK2 unique (ABBREVIATION, BANK_CODE, BANK_NAME, ORG_ID);

prompt
prompt Creating table GL_BANK_BRANCH_SETUP_T
prompt =====================================
prompt
create table GL_BANK_BRANCH_SETUP_T
(
  org_id           NUMBER not null,
  bank_code        NUMBER not null,
  branch_code      NUMBER not null,
  branch_name      VARCHAR2(100),
  branch_address   VARCHAR2(500),
  branch_type      VARCHAR2(10),
  contact_number   VARCHAR2(20),
  fax_number       VARCHAR2(20),
  email            VARCHAR2(50),
  country          VARCHAR2(3),
  state            NUMBER,
  city             NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  contact_person   VARCHAR2(200)
)
;
alter table GL_BANK_BRANCH_SETUP_T
  add constraint GL_BANK_BRANCH_SETUP_T_PK primary key (ORG_ID, BANK_CODE, BRANCH_CODE);
alter table GL_BANK_BRANCH_SETUP_T
  add constraint GL_BANK_BRANCH_SETUP_T_FK1 foreign key (ORG_ID, BANK_CODE)
  references GL_BANK_SETUP_T (ORG_ID, BANK_CODE) on delete cascade;

prompt
prompt Creating table GLAS_CLIENT_BANK_T
prompt =================================
prompt
create table GLAS_CLIENT_BANK_T
(
  client_code      NUMBER,
  org_id           NUMBER,
  serial_no        NUMBER not null,
  bank_code        NUMBER,
  branch_code      NUMBER,
  account_no       VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  iban             VARCHAR2(50)
)
;
alter table GLAS_CLIENT_BANK_T
  add constraint PK_GLAS_CLIENT_BANK_T primary key (SERIAL_NO);
alter table GLAS_CLIENT_BANK_T
  add constraint FK_CLIENTBANK_BANK foreign key (ORG_ID, BANK_CODE)
  references GL_BANK_SETUP_T (ORG_ID, BANK_CODE);
alter table GLAS_CLIENT_BANK_T
  add constraint FK_CLIENTBANK_BRANCH foreign key (ORG_ID, BANK_CODE, BRANCH_CODE)
  references GL_BANK_BRANCH_SETUP_T (ORG_ID, BANK_CODE, BRANCH_CODE);

prompt
prompt Creating table TK_BRANCH_SETUP_T
prompt ================================
prompt
create table TK_BRANCH_SETUP_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  branch_desc       VARCHAR2(100),
  branch_short_code VARCHAR2(50),
  creation_date     DATE,
  created_by        VARCHAR2(50),
  last_update_date  DATE,
  last_updated_by   VARCHAR2(50),
  active            VARCHAR2(1),
  default_currency  VARCHAR2(5),
  region_id         NUMBER,
  bu                VARCHAR2(5),
  default_country   VARCHAR2(5)
)
;
alter table TK_BRANCH_SETUP_T
  add constraint PK_BRANCH_SETUP_T primary key (ORG_ID, BRANCH_ID);
alter table TK_BRANCH_SETUP_T
  add constraint FK_BRANCH_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_CLIENT_BRANCH_MAP_T
prompt =======================================
prompt
create table GLAS_CLIENT_BRANCH_MAP_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  branch_id        NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_BRANCH_MAP_T
  add constraint PK_CLIENT_BR_MAP_SETUP_T primary key (ORG_ID, CLIENT_CODE, BRANCH_ID);
alter table GLAS_CLIENT_BRANCH_MAP_T
  add constraint FK_CLIENTMAP_BRANCH foreign key (ORG_ID, BRANCH_ID)
  references TK_BRANCH_SETUP_T (ORG_ID, BRANCH_ID);
alter table GLAS_CLIENT_BRANCH_MAP_T
  add constraint FK_CLIENTMAP_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_BUS_UNIT_T
prompt =====================================
prompt
create table GLAS_CLIENT_BUS_UNIT_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  bus_unit_code    NUMBER not null,
  bus_unit_desc    VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  country_code     VARCHAR2(20),
  state_code       VARCHAR2(20),
  city_code        VARCHAR2(20)
)
;
alter table GLAS_CLIENT_BUS_UNIT_T
  add constraint PK_CLIENT_BUS_UNIT_SETUP_T primary key (ORG_ID, CLIENT_CODE, BUS_UNIT_CODE);
alter table GLAS_CLIENT_BUS_UNIT_T
  add constraint FK_CLIENTBUS_UNIT_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_CATEGORY_T
prompt =====================================
prompt
create table GLAS_CLIENT_CATEGORY_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  category_code    NUMBER not null,
  category_desc    VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_CATEGORY_T
  add constraint PK_CLIENT_CAT_SETUP_T primary key (ORG_ID, CLIENT_CODE, CATEGORY_CODE);
alter table GLAS_CLIENT_CATEGORY_T
  add constraint FK_CLIENTCAT_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_CONTACTPERSON_T
prompt ==========================================
prompt
create table GLAS_CLIENT_CONTACTPERSON_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  bus_unit_code    NUMBER not null,
  person_code      NUMBER not null,
  contact_name     VARCHAR2(200),
  designation      VARCHAR2(200),
  contact_type     VARCHAR2(1),
  mobile_no        VARCHAR2(50),
  email            VARCHAR2(50),
  landline_no      VARCHAR2(50),
  category         VARCHAR2(1),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  title_name       VARCHAR2(100)
)
;
alter table GLAS_CLIENT_CONTACTPERSON_T
  add constraint PK_CLIENT_CONTACT_PERSON primary key (ORG_ID, CLIENT_CODE, BUS_UNIT_CODE, PERSON_CODE);
alter table GLAS_CLIENT_CONTACTPERSON_T
  add constraint FK_CLIENT_CONTACT_PERSON foreign key (ORG_ID, CLIENT_CODE, BUS_UNIT_CODE)
  references GLAS_CLIENT_BUS_UNIT_T (ORG_ID, CLIENT_CODE, BUS_UNIT_CODE);

prompt
prompt Creating table GLAS_CLIENT_DESIGNATION_T
prompt ========================================
prompt
create table GLAS_CLIENT_DESIGNATION_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  designation_code NUMBER not null,
  designation_desc VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  category_code    NUMBER
)
;
alter table GLAS_CLIENT_DESIGNATION_T
  add constraint PK_CLIENT_DESIG_SETUP_T primary key (ORG_ID, CLIENT_CODE, DESIGNATION_CODE);
alter table GLAS_CLIENT_DESIGNATION_T
  add constraint FK_CLIENTDESIG_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_RECORDS_HEADER_T
prompt ===========================================
prompt
create table GLAS_CLIENT_RECORDS_HEADER_T
(
  org_id               NUMBER not null,
  client_code          NUMBER not null,
  header_id            NUMBER not null,
  effective_start_date DATE,
  effective_end_date   DATE,
  created_by           VARCHAR2(50),
  creation_date        DATE,
  last_updated_by      VARCHAR2(50),
  last_update_date     DATE
)
;
alter table GLAS_CLIENT_RECORDS_HEADER_T
  add constraint PK_GLAS_CLIENT_REC_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID);
alter table GLAS_CLIENT_RECORDS_HEADER_T
  add constraint FK_CLIENT_REC_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_EDU_HISTORY_T
prompt ========================================
prompt
create table GLAS_CLIENT_EDU_HISTORY_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  education_id     NUMBER not null,
  education_type   NUMBER,
  degree_name      VARCHAR2(200),
  institution_code VARCHAR2(200),
  passing_year     NUMBER,
  passing_grade    VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  header_id        NUMBER not null,
  passing_gpa      VARCHAR2(50)
)
;
alter table GLAS_CLIENT_EDU_HISTORY_T
  add constraint PK_GLAS_CLIENT_EDU_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID, EDUCATION_ID);
alter table GLAS_CLIENT_EDU_HISTORY_T
  add constraint FK_CLIENT_EDU_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CLIENT_EMP_DTL_T
prompt ====================================
prompt
create table GLAS_CLIENT_EMP_DTL_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  emp_det_code     NUMBER not null,
  emp_name         VARCHAR2(200),
  emp_dob          DATE,
  emp_number       VARCHAR2(50),
  emp_designation  VARCHAR2(200),
  cnic_no          VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  cnic_issue_date  DATE,
  cnic_expiry_date DATE,
  emp_father_name  VARCHAR2(100),
  emp_gender       VARCHAR2(1),
  emp_nationality  VARCHAR2(5)
)
;
alter table GLAS_CLIENT_EMP_DTL_T
  add constraint PK_GLAS_CLIENT_EMP_DTL_T primary key (ORG_ID, CLIENT_CODE, EMP_DET_CODE);
alter table GLAS_CLIENT_EMP_DTL_T
  add constraint FK_CLIENT_EMP_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_EMP_FAM_T
prompt ====================================
prompt
create table GLAS_CLIENT_EMP_FAM_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  emp_det_code     NUMBER not null,
  emp_fam_code     NUMBER not null,
  fam_name         VARCHAR2(200),
  fam_dob          DATE,
  relation_code    NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_EMP_FAM_T
  add constraint PK_GLAS_CLIENT_EMP_FAM_T primary key (ORG_ID, CLIENT_CODE, EMP_DET_CODE, EMP_FAM_CODE);

prompt
prompt Creating table GLAS_CLIENT_EMP_HISTORY_T
prompt ========================================
prompt
create table GLAS_CLIENT_EMP_HISTORY_T
(
  org_id            NUMBER not null,
  client_code       NUMBER not null,
  employment_id     NUMBER not null,
  employer_name     VARCHAR2(200),
  designation       VARCHAR2(50),
  from_date         DATE,
  to_date           DATE,
  is_current        VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  header_id         NUMBER,
  employment_status VARCHAR2(1)
)
;
alter table GLAS_CLIENT_EMP_HISTORY_T
  add constraint PK_GLAS_CLIENT_EMPLOY_T primary key (ORG_ID, CLIENT_CODE, EMPLOYMENT_ID);
alter table GLAS_CLIENT_EMP_HISTORY_T
  add constraint FK_CLIENT_EMPLOY_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CLIENT_FAMILY_HIST_T
prompt ========================================
prompt
create table GLAS_CLIENT_FAMILY_HIST_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  person_id        NUMBER not null,
  person_name      VARCHAR2(50),
  relation_code    NUMBER,
  age              NUMBER,
  cause_of_death   NUMBER,
  age_at_death     NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  died_tag         VARCHAR2(1)
)
;
alter table GLAS_CLIENT_FAMILY_HIST_T
  add constraint PK_GLAS_CLIENT_FM_HIST_T primary key (ORG_ID, CLIENT_CODE, PERSON_ID);
alter table GLAS_CLIENT_FAMILY_HIST_T
  add constraint FK_CLIENT_FM_HIST_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_FAM_MED_HIST_T
prompt =========================================
prompt
create table GLAS_CLIENT_FAM_MED_HIST_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  person_id        NUMBER not null,
  med_serial_no    NUMBER not null,
  disease_code     VARCHAR2(50),
  notes            VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_FAM_MED_HIST_T
  add constraint PK_GLAS_CLIENT_MED_HIST_T primary key (ORG_ID, CLIENT_CODE, PERSON_ID, MED_SERIAL_NO);
alter table GLAS_CLIENT_FAM_MED_HIST_T
  add constraint FK_CLIENT_MED_HIST_CLIENT foreign key (ORG_ID, CLIENT_CODE, PERSON_ID)
  references GLAS_CLIENT_FAMILY_HIST_T (ORG_ID, CLIENT_CODE, PERSON_ID);

prompt
prompt Creating table GLAS_CLIENT_GRADES_T
prompt ===================================
prompt
create table GLAS_CLIENT_GRADES_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  grade_code       NUMBER not null,
  grade_desc       VARCHAR2(200),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_GRADES_T
  add constraint PK_CLIENT_GRADE_SETUP_T primary key (ORG_ID, CLIENT_CODE, GRADE_CODE);
alter table GLAS_CLIENT_GRADES_T
  add constraint FK_CLIENTGRADE_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_IMMUNE_HIST_T
prompt ========================================
prompt
create table GLAS_CLIENT_IMMUNE_HIST_T
(
  org_id            NUMBER not null,
  client_code       NUMBER not null,
  header_id         NUMBER not null,
  immunization_id   NUMBER not null,
  immunization_type NUMBER,
  immunization_date DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  immunization_dose VARCHAR2(10)
)
;
alter table GLAS_CLIENT_IMMUNE_HIST_T
  add constraint PK_GLAS_CLIENT_IMMUNE_HIST_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID, IMMUNIZATION_ID);
alter table GLAS_CLIENT_IMMUNE_HIST_T
  add constraint FK_CLIENT_IMM_HIST_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CLIENT_PERS_INFO_T
prompt ======================================
prompt
create table GLAS_CLIENT_PERS_INFO_T
(
  org_id                  NUMBER not null,
  client_code             NUMBER not null,
  info_id                 NUMBER not null,
  first_name              VARCHAR2(50),
  middle_name             VARCHAR2(50),
  last_name               VARCHAR2(50),
  title                   VARCHAR2(10),
  gender                  VARCHAR2(10),
  father_name             VARCHAR2(50),
  maiden_name             VARCHAR2(50),
  place_of_birth          VARCHAR2(50),
  marital_status          VARCHAR2(10),
  no_of_dependents        NUMBER,
  nationality_code        VARCHAR2(10),
  religion_code           VARCHAR2(10),
  height                  NUMBER,
  weight                  NUMBER,
  bmi                     NUMBER,
  height_scale            VARCHAR2(10),
  weight_scale            VARCHAR2(10),
  cnic_no                 VARCHAR2(30),
  father_cnic_no          VARCHAR2(30),
  spouse_cnic_no          VARCHAR2(30),
  cnic_issue_date         DATE,
  father_cnic_issue_date  DATE,
  spouse_cnic_issue_date  DATE,
  cnic_expiry_date        DATE,
  father_cnic_expiry_date DATE,
  spouse_cnic_expiry_date DATE,
  dob                     DATE,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  nrp_tag                 VARCHAR2(10),
  passport_no             VARCHAR2(50),
  age                     NUMBER,
  header_id               NUMBER not null,
  waste                   NUMBER,
  waste_scale             VARCHAR2(10),
  mother_name             VARCHAR2(50),
  spouse_name             VARCHAR2(50),
  passing_gpa             VARCHAR2(50),
  country_of_birth        VARCHAR2(20),
  smoking_status          VARCHAR2(1)
)
;
alter table GLAS_CLIENT_PERS_INFO_T
  add constraint PK_GLAS_CLIENT_PERS_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID, INFO_ID);
alter table GLAS_CLIENT_PERS_INFO_T
  add constraint FK_CLIENT_PERS_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CLIENT_PROF_INFO_T
prompt ======================================
prompt
create table GLAS_CLIENT_PROF_INFO_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  info_id          NUMBER not null,
  occupation       VARCHAR2(50),
  band_code        VARCHAR2(50),
  annual_salary    NUMBER,
  working_tag      VARCHAR2(10),
  client_category  VARCHAR2(10),
  source_of_income VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  header_id        NUMBER not null
)
;
alter table GLAS_CLIENT_PROF_INFO_T
  add constraint PK_GLAS_CLIENT_PROF_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID, INFO_ID);
alter table GLAS_CLIENT_PROF_INFO_T
  add constraint FK_CLIENT_PROF_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CLIENT_SALARY_SLAB_T
prompt ========================================
prompt
create table GLAS_CLIENT_SALARY_SLAB_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  slab_code        NUMBER not null,
  slab_desc        VARCHAR2(200),
  min_salary       NUMBER(15,2),
  max_salary       NUMBER(15,2),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_CLIENT_SALARY_SLAB_T
  add constraint PK_CLIENT_SALARY_SLAB_SETUP_T primary key (ORG_ID, CLIENT_CODE, SLAB_CODE);
alter table GLAS_CLIENT_SALARY_SLAB_T
  add constraint FK_CLIENT_SALARY_CLIENT foreign key (ORG_ID, CLIENT_CODE)
  references GLAS_CLIENT_SETUP_T (ORG_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_CLIENT_SOCIAL_ACCOUNTS_T
prompt ============================================
prompt
create table GLAS_CLIENT_SOCIAL_ACCOUNTS_T
(
  org_id           NUMBER not null,
  client_code      NUMBER not null,
  account_id       NUMBER not null,
  account_type     NUMBER,
  account_desc     VARCHAR2(200),
  account_url      VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  header_id        NUMBER not null
)
;
alter table GLAS_CLIENT_SOCIAL_ACCOUNTS_T
  add constraint PK_GLAS_CLIENT_SCA_T primary key (ORG_ID, CLIENT_CODE, HEADER_ID, ACCOUNT_ID);
alter table GLAS_CLIENT_SOCIAL_ACCOUNTS_T
  add constraint FK_CLIENT_SCA_CLIENT_EFF foreign key (ORG_ID, CLIENT_CODE, HEADER_ID)
  references GLAS_CLIENT_RECORDS_HEADER_T (ORG_ID, CLIENT_CODE, HEADER_ID);

prompt
prompt Creating table GLAS_CONDITION_T
prompt ===============================
prompt
create table GLAS_CONDITION_T
(
  org_id            NUMBER not null,
  benefit_code      NUMBER not null,
  application_id    NUMBER not null,
  cond_code         NUMBER not null,
  default_tag       VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  cn_text_quotation VARCHAR2(4000),
  cn_text_policy    VARCHAR2(4000),
  active            VARCHAR2(5),
  print_order       VARCHAR2(5),
  cn_desc           VARCHAR2(150)
)
;
alter table GLAS_CONDITION_T
  add constraint PK_CONDITION primary key (ORG_ID, BENEFIT_CODE, APPLICATION_ID, COND_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_T
prompt ================================
prompt
create table GLAS_DOC_CLIENT_T
(
  org_id                     NUMBER not null,
  branch_id                  NUMBER not null,
  product_code               NUMBER not null,
  sub_product_code           NUMBER not null,
  takaful_type               VARCHAR2(1) not null,
  document_type              VARCHAR2(1) not null,
  document_no                VARCHAR2(10) not null,
  record_type                VARCHAR2(1) not null,
  document_year              VARCHAR2(10) not null,
  issue_count                NUMBER not null,
  endorsement_no             NUMBER not null,
  application_id             NUMBER not null,
  client_code                NUMBER not null,
  client_desc                VARCHAR2(500),
  client_short_desc          VARCHAR2(50),
  address                    VARCHAR2(200),
  email                      VARCHAR2(500),
  phone                      VARCHAR2(15),
  active                     VARCHAR2(1),
  client_type                VARCHAR2(10),
  age                        NUMBER(3),
  dob                        DATE,
  height                     NUMBER,
  weight                     NUMBER,
  bmi                        NUMBER,
  occupation                 NUMBER,
  vat_reg_no                 VARCHAR2(50),
  vat_reg_date               DATE,
  nature_of_business         VARCHAR2(10),
  name_in_arabic             NVARCHAR2(500),
  contact_person_name        VARCHAR2(500),
  contact_person_no          VARCHAR2(50),
  contact_person_designation VARCHAR2(200),
  group_code                 VARCHAR2(10),
  height_scale               VARCHAR2(10),
  weight_scale               VARCHAR2(10),
  title                      VARCHAR2(10),
  client_nature              VARCHAR2(10),
  band_code                  NUMBER,
  client_category            VARCHAR2(10),
  cnic_no                    VARCHAR2(50),
  cnic_issue_date            DATE,
  cnic_expiry_date           DATE,
  father_name                VARCHAR2(50),
  maiden_name                VARCHAR2(50),
  marital_status             VARCHAR2(10),
  place_of_birth             VARCHAR2(50),
  passport_no                VARCHAR2(50),
  no_of_dependents           NUMBER,
  nationality_code           VARCHAR2(10),
  religion_code              NUMBER,
  working_tag                VARCHAR2(1),
  first_name                 VARCHAR2(50),
  middle_name                VARCHAR2(50),
  last_name                  VARCHAR2(50),
  annual_salary              NUMBER,
  total_sar                  NUMBER,
  referral_source            NUMBER,
  referral_other             VARCHAR2(10),
  gender                     VARCHAR2(10),
  nrp_tag                    VARCHAR2(1),
  communication_channel      VARCHAR2(10),
  father_cnic_no             VARCHAR2(50),
  father_cnic_issue_date     DATE,
  father_cnic_expiry_date    DATE,
  spouse_cnic_no             VARCHAR2(50),
  spouse_cnic_issue_date     DATE,
  spouse_cnic_expiry_date    DATE,
  category_code              VARCHAR2(10),
  source_of_income           NUMBER,
  created_by                 VARCHAR2(50),
  creation_date              DATE,
  last_update_date           DATE,
  last_updated_by            VARCHAR2(50),
  credit_limit               NUMBER,
  credit_limit_days          NUMBER,
  credit_limit_tag           VARCHAR2(1)
)
;
alter table GLAS_DOC_CLIENT_T
  add constraint PK_DOC_CLIENT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_ADDRESS_T
prompt =================================
prompt
create table GLAS_DOC_ADDRESS_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  address_type     VARCHAR2(20) not null,
  address1         VARCHAR2(100),
  address2         VARCHAR2(100),
  city_code        VARCHAR2(10),
  state_code       VARCHAR2(10),
  country_code     VARCHAR2(10),
  zip_code         VARCHAR2(50),
  phone1           VARCHAR2(50),
  phone2           VARCHAR2(50),
  fax1             VARCHAR2(50),
  fax2             VARCHAR2(50),
  email            VARCHAR2(100),
  website          VARCHAR2(150),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  mobile_phone     NUMBER,
  home_phone       NUMBER,
  office_phone     NUMBER,
  house_no         VARCHAR2(50),
  unit_no          VARCHAR2(50),
  building         VARCHAR2(50)
)
;
alter table GLAS_DOC_ADDRESS_T
  add constraint PK_DOC_ADDRESS_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ADDRESS_TYPE);
alter table GLAS_DOC_ADDRESS_T
  add constraint FK_DOC_ADDR_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_AGENT_OVRD_T
prompt ====================================
prompt
create table GLAS_DOC_AGENT_OVRD_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  agent_code       NUMBER not null,
  supervisor_code  NUMBER,
  commission_rate  NUMBER(9,6),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  parent_agent     NUMBER
)
;
alter table GLAS_DOC_AGENT_OVRD_T
  add constraint PK_DOC_AGENT_OVERRD primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, AGENT_CODE, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_AGENT_T
prompt ===============================
prompt
create table GLAS_DOC_AGENT_T
(
  org_id              NUMBER not null,
  branch_id           NUMBER not null,
  product_code        NUMBER not null,
  sub_product_code    NUMBER not null,
  takaful_type        VARCHAR2(1) not null,
  document_type       VARCHAR2(1) not null,
  document_no         VARCHAR2(10) not null,
  record_type         VARCHAR2(1) not null,
  document_year       VARCHAR2(10) not null,
  issue_count         NUMBER not null,
  endorsement_no      NUMBER not null,
  application_id      NUMBER not null,
  agent_code          NUMBER not null,
  commission_rate     NUMBER(9,6),
  commission_flat_amt NUMBER(15,2),
  commission_amount   NUMBER(15,2),
  created_by          VARCHAR2(50),
  creation_date       DATE,
  last_updated_by     VARCHAR2(50),
  last_update_date    DATE,
  agency_type         VARCHAR2(20),
  commision_type      VARCHAR2(2),
  partner_id          NUMBER not null,
  channel_id          NUMBER not null,
  model_id            NUMBER not null,
  designation_id      NUMBER not null
)
;
alter table GLAS_DOC_AGENT_T
  add constraint PK_DOC_AGENT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, AGENT_CODE, PARTNER_ID, CHANNEL_ID, MODEL_ID, DESIGNATION_ID);
alter table GLAS_DOC_AGENT_T
  add constraint FK_DOC_AGENT_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_APPROVAL_HISTORY_T
prompt ==========================================
prompt
create table GLAS_DOC_APPROVAL_HISTORY_T
(
  org_id           NUMBER not null,
  branch_id        VARCHAR2(10) not null,
  product_code     VARCHAR2(10) not null,
  sub_product_code VARCHAR2(10) not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  serial_no        NUMBER not null,
  action           VARCHAR2(50),
  comments         VARCHAR2(500),
  approver         VARCHAR2(50),
  action_date      DATE,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  action_type      VARCHAR2(20)
)
;
alter table GLAS_DOC_APPROVAL_HISTORY_T
  add constraint PK_GLAS_DOC_APPR_HIST primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);

prompt
prompt Creating table GLAS_DOC_APPROVAL_T
prompt ==================================
prompt
create table GLAS_DOC_APPROVAL_T
(
  org_id           NUMBER not null,
  branch_id        VARCHAR2(10) not null,
  product_code     VARCHAR2(10) not null,
  sub_product_code VARCHAR2(10) not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  approval_order   NUMBER not null,
  approver         VARCHAR2(50),
  approval_status  VARCHAR2(20),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_APPROVAL_T
  add constraint PK_GLAS_DOC_APPR primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, APPROVAL_ORDER);

prompt
prompt Creating table GLAS_DOC_BENEFICIARY_T
prompt =====================================
prompt
create table GLAS_DOC_BENEFICIARY_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  product_code              NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  beneficiary_code          NUMBER not null,
  relation_code             NUMBER(9,6),
  percentage                NUMBER(15,2),
  amount                    NUMBER(15,2),
  cnic_no                   VARCHAR2(50),
  dob                       DATE,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  cnic_issue_date           DATE,
  cnic_expiry_date          DATE,
  beneficiary_name          VARCHAR2(50),
  is_guardian               VARCHAR2(1),
  guardian_name             VARCHAR2(50),
  guardian_relation_code    VARCHAR2(1),
  guardian_dob              DATE,
  guardian_cnic_no          VARCHAR2(50),
  guardian_cnic_issue_date  DATE,
  guardian_cnic_expiry_date DATE
)
;
alter table GLAS_DOC_BENEFICIARY_T
  add constraint PK_DOC_BENEFICIARY primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE);
alter table GLAS_DOC_BENEFICIARY_T
  add constraint FK_DOC_BENEFICIARY_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_BENEFIT_T
prompt =================================
prompt
create table GLAS_DOC_BENEFIT_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  product_code           NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  benefit_code           NUMBER not null,
  reinsurer_code         NUMBER,
  treaty_code            NUMBER,
  treaty_detail_code     NUMBER,
  rate_based_on          VARCHAR2(1),
  basic_benefit_tag      VARCHAR2(1),
  fcl_tag                VARCHAR2(1),
  quota_share            NUMBER,
  company_retention      NUMBER,
  commission_rate        NUMBER,
  age_from               NUMBER,
  age_to                 NUMBER,
  age_from_renewal       NUMBER,
  payment_basis          VARCHAR2(10),
  si_percent             NUMBER,
  salary_percent         NUMBER,
  max_amount             NUMBER,
  min_amount             NUMBER,
  waiting_period_days    NUMBER,
  benefit_period_days    NUMBER,
  scheme_code            NUMBER,
  salary_factor          NUMBER,
  loading_percent        NUMBER,
  free_cover_limit       NUMBER,
  net_rate               NUMBER,
  gross_rate             NUMBER,
  remarks                VARCHAR2(500),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  treaty_type            VARCHAR2(10),
  sum_insured_basis      VARCHAR2(10),
  flat_amount            NUMBER,
  percent_of_basic       NUMBER,
  sa_from                NUMBER,
  sa_to                  NUMBER,
  benefit_type           VARCHAR2(1),
  volume_discount        NUMBER,
  class_wise_loading     VARCHAR2(5),
  commision_amount       NUMBER,
  expense_margin_amount  NUMBER,
  net_contribution       NUMBER,
  gross_contribution     NUMBER,
  quota_share_limit      NUMBER,
  treaty_limit           NUMBER,
  claim_loading          NUMBER,
  claim_discount         NUMBER,
  q_net_rate             NUMBER,
  q_gross_rate           NUMBER,
  benefit_total_sa       NUMBER,
  basic_benefit_sa       NUMBER,
  rate_based_on_basic_sa NUMBER,
  monthly_max_amount     NUMBER
)
;
alter table GLAS_DOC_BENEFIT_T
  add constraint PK_DOC_BENEFIT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE);
alter table GLAS_DOC_BENEFIT_T
  add constraint FK_DOC_BENEFIT_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_BENEFIT_CAT_SALARY_T
prompt ============================================
prompt
create table GLAS_DOC_BENEFIT_CAT_SALARY_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  benefit_code       NUMBER not null,
  category_code      NUMBER not null,
  slab_code          NUMBER not null,
  rate_type          VARCHAR2(2),
  rate_value         NUMBER,
  min_rate           NUMBER,
  max_rate           NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  min_salary         NUMBER,
  max_salary         NUMBER,
  monthly_max_amount NUMBER
)
;
alter table GLAS_DOC_BENEFIT_CAT_SALARY_T
  add constraint PK_DOC_BENEFIT_CAT_SAL primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE, CATEGORY_CODE, SLAB_CODE);
alter table GLAS_DOC_BENEFIT_CAT_SALARY_T
  add constraint FK_DOC_BF_CAT_SAL_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE)
  references GLAS_DOC_BENEFIT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE);

prompt
prompt Creating table GLAS_DOC_BENEFIT_CAT_T
prompt =====================================
prompt
create table GLAS_DOC_BENEFIT_CAT_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  benefit_code       NUMBER not null,
  category_code      NUMBER not null,
  rate_type          VARCHAR2(2),
  rate_value         NUMBER,
  min_rate           NUMBER,
  max_rate           NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  monthly_max_amount NUMBER
)
;
alter table GLAS_DOC_BENEFIT_CAT_T
  add constraint PK_GLAS_DOC_BENEFIT_CAT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE, CATEGORY_CODE);
alter table GLAS_DOC_BENEFIT_CAT_T
  add constraint FK_GLAS_DOC_BENEFIT_CAT foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE)
  references GLAS_DOC_BENEFIT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE);

prompt
prompt Creating table GLAS_DOC_BENEFIT_RATES_T
prompt =======================================
prompt
create table GLAS_DOC_BENEFIT_RATES_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  benefit_code     NUMBER not null,
  rate_code        NUMBER not null,
  gender           VARCHAR2(5),
  age_to           NUMBER,
  age_from         NUMBER,
  rate             NUMBER(9,6),
  flat_amount      NUMBER(15,2),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  mortality_rate   NUMBER
)
;
alter table GLAS_DOC_BENEFIT_RATES_T
  add constraint PK_GLAS_DOC_BENEFIT_RATES primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE, RATE_CODE);
alter table GLAS_DOC_BENEFIT_RATES_T
  add constraint FK_GLAS_DOC_BENEFIT_RATES foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE)
  references GLAS_DOC_BENEFIT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE);

prompt
prompt Creating table GLAS_DOC_BENEFIT_SALARY_T
prompt ========================================
prompt
create table GLAS_DOC_BENEFIT_SALARY_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  benefit_code       NUMBER not null,
  slab_code          NUMBER not null,
  rate_type          VARCHAR2(2),
  rate_value         NUMBER,
  min_rate           NUMBER,
  max_rate           NUMBER,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE,
  min_salary         NUMBER,
  max_salary         NUMBER,
  monthly_max_amount NUMBER
)
;
alter table GLAS_DOC_BENEFIT_SALARY_T
  add constraint GLAS_DOC_BENEFIT_SALARY_T_PK primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, TAKAFUL_TYPE, SUB_PRODUCT_CODE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE, SLAB_CODE);
alter table GLAS_DOC_BENEFIT_SALARY_T
  add constraint FK_DOC_BF_SALARY_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE)
  references GLAS_DOC_BENEFIT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFIT_CODE);

prompt
prompt Creating table TK_CHARGES_SETUP_T
prompt =================================
prompt
create table TK_CHARGES_SETUP_T
(
  org_id            NUMBER not null,
  charge_code       NUMBER not null,
  charge_desc       VARCHAR2(500),
  charge_rate       NUMBER(9,6),
  charge_flat_amt   NUMBER(15,2),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  charge_type       VARCHAR2(5),
  remarks           VARCHAR2(200),
  charge_rate_type  VARCHAR2(2),
  charge_nature     VARCHAR2(5),
  charge_frequency  VARCHAR2(5),
  charge_gl         VARCHAR2(5),
  charge_applied_on VARCHAR2(5),
  prepaid_tag       VARCHAR2(1),
  policy_tag        VARCHAR2(1)
)
;
alter table TK_CHARGES_SETUP_T
  add constraint PK_TK_CHARGE_SETUP_T primary key (ORG_ID, CHARGE_CODE);
alter table TK_CHARGES_SETUP_T
  add constraint FK_CHARGE_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_DOC_CHARGES_T
prompt =================================
prompt
create table GLAS_DOC_CHARGES_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  charge_code      NUMBER not null,
  charge_rate      NUMBER(9,6),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  charges_amount   NUMBER
)
;
alter table GLAS_DOC_CHARGES_T
  add constraint PK_DOC_CHARGES primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CHARGE_CODE);
alter table GLAS_DOC_CHARGES_T
  add constraint FK_DOC_CHARGES_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);
alter table GLAS_DOC_CHARGES_T
  add constraint FK_DOC_CHARGE_CHARGE foreign key (ORG_ID, CHARGE_CODE)
  references TK_CHARGES_SETUP_T (ORG_ID, CHARGE_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_ATTACH_T
prompt =======================================
prompt
create table GLAS_DOC_CLIENT_ATTACH_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  attachment_code  NUMBER not null,
  attachment_desc  VARCHAR2(50),
  file_path        VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLIENT_ATTACH_T
  add constraint PK_DOC_CLIENT_ATTCH primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ATTACHMENT_CODE);
alter table GLAS_DOC_CLIENT_ATTACH_T
  add constraint FK_DOC_CLIENT_ATTCH_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_BANK_T
prompt =====================================
prompt
create table GLAS_DOC_CLIENT_BANK_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  serial_no        NUMBER not null,
  bank_code        NUMBER,
  branch_code      NUMBER,
  account_no       VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  iban             VARCHAR2(50)
)
;
alter table GLAS_DOC_CLIENT_BANK_T
  add constraint PK_DOC_CLIENT_BANK_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, SERIAL_NO);
alter table GLAS_DOC_CLIENT_BANK_T
  add constraint FK_DOC_CL_BANK_BANK foreign key (ORG_ID, BANK_CODE)
  references GL_BANK_SETUP_T (ORG_ID, BANK_CODE);
alter table GLAS_DOC_CLIENT_BANK_T
  add constraint FK_DOC_CL_BANK_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_BNF_ATT_T
prompt ========================================
prompt
create table GLAS_DOC_CLIENT_BNF_ATT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  beneficiary_code NUMBER not null,
  attachment_code  NUMBER not null,
  attachment_desc  VARCHAR2(50),
  file_path        VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLIENT_BNF_ATT_T
  add constraint PK_DOC_CLIENT_BNF_ATT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE, ATTACHMENT_CODE);
alter table GLAS_DOC_CLIENT_BNF_ATT_T
  add constraint FK_DOC_CLIENT_BNF_ATT_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE)
  references GLAS_DOC_BENEFICIARY_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, BENEFICIARY_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_EDU_HISTORY_T
prompt ============================================
prompt
create table GLAS_DOC_CLIENT_EDU_HISTORY_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  education_id     NUMBER not null,
  education_type   NUMBER,
  degree_name      VARCHAR2(200),
  institution_code VARCHAR2(200),
  passing_year     NUMBER,
  passing_grade    VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  passing_gpa      VARCHAR2(50)
)
;
alter table GLAS_DOC_CLIENT_EDU_HISTORY_T
  add constraint PK_DOC_CLIENT_EDU_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, EDUCATION_ID);
alter table GLAS_DOC_CLIENT_EDU_HISTORY_T
  add constraint FK_DOC_CL_EDU_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_EMP_HIST_T
prompt =========================================
prompt
create table GLAS_DOC_CLIENT_EMP_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  product_code      NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  employment_id     NUMBER not null,
  employer_name     VARCHAR2(200),
  designation       VARCHAR2(50),
  from_date         DATE,
  to_date           DATE,
  is_current        VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  employment_status VARCHAR2(1)
)
;
alter table GLAS_DOC_CLIENT_EMP_HIST_T
  add constraint PK_DOC_CLIENT_EMPLOY_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, EMPLOYMENT_ID);
alter table GLAS_DOC_CLIENT_EMP_HIST_T
  add constraint FK_DOC_CL_EMP_HIST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_FAM_HIST_T
prompt =========================================
prompt
create table GLAS_DOC_CLIENT_FAM_HIST_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  person_id        NUMBER not null,
  person_name      VARCHAR2(50),
  relation_code    NUMBER,
  age              NUMBER,
  cause_of_death   NUMBER,
  age_at_death     NUMBER,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  died_tag         VARCHAR2(1)
)
;
alter table GLAS_DOC_CLIENT_FAM_HIST_T
  add constraint PK_DOC_CLIENT_FM_HIST_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID);
alter table GLAS_DOC_CLIENT_FAM_HIST_T
  add constraint FK_DOC_CL_FAM_HIST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_IMMN_HIST_T
prompt ==========================================
prompt
create table GLAS_DOC_CLIENT_IMMN_HIST_T
(
  org_id            NUMBER not null,
  branch_id         NUMBER not null,
  product_code      NUMBER not null,
  sub_product_code  NUMBER not null,
  takaful_type      VARCHAR2(1) not null,
  document_type     VARCHAR2(1) not null,
  document_no       VARCHAR2(10) not null,
  record_type       VARCHAR2(1) not null,
  document_year     VARCHAR2(10) not null,
  issue_count       NUMBER not null,
  endorsement_no    NUMBER not null,
  application_id    NUMBER not null,
  client_code       NUMBER not null,
  immunization_id   NUMBER not null,
  immunization_type NUMBER,
  immunization_date DATE,
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  immunization_dose VARCHAR2(10)
)
;
alter table GLAS_DOC_CLIENT_IMMN_HIST_T
  add constraint PK_DOC_CLIENT_IMMUNE_HIST_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, IMMUNIZATION_ID);
alter table GLAS_DOC_CLIENT_IMMN_HIST_T
  add constraint FK_DOC_CL_IMMU_HIST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_NOMINEE_T
prompt =================================
prompt
create table GLAS_DOC_NOMINEE_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  product_code              NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  nominee_code              NUMBER not null,
  relation_code             NUMBER(9,6),
  percentage                NUMBER(15,2),
  amount                    NUMBER(15,2),
  cnic_no                   VARCHAR2(50),
  dob                       DATE,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  cnic_issue_date           DATE,
  cnic_expiry_date          DATE,
  nominee_name              VARCHAR2(50),
  is_guardian               VARCHAR2(1),
  guardian_name             VARCHAR2(50),
  guardian_relation_code    VARCHAR2(1),
  guardian_dob              DATE,
  guardian_cnic_no          VARCHAR2(50),
  guardian_cnic_issue_date  DATE,
  guardian_cnic_expiry_date DATE
)
;
alter table GLAS_DOC_NOMINEE_T
  add constraint PK_DOC_NOMINEE primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE);
alter table GLAS_DOC_NOMINEE_T
  add constraint FK_DOC_NOMINEE_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_CLIENT_NOM_ATT_T
prompt ========================================
prompt
create table GLAS_DOC_CLIENT_NOM_ATT_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  nominee_code     NUMBER not null,
  attachment_code  NUMBER not null,
  attachment_desc  VARCHAR2(50),
  file_path        VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLIENT_NOM_ATT_T
  add constraint PK_DOC_CLIENT_NOM_ATT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE, ATTACHMENT_CODE);
alter table GLAS_DOC_CLIENT_NOM_ATT_T
  add constraint FK_DOC_CLIENT_NOM_ATT_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE)
  references GLAS_DOC_NOMINEE_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, NOMINEE_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_PERS_INFO_T
prompt ==========================================
prompt
create table GLAS_DOC_CLIENT_PERS_INFO_T
(
  org_id                  NUMBER not null,
  branch_id               NUMBER not null,
  product_code            NUMBER not null,
  sub_product_code        NUMBER not null,
  takaful_type            VARCHAR2(1) not null,
  document_type           VARCHAR2(1) not null,
  document_no             VARCHAR2(10) not null,
  record_type             VARCHAR2(1) not null,
  document_year           VARCHAR2(10) not null,
  issue_count             NUMBER not null,
  endorsement_no          NUMBER not null,
  application_id          NUMBER not null,
  client_code             NUMBER not null,
  info_id                 NUMBER not null,
  first_name              VARCHAR2(50),
  middle_name             VARCHAR2(50),
  last_name               VARCHAR2(50),
  title                   VARCHAR2(10),
  gender                  VARCHAR2(10),
  father_name             VARCHAR2(50),
  maiden_name             VARCHAR2(50),
  place_of_birth          VARCHAR2(50),
  marital_status          VARCHAR2(10),
  no_of_dependents        NUMBER,
  nationality_code        VARCHAR2(10),
  religion_code           VARCHAR2(10),
  height                  NUMBER,
  weight                  NUMBER,
  bmi                     NUMBER,
  height_scale            VARCHAR2(10),
  weight_scale            VARCHAR2(10),
  cnic_no                 VARCHAR2(30),
  father_cnic_no          VARCHAR2(30),
  spouse_cnic_no          VARCHAR2(30),
  cnic_issue_date         DATE,
  father_cnic_issue_date  DATE,
  spouse_cnic_issue_date  DATE,
  cnic_expiry_date        DATE,
  father_cnic_expiry_date DATE,
  spouse_cnic_expiry_date DATE,
  dob                     DATE,
  created_by              VARCHAR2(50),
  creation_date           DATE,
  last_updated_by         VARCHAR2(50),
  last_update_date        DATE,
  nrp_tag                 VARCHAR2(10),
  passport_no             VARCHAR2(50),
  age                     NUMBER,
  waste                   NUMBER,
  waste_scale             VARCHAR2(10),
  mother_name             VARCHAR2(50),
  spouse_name             VARCHAR2(50),
  passing_gpa             VARCHAR2(50),
  country_of_birth        VARCHAR2(20),
  smoking_status          VARCHAR2(1)
)
;
alter table GLAS_DOC_CLIENT_PERS_INFO_T
  add constraint PK_DOC_CLIENT_PERS_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, INFO_ID);
alter table GLAS_DOC_CLIENT_PERS_INFO_T
  add constraint FK_DOC_CL_PERS_INFO_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_PROF_INFO_T
prompt ==========================================
prompt
create table GLAS_DOC_CLIENT_PROF_INFO_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  info_id          NUMBER not null,
  occupation       VARCHAR2(50),
  band_code        VARCHAR2(50),
  annual_salary    NUMBER,
  working_tag      VARCHAR2(10),
  client_category  VARCHAR2(10),
  source_of_income VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLIENT_PROF_INFO_T
  add constraint PK_DOC_CLIENT_PROF_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, INFO_ID);
alter table GLAS_DOC_CLIENT_PROF_INFO_T
  add constraint FK_DOC_CL_PROF_INFO_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLIENT_SOCIAL_ACC_T
prompt ===========================================
prompt
create table GLAS_DOC_CLIENT_SOCIAL_ACC_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  account_id       NUMBER not null,
  account_type     NUMBER,
  account_desc     VARCHAR2(200),
  account_url      VARCHAR2(200),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLIENT_SOCIAL_ACC_T
  add constraint PK_DOC_CLIENT_SCA_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, ACCOUNT_ID);
alter table GLAS_DOC_CLIENT_SOCIAL_ACC_T
  add constraint FK_DOC_CL_SOC_ACC_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE)
  references GLAS_DOC_CLIENT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE);

prompt
prompt Creating table GLAS_DOC_CLNT_FAM_MED_HIST_T
prompt ===========================================
prompt
create table GLAS_DOC_CLNT_FAM_MED_HIST_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  client_code      NUMBER not null,
  person_id        NUMBER not null,
  med_serial_no    NUMBER not null,
  disease_code     VARCHAR2(50),
  notes            VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_CLNT_FAM_MED_HIST_T
  add constraint PK_DOC_CL_FM_MD_HIST primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID, MED_SERIAL_NO);
alter table GLAS_DOC_CLNT_FAM_MED_HIST_T
  add constraint FK_DOC_CL_FM_MD_HST foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID)
  references GLAS_DOC_CLIENT_FAM_HIST_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CLIENT_CODE, PERSON_ID);

prompt
prompt Creating table GLAS_DOC_COINSURER_T
prompt ===================================
prompt
create table GLAS_DOC_COINSURER_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER,
  endorsement_no   NUMBER,
  application_id   NUMBER,
  coinsurer_code   NUMBER not null,
  coinsurer_share  NUMBER(9,6),
  coinsurer_amount NUMBER(15,2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_update_date DATE,
  last_updated_by  VARCHAR2(50),
  coinsurer_type   VARCHAR2(1)
)
;
alter table GLAS_DOC_COINSURER_T
  add constraint PK_DOC_COINSURER primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, COINSURER_CODE);
alter table GLAS_DOC_COINSURER_T
  add constraint FK_DOC_COIN_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_COMMISSION_CYCLE_T
prompt ==========================================
prompt
create table GLAS_DOC_COMMISSION_CYCLE_T
(
  org_id                NUMBER not null,
  branch_id             NUMBER not null,
  serial_no             NUMBER not null,
  commission_cycle_id   NUMBER not null,
  product_code          NUMBER not null,
  sub_product_code      NUMBER not null,
  takaful_type          VARCHAR2(1) not null,
  document_type         VARCHAR2(1) not null,
  document_no           VARCHAR2(10) not null,
  record_type           VARCHAR2(1) not null,
  document_year         VARCHAR2(10) not null,
  issue_count           NUMBER not null,
  endorsement_no        NUMBER not null,
  application_id        NUMBER not null,
  agent_code            NUMBER not null,
  commission_rate       NUMBER(9,6),
  commission_flat_amt   NUMBER(15,2),
  commission_amount     NUMBER(15,2),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  agency_type           VARCHAR2(20),
  shares                NUMBER,
  gross_contribution    NUMBER,
  activity_type         VARCHAR2(100),
  comm_percent_share    NUMBER,
  gdh_doc_reference_no  VARCHAR2(50),
  activity_date         DATE,
  posting_tag           VARCHAR2(50),
  posted_by             VARCHAR2(50),
  posted_date           DATE,
  contribution_received NUMBER,
  comm_settled          NUMBER,
  installment_no        NUMBER not null,
  hold_flag             VARCHAR2(5),
  hold_by               VARCHAR2(50),
  hold_date             DATE,
  hold_comment          VARCHAR2(500),
  release_comment       VARCHAR2(500),
  commissionable_gross  NUMBER
)
;
alter table GLAS_DOC_COMMISSION_CYCLE_T
  add constraint PK_DOC_COMMISION primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, INSTALLMENT_NO, SERIAL_NO, COMMISSION_CYCLE_ID);

prompt
prompt Creating table GLAS_DOC_CONDITIONS_MAP_T
prompt ========================================
prompt
create table GLAS_DOC_CONDITIONS_MAP_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  cn_code          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  default_tag      VARCHAR2(1)
)
;
alter table GLAS_DOC_CONDITIONS_MAP_T
  add constraint GLAS_DOC_CONDITIONS_MAP_PK primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, CN_CODE);
alter table GLAS_DOC_CONDITIONS_MAP_T
  add constraint FK_DOC_COND_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_EXCULUSION_MAP_T
prompt ========================================
prompt
create table GLAS_DOC_EXCULUSION_MAP_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  ex_code          NUMBER not null,
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  default_tag      VARCHAR2(1)
)
;
alter table GLAS_DOC_EXCULUSION_MAP_T
  add constraint GLAS_DOC_EXCULUSION_MAP_PK primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, EX_CODE);
alter table GLAS_DOC_EXCULUSION_MAP_T
  add constraint FK_DOC_EXCL_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_EXPENSE_MARGIN_T
prompt ========================================
prompt
create table GLAS_DOC_EXPENSE_MARGIN_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  margin_code      NUMBER not null,
  loading_percent  NUMBER(9,6),
  loading_amount   NUMBER(15,2),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_EXPENSE_MARGIN_T
  add constraint PK_DOC_EXP_M primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, MARGIN_CODE);
alter table GLAS_DOC_EXPENSE_MARGIN_T
  add constraint FK_DOC_EXP_MARGIN_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_INSTALLMENTS_T
prompt ======================================
prompt
create table GLAS_DOC_INSTALLMENTS_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  product_code             NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  serial_no                NUMBER not null,
  due_date                 DATE,
  gross_contribution       VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  quota_share_contribution VARCHAR2(50),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  osf                      NUMBER,
  ptf                      NUMBER,
  period_end_date          DATE,
  installment_days         NUMBER,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  special_discount         NUMBER,
  gross_cont_after_disc    NUMBER,
  received_amount          NUMBER,
  installment_type         VARCHAR2(1),
  discount_with_no_wakala  NUMBER,
  commission_amount        NUMBER
)
;
alter table GLAS_DOC_INSTALLMENTS_T
  add constraint PK_DOC_INSTALLMENTS primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table GLAS_DOC_INSTALLMENTS_T
  add constraint FK_DOC_INST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_INSURED_BENEFICIARY_T
prompt =============================================
prompt
create table GLAS_DOC_INSURED_BENEFICIARY_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  product_code              NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  item_no                   NUMBER not null,
  beneficiary_code          NUMBER not null,
  relation_code             NUMBER(9,6),
  percentage                NUMBER(15,2),
  amount                    NUMBER(15,2),
  cnic_no                   VARCHAR2(50),
  dob                       DATE,
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  cnic_issue_date           DATE,
  cnic_expiry_date          DATE,
  beneficiary_name          VARCHAR2(50),
  is_guardian               VARCHAR2(1),
  guardian_name             VARCHAR2(50),
  guardian_relation_code    VARCHAR2(10),
  guardian_dob              DATE,
  guardian_cnic_no          VARCHAR2(50),
  guardian_cnic_issue_date  DATE,
  guardian_cnic_expiry_date DATE,
  mobile_no                 VARCHAR2(30),
  beneficiary_email         VARCHAR2(50),
  age                       NUMBER(3)
)
;
alter table GLAS_DOC_INSURED_BENEFICIARY_T
  add constraint PK_DOC_INSURED_BENEFICIARY primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFICIARY_CODE);

prompt
prompt Creating table GLAS_DOC_INSURED_ITEMS_T
prompt =======================================
prompt
create table GLAS_DOC_INSURED_ITEMS_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  product_code           NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  item_no                NUMBER not null,
  item_type              VARCHAR2(1),
  insured_id             NUMBER,
  first_name             VARCHAR2(50),
  father_name            VARCHAR2(50),
  last_name              VARCHAR2(50),
  gender                 VARCHAR2(1),
  nationality_code       VARCHAR2(5),
  date_of_birth          DATE,
  joining_date           DATE,
  effective_date         DATE,
  designation_code       NUMBER,
  category_code          NUMBER,
  salary                 NUMBER,
  sum_insured            NUMBER,
  item_branch_id         NUMBER,
  life_class             NUMBER,
  accidental_class       NUMBER,
  account_no             VARCHAR2(50),
  loan_period            NUMBER,
  personal_id            VARCHAR2(50),
  remarks                VARCHAR2(500),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  height                 NUMBER,
  weight                 NUMBER,
  bmi                    NUMBER,
  smoker_type            VARCHAR2(1),
  over_age_tag           VARCHAR2(1),
  below_age_tag          VARCHAR2(1),
  over_fcl_tag           VARCHAR2(1),
  below_fcl_tag          VARCHAR2(1),
  fcl                    NUMBER(15,2),
  decision_type          NUMBER,
  basic_contribution     NUMBER(15,2),
  gross_contribution     NUMBER(15,2),
  age                    NUMBER(3),
  retirement_date        DATE,
  cnic                   VARCHAR2(50),
  cnic_issue_date        DATE,
  cnic_expiry_date       DATE,
  employee_email_address VARCHAR2(200),
  employee_contact       NUMBER,
  relation_code          NUMBER,
  plan_code              NUMBER,
  is_over_age            VARCHAR2(1),
  cnic_no                VARCHAR2(50),
  starttime              NUMBER,
  starttimeam            VARCHAR2(1),
  approved_sa            NUMBER,
  decision_code          VARCHAR2(50),
  bank_name              VARCHAR2(50),
  item_status            VARCHAR2(1),
  occupational_class     VARCHAR2(10),
  net_contribution       NUMBER,
  wakala_fee             NUMBER,
  retakaful_contribution NUMBER,
  policy_item            VARCHAR2(1),
  approved_uw_sa         NUMBER,
  retakaful_sa           NUMBER,
  counter_offer_tag      VARCHAR2(1),
  uw_mandatory           VARCHAR2(1),
  folio_no               NUMBER,
  marital_status         VARCHAR2(5),
  commission_amount      NUMBER
)
;
alter table GLAS_DOC_INSURED_ITEMS_T
  add constraint PK_DOC_INS_ITEMS primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);
alter table GLAS_DOC_INSURED_ITEMS_T
  add constraint FK_DOC_INS_ITEMS_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_INSURED_BENEFIT_T
prompt =========================================
prompt
create table GLAS_DOC_INSURED_BENEFIT_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  product_code             NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  item_no                  NUMBER not null,
  benefit_code             NUMBER not null,
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  sum_assured              NUMBER(15,2),
  basic_contribution       NUMBER(15,2),
  gross_contribution       NUMBER(15,2),
  calculated_sa            NUMBER(15,2),
  net_rate                 NUMBER,
  net_contribution         NUMBER,
  gross_rate               NUMBER,
  retention_sa             NUMBER,
  retention_contribution   NUMBER,
  quota_share_sa           NUMBER,
  quota_share_contribution NUMBER,
  actual_ri_rate           NUMBER,
  basic_sa                 NUMBER,
  gr_as_per_bsa            NUMBER,
  item_effective_days      NUMBER,
  doc_total_days           NUMBER,
  commission_amount        NUMBER
)
;
alter table GLAS_DOC_INSURED_BENEFIT_T
  add constraint PK_DOC_INS_BENEFIT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFIT_CODE);
alter table GLAS_DOC_INSURED_BENEFIT_T
  add constraint FK_DOC_INS_BF_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO)
  references GLAS_DOC_INSURED_ITEMS_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_INSURED_BENEFIT_UW_T
prompt ============================================
prompt
create table GLAS_DOC_INSURED_BENEFIT_UW_T
(
  org_id                      NUMBER not null,
  branch_id                   NUMBER not null,
  product_code                NUMBER not null,
  sub_product_code            NUMBER not null,
  takaful_type                VARCHAR2(1) not null,
  document_type               VARCHAR2(1) not null,
  document_no                 VARCHAR2(10) not null,
  record_type                 VARCHAR2(1) not null,
  document_year               VARCHAR2(10) not null,
  issue_count                 NUMBER not null,
  endorsement_no              NUMBER not null,
  application_id              NUMBER not null,
  item_no                     NUMBER not null,
  benefit_code                NUMBER not null,
  created_by                  VARCHAR2(50),
  creation_date               DATE,
  last_updated_by             VARCHAR2(50),
  last_update_date            DATE,
  sum_assured                 NUMBER(15,2),
  basic_contribution          NUMBER(15,2),
  gross_contribution          NUMBER(15,2),
  calculated_sa               NUMBER(15,2),
  net_rate                    NUMBER,
  net_contribution            NUMBER,
  gross_rate                  NUMBER,
  retention_sa                NUMBER,
  retention_contribution      NUMBER,
  quota_share_sa              NUMBER,
  quota_share_contribution    NUMBER,
  uw_loading_rate             NUMBER,
  uw_loading_contribution     NUMBER,
  total_gross_contribution    NUMBER,
  total_net_contribution      NUMBER,
  decision_code               VARCHAR2(50),
  actual_ri_rate              NUMBER,
  effective_date              DATE,
  gr_as_per_bsa               NUMBER,
  item_effective_days         NUMBER,
  doc_total_days              NUMBER,
  observation                 VARCHAR2(300),
  uw_loading_net_rate         NUMBER,
  uw_loading_gross_rate       NUMBER,
  uw_loading_net_contribution NUMBER,
  wakala_fee                  NUMBER
)
;
alter table GLAS_DOC_INSURED_BENEFIT_UW_T
  add constraint PK_DOC_INS_BENEFIT_UW primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFIT_CODE);
alter table GLAS_DOC_INSURED_BENEFIT_UW_T
  add constraint FK_DOC_INS_BF_DOC_UW foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO)
  references GLAS_DOC_INSURED_ITEMS_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_INSURED_ITEMS_LOG_T
prompt ===========================================
prompt
create table GLAS_DOC_INSURED_ITEMS_LOG_T
(
  org_id             NUMBER not null,
  branch_id          NUMBER not null,
  product_code       NUMBER not null,
  sub_product_code   NUMBER not null,
  takaful_type       VARCHAR2(1) not null,
  document_type      VARCHAR2(1) not null,
  document_no        VARCHAR2(10) not null,
  record_type        VARCHAR2(1) not null,
  document_year      VARCHAR2(10) not null,
  issue_count        NUMBER not null,
  endorsement_no     NUMBER not null,
  application_id     NUMBER not null,
  item_no            NUMBER not null,
  item_type          VARCHAR2(1),
  old_gender         VARCHAR2(1),
  old_date_of_birth  DATE,
  old_item_branch_id NUMBER,
  old_age            NUMBER(3),
  old_relation_code  NUMBER,
  old_plan_code      NUMBER,
  old_marital_status VARCHAR2(5),
  new_gender         VARCHAR2(1),
  new_date_of_birth  DATE,
  new_item_branch_id NUMBER,
  new_age            NUMBER(3),
  new_relation_code  NUMBER,
  new_plan_code      NUMBER,
  new_marital_status VARCHAR2(5),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_DOC_INSURED_ITEMS_LOG_T
  add constraint PK_DOC_INS_LOGS primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_INSURED_ITEMS_STG_T
prompt ===========================================
prompt
create table GLAS_DOC_INSURED_ITEMS_STG_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  product_code           NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  item_no                NUMBER not null,
  item_type              VARCHAR2(1),
  insured_id             NUMBER,
  first_name             VARCHAR2(50),
  father_name            VARCHAR2(50),
  last_name              VARCHAR2(50),
  gender                 VARCHAR2(1),
  nationality_code       VARCHAR2(5),
  date_of_birth          DATE,
  joining_date           DATE,
  effective_date         DATE,
  designation_code       NUMBER,
  category_code          NUMBER,
  salary                 NUMBER,
  sum_insured            NUMBER,
  item_branch_id         NUMBER,
  life_class             NUMBER,
  accidental_class       NUMBER,
  account_no             VARCHAR2(50),
  loan_period            NUMBER,
  personal_id            VARCHAR2(50),
  remarks                VARCHAR2(500),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  height                 NUMBER,
  weight                 NUMBER,
  bmi                    NUMBER,
  smoker_type            VARCHAR2(1),
  over_age_tag           VARCHAR2(1),
  below_age_tag          VARCHAR2(1),
  over_fcl_tag           VARCHAR2(1),
  below_fcl_tag          VARCHAR2(1),
  fcl                    NUMBER(15,2),
  decision_type          NUMBER,
  basic_contribution     NUMBER(15,2),
  gross_contribution     NUMBER(15,2),
  age                    NUMBER(3),
  retirement_date        DATE,
  cnic                   VARCHAR2(50),
  cnic_issue_date        DATE,
  cnic_expiry_date       DATE,
  employee_email_address VARCHAR2(200),
  employee_contact       NUMBER,
  relation_code          NUMBER,
  plan_code              NUMBER,
  is_over_age            VARCHAR2(1),
  cnic_no                VARCHAR2(50),
  starttime              NUMBER,
  starttimeam            VARCHAR2(1),
  approved_sa            NUMBER,
  decision_code          VARCHAR2(50),
  bank_name              VARCHAR2(50),
  item_status            VARCHAR2(1),
  occupational_class     VARCHAR2(10),
  net_contribution       NUMBER,
  wakala_fee             NUMBER,
  retakaful_contribution NUMBER,
  policy_item            VARCHAR2(1),
  approved_uw_sa         NUMBER,
  retakaful_sa           NUMBER,
  counter_offer_tag      VARCHAR2(1),
  uw_mandatory           VARCHAR2(1),
  folio_no               NUMBER,
  marital_status         VARCHAR2(5),
  commission_amount      NUMBER
)
;
alter table GLAS_DOC_INSURED_ITEMS_STG_T
  add constraint PK_DOC_INS_ITEMS_STG primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_INSURED_ITEM_DTL_T
prompt ==========================================
prompt
create table GLAS_DOC_INSURED_ITEM_DTL_T
(
  org_id                    NUMBER not null,
  branch_id                 NUMBER not null,
  product_code              NUMBER not null,
  sub_product_code          NUMBER not null,
  takaful_type              VARCHAR2(1) not null,
  document_type             VARCHAR2(1) not null,
  document_no               VARCHAR2(10) not null,
  record_type               VARCHAR2(1) not null,
  document_year             VARCHAR2(10) not null,
  issue_count               NUMBER not null,
  endorsement_no            NUMBER not null,
  application_id            NUMBER not null,
  item_no                   NUMBER not null,
  item_code                 NUMBER not null,
  item_name                 VARCHAR2(150),
  created_by                VARCHAR2(50),
  creation_date             DATE,
  last_update_date          DATE,
  last_updated_by           VARCHAR2(50),
  field1                    VARCHAR2(500),
  field2                    VARCHAR2(500),
  field3                    VARCHAR2(500),
  house_number              VARCHAR2(150) not null,
  postal_code               VARCHAR2(50),
  own_home                  VARCHAR2(1),
  cover_type                NUMBER,
  cover_start_date          DATE not null,
  property_type             NUMBER,
  no_of_bedroom             NUMBER,
  no_of_bathroom            NUMBER,
  no_of_othr_room           NUMBER,
  build_date                DATE,
  external_wall_made        NUMBER,
  roof_made                 NUMBER,
  roof_flat_percent         NUMBER,
  home_flooded              VARCHAR2(1),
  land_slipped              VARCHAR2(1),
  listed_building           VARCHAR2(1),
  no_of_person_18_and_above NUMBER,
  no_of_person_below_18     NUMBER,
  at_home_time              NUMBER,
  business_done_at_home     NUMBER,
  claim_in_last_5years      VARCHAR2(1),
  no_claim_period_building  NUMBER,
  no_claim_period_content   NUMBER,
  insured_title             NUMBER,
  insured_first_name        VARCHAR2(100),
  insured_sur_name          VARCHAR2(100),
  insured_dob               DATE,
  employment_status         NUMBER,
  is_joint_policy_holder    VARCHAR2(1),
  is_interested_party       VARCHAR2(1),
  payment_mode              NUMBER,
  email_address             VARCHAR2(150),
  mobile_number             VARCHAR2(50),
  promotional_code          VARCHAR2(150),
  travel_journey_type       NUMBER,
  travel_option             NUMBER,
  trvl_health_stmnt         VARCHAR2(1),
  aviva_policy              VARCHAR2(1),
  assumption_stmnt          VARCHAR2(1)
)
;
alter table GLAS_DOC_INSURED_ITEM_DTL_T
  add constraint PK_GL_DOC_INSURED_ITEM_DTL_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, ITEM_CODE);

prompt
prompt Creating table GLAS_DOC_INS_ITEMS_MONTHLY_T
prompt ===========================================
prompt
create table GLAS_DOC_INS_ITEMS_MONTHLY_T
(
  org_id                 NUMBER not null,
  branch_id              NUMBER not null,
  product_code           NUMBER not null,
  sub_product_code       NUMBER not null,
  takaful_type           VARCHAR2(1) not null,
  document_type          VARCHAR2(1) not null,
  document_no            VARCHAR2(10) not null,
  record_type            VARCHAR2(1) not null,
  document_year          VARCHAR2(10) not null,
  issue_count            NUMBER not null,
  endorsement_no         NUMBER not null,
  application_id         NUMBER not null,
  month_id               NUMBER not null,
  item_no                NUMBER not null,
  item_type              VARCHAR2(1),
  insured_id             NUMBER,
  first_name             VARCHAR2(50),
  father_name            VARCHAR2(50),
  last_name              VARCHAR2(50),
  gender                 VARCHAR2(1),
  nationality_code       VARCHAR2(5),
  date_of_birth          DATE,
  joining_date           DATE,
  effective_date         DATE,
  designation_code       NUMBER,
  category_code          NUMBER,
  salary                 NUMBER,
  sum_insured            NUMBER,
  item_branch_id         NUMBER,
  life_class             NUMBER,
  accidental_class       NUMBER,
  account_no             VARCHAR2(50),
  loan_period            NUMBER,
  personal_id            VARCHAR2(50),
  remarks                VARCHAR2(500),
  created_by             VARCHAR2(50),
  creation_date          DATE,
  last_updated_by        VARCHAR2(50),
  last_update_date       DATE,
  height                 NUMBER,
  weight                 NUMBER,
  bmi                    NUMBER,
  smoker_type            VARCHAR2(1),
  over_age_tag           VARCHAR2(1),
  below_age_tag          VARCHAR2(1),
  over_fcl_tag           VARCHAR2(1),
  below_fcl_tag          VARCHAR2(1),
  fcl                    NUMBER(15,2),
  decision_type          NUMBER,
  basic_contribution     NUMBER(15,2),
  gross_contribution     NUMBER(15,2),
  age                    NUMBER(3),
  retirement_date        DATE,
  cnic                   VARCHAR2(50),
  cnic_issue_date        DATE,
  cnic_expiry_date       DATE,
  employee_email_address VARCHAR2(200),
  employee_contact       NUMBER,
  relation_code          NUMBER,
  plan_code              NUMBER,
  is_over_age            VARCHAR2(1),
  cnic_no                VARCHAR2(50),
  starttime              NUMBER,
  starttimeam            VARCHAR2(1),
  approved_sa            NUMBER,
  decision_code          VARCHAR2(50),
  bank_name              VARCHAR2(50),
  item_status            VARCHAR2(1),
  occupational_class     VARCHAR2(10),
  net_contribution       NUMBER,
  wakala_fee             NUMBER,
  retakaful_contribution NUMBER,
  policy_item            VARCHAR2(1),
  approved_uw_sa         NUMBER,
  retakaful_sa           NUMBER,
  counter_offer_tag      VARCHAR2(1),
  uw_mandatory           VARCHAR2(1),
  commission_amount      NUMBER
)
;
alter table GLAS_DOC_INS_ITEMS_MONTHLY_T
  add constraint PK_DOC_INS_ITEMS_MONT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, MONTH_ID, ITEM_NO);
alter table GLAS_DOC_INS_ITEMS_MONTHLY_T
  add constraint FK_DOC_INS_ITEMS_MONT foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_ITEM_BENEFIT_INSTMT_T
prompt =============================================
prompt
create table GLAS_DOC_ITEM_BENEFIT_INSTMT_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  product_code             NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  item_no                  NUMBER not null,
  benefit_code             NUMBER not null,
  serial_no                NUMBER not null,
  due_date                 DATE,
  gross_contribution       VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  quota_share_contribution VARCHAR2(50),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  osf                      NUMBER,
  ptf                      NUMBER,
  period_end_date          DATE,
  installment_days         NUMBER,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  special_discount         NUMBER,
  gross_cont_after_disc    NUMBER,
  received_amount          NUMBER,
  installment_type         VARCHAR2(1),
  commission_amount        NUMBER
)
;
alter table GLAS_DOC_ITEM_BENEFIT_INSTMT_T
  add constraint PK_DOC_ITEM_BENEFIT_INSTMT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFIT_CODE, SERIAL_NO);
alter table GLAS_DOC_ITEM_BENEFIT_INSTMT_T
  add constraint FK_DOC_ITEM_BENEFIT_INSTMT foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFIT_CODE)
  references GLAS_DOC_INSURED_BENEFIT_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, BENEFIT_CODE);

prompt
prompt Creating table GLAS_DOC_ITEM_BRANCH_INSTMT_T
prompt ============================================
prompt
create table GLAS_DOC_ITEM_BRANCH_INSTMT_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  product_code             NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  item_branch_id           NUMBER not null,
  serial_no                NUMBER not null,
  due_date                 DATE,
  gross_contribution       VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  quota_share_contribution VARCHAR2(50),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  osf                      NUMBER,
  ptf                      NUMBER,
  period_end_date          DATE,
  installment_days         NUMBER,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  special_discount         NUMBER,
  gross_cont_after_disc    NUMBER,
  received_amount          NUMBER,
  installment_type         VARCHAR2(1),
  discount_with_no_wakala  NUMBER,
  commission_amount        NUMBER
)
;
alter table GLAS_DOC_ITEM_BRANCH_INSTMT_T
  add constraint PK_DOC_ITEM_BRANCH_INSTMT primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_BRANCH_ID, SERIAL_NO);
alter table GLAS_DOC_ITEM_BRANCH_INSTMT_T
  add constraint FK_DOC_ITEM_BRANCH_INSTMT foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_ITEM_INSTALLMENTS_T
prompt ===========================================
prompt
create table GLAS_DOC_ITEM_INSTALLMENTS_T
(
  org_id                   NUMBER not null,
  branch_id                NUMBER not null,
  product_code             NUMBER not null,
  sub_product_code         NUMBER not null,
  takaful_type             VARCHAR2(1) not null,
  document_type            VARCHAR2(1) not null,
  document_no              VARCHAR2(10) not null,
  record_type              VARCHAR2(1) not null,
  document_year            VARCHAR2(10) not null,
  issue_count              NUMBER not null,
  endorsement_no           NUMBER not null,
  application_id           NUMBER not null,
  item_no                  NUMBER not null,
  serial_no                NUMBER not null,
  due_date                 DATE,
  gross_contribution       VARCHAR2(50),
  wakala_amount            VARCHAR2(50),
  quota_share_contribution VARCHAR2(50),
  created_by               VARCHAR2(50),
  creation_date            DATE,
  last_updated_by          VARCHAR2(50),
  last_update_date         DATE,
  osf                      NUMBER,
  ptf                      NUMBER,
  period_end_date          DATE,
  installment_days         NUMBER,
  posting_tag              VARCHAR2(1),
  post_user                VARCHAR2(50),
  post_date                DATE,
  special_discount         NUMBER,
  gross_cont_after_disc    NUMBER,
  received_amount          NUMBER,
  installment_type         VARCHAR2(1),
  commission_amount        NUMBER
)
;
alter table GLAS_DOC_ITEM_INSTALLMENTS_T
  add constraint PK_DOC_ITEM_INSTALLMENTS primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, SERIAL_NO);
alter table GLAS_DOC_ITEM_INSTALLMENTS_T
  add constraint FK_DOC_ITEM_INST foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO)
  references GLAS_DOC_INSURED_ITEMS_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_MED_DTL_CHLD_T
prompt ======================================
prompt
create table GLAS_DOC_MED_DTL_CHLD_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  item_no          NUMBER not null,
  uw_code          VARCHAR2(5) not null,
  uw_dtl_code      NUMBER not null,
  uw_status        VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  file_attached    VARCHAR2(200),
  remarks          VARCHAR2(500)
)
;
alter table GLAS_DOC_MED_DTL_CHLD_T
  add constraint PK_GLAS_DOC_MED_DTL_CHLD_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE, UW_DTL_CODE);

prompt
prompt Creating table GLAS_DOC_MED_DTL_T
prompt =================================
prompt
create table GLAS_DOC_MED_DTL_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  item_no          NUMBER not null,
  uw_code          VARCHAR2(5) not null,
  uw_status        VARCHAR2(5),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  file_attached    VARCHAR2(200),
  remarks          VARCHAR2(500),
  completion_date  DATE,
  display_order    NUMBER,
  service_provider VARCHAR2(10)
)
;
alter table GLAS_DOC_MED_DTL_T
  add constraint PK_GLAS_DOC_MED_DTL_T primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO, UW_CODE);
alter table GLAS_DOC_MED_DTL_T
  add constraint FK_DOC_INS_MED_DTL_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO)
  references GLAS_DOC_INSURED_ITEMS_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, ITEM_NO);

prompt
prompt Creating table GLAS_DOC_POSTING_HISTORY_T
prompt =========================================
prompt
create table GLAS_DOC_POSTING_HISTORY_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  serial_no        NUMBER not null,
  post_by          VARCHAR2(50),
  post_date        VARCHAR2(50),
  matrix_id        VARCHAR2(50),
  voucher_no       VARCHAR2(50),
  advice_no        VARCHAR2(50),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_POSTING_HISTORY_T
  add constraint PK_DOC_POST_HIST primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, SERIAL_NO);
alter table GLAS_DOC_POSTING_HISTORY_T
  add constraint FK_DOC_POST_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_DOC_VARIABLE_VALUES_T
prompt =========================================
prompt
create table GLAS_DOC_VARIABLE_VALUES_T
(
  org_id           NUMBER not null,
  branch_id        NUMBER not null,
  product_code     NUMBER not null,
  sub_product_code NUMBER not null,
  takaful_type     VARCHAR2(1) not null,
  document_type    VARCHAR2(1) not null,
  document_no      VARCHAR2(10) not null,
  record_type      VARCHAR2(1) not null,
  document_year    VARCHAR2(10) not null,
  issue_count      NUMBER not null,
  endorsement_no   NUMBER not null,
  application_id   NUMBER not null,
  variable_name    VARCHAR2(250) not null,
  variable_value   VARCHAR2(500),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_DOC_VARIABLE_VALUES_T
  add constraint PK_DOC_VAR_VALUES primary key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID, VARIABLE_NAME);
alter table GLAS_DOC_VARIABLE_VALUES_T
  add constraint FK_DOC_VAR_VALUES_DOC foreign key (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID)
  references TK_DOC_HEADER_T (ORG_ID, BRANCH_ID, PRODUCT_CODE, SUB_PRODUCT_CODE, TAKAFUL_TYPE, DOCUMENT_TYPE, DOCUMENT_NO, RECORD_TYPE, DOCUMENT_YEAR, ISSUE_COUNT, ENDORSEMENT_NO, APPLICATION_ID);

prompt
prompt Creating table GLAS_EXCLUTION_T
prompt ===============================
prompt
create table GLAS_EXCLUTION_T
(
  org_id            NUMBER not null,
  benefit_code      NUMBER not null,
  application_id    NUMBER not null,
  exclusion_code    NUMBER not null,
  default_tag       VARCHAR2(50),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  ex_text_quotation VARCHAR2(4000),
  ex_text_policy    VARCHAR2(4000),
  active            VARCHAR2(5),
  print_order       VARCHAR2(5),
  ex_desc           VARCHAR2(150)
)
;
alter table GLAS_EXCLUTION_T
  add constraint PK_EXCLUTION primary key (ORG_ID, BENEFIT_CODE, APPLICATION_ID, EXCLUSION_CODE);

prompt
prompt Creating table GLAS_EXPENSE_MARGIN_SETUP_T
prompt ==========================================
prompt
create table GLAS_EXPENSE_MARGIN_SETUP_T
(
  org_id            NUMBER not null,
  margin_code       NUMBER not null,
  margin_desc       VARCHAR2(500),
  margin_short_desc VARCHAR2(50),
  loading_percent   NUMBER(9,6),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_EXPENSE_MARGIN_SETUP_T
  add constraint PK_EXP_M_SETUP_T primary key (ORG_ID, MARGIN_CODE);
alter table GLAS_EXPENSE_MARGIN_SETUP_T
  add constraint FK_EXP_M_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_FORMULA_SETUP_T
prompt ===================================
prompt
create table GLAS_FORMULA_SETUP_T
(
  org_id             NUMBER not null,
  formula_code       NUMBER not null,
  formula_desc       VARCHAR2(500),
  formula_short_desc VARCHAR2(50),
  formula_value      VARCHAR2(500),
  active             VARCHAR2(1),
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_FORMULA_SETUP_T
  add constraint PK_FORMULA_SETUP_T primary key (ORG_ID, FORMULA_CODE);
alter table GLAS_FORMULA_SETUP_T
  add constraint FK_FORMULA_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_ICD10_SETUP
prompt ===============================
prompt
create table GLAS_ICD10_SETUP
(
  code              VARCHAR2(30) not null,
  description       VARCHAR2(500),
  created_by        VARCHAR2(50),
  created_on        DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  org_id            NUMBER not null,
  short_description VARCHAR2(200),
  icd_rate          NUMBER,
  rate_code         NUMBER not null
)
;
alter table GLAS_ICD10_SETUP
  add constraint GLAS_ICD10_SETUP_PK primary key (ORG_ID, RATE_CODE, CODE);

prompt
prompt Creating table GLAS_MAIN_PROD_CAT_DTL_T
prompt =======================================
prompt
create table GLAS_MAIN_PROD_CAT_DTL_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  categoryhd_id     NUMBER not null,
  categorydtl_id    NUMBER not null,
  description       VARCHAR2(2500),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_MAIN_PROD_CAT_DTL_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, CATEGORYHD_ID, CATEGORYDTL_ID);

prompt
prompt Creating table GLAS_MAIN_PROD_CAT_HD_T
prompt ======================================
prompt
create table GLAS_MAIN_PROD_CAT_HD_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  categoryhd_id     NUMBER not null,
  description       VARCHAR2(2500),
  active            VARCHAR2(1),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE
)
;
alter table GLAS_MAIN_PROD_CAT_HD_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, CATEGORYHD_ID);

prompt
prompt Creating table GLAS_M_APP_CATEGORY_SETUP_T
prompt ==========================================
prompt
create table GLAS_M_APP_CATEGORY_SETUP_T
(
  org_id           NUMBER not null,
  category_code    NUMBER not null,
  category_desc    VARCHAR2(500),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  file_path        VARCHAR2(500),
  product_id       NUMBER
)
;
alter table GLAS_M_APP_CATEGORY_SETUP_T
  add constraint PK_GLAS_PROD_CAT_MAPPING primary key (ORG_ID, CATEGORY_CODE);

prompt
prompt Creating table GLAS_M_APP_MODAL_DTL_T
prompt =====================================
prompt
create table GLAS_M_APP_MODAL_DTL_T
(
  org_id           NUMBER not null,
  container_id     VARCHAR2(150) not null,
  record_id        NUMBER not null,
  type             VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  description      VARCHAR2(1000),
  display_order    NUMBER
)
;
alter table GLAS_M_APP_MODAL_DTL_T
  add constraint GLAS_M_APP_MODAL_DTL_T primary key (ORG_ID, CONTAINER_ID, RECORD_ID);

prompt
prompt Creating table GLAS_M_APP_MODAL_HD_T
prompt ====================================
prompt
create table GLAS_M_APP_MODAL_HD_T
(
  org_id           NUMBER not null,
  container_id     VARCHAR2(1000) not null,
  active_tag       VARCHAR2(1),
  main_heading     VARCHAR2(400),
  type             VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_M_APP_MODAL_HD_T
  add constraint GLAS_M_APP_MODAL_HD_T primary key (ORG_ID, CONTAINER_ID);

prompt
prompt Creating table GLAS_OCCUPATION_SETUP_T
prompt ======================================
prompt
create table GLAS_OCCUPATION_SETUP_T
(
  org_id                NUMBER not null,
  occupation_code       NUMBER not null,
  occupation_desc       VARCHAR2(500),
  occupation_short_desc VARCHAR2(50),
  class_code            NUMBER,
  active                VARCHAR2(1),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  code                  VARCHAR2(50),
  decision_tag          VARCHAR2(10)
)
;
alter table GLAS_OCCUPATION_SETUP_T
  add constraint PK_OCCUPATION_SETUP_T primary key (ORG_ID, OCCUPATION_CODE);
alter table GLAS_OCCUPATION_SETUP_T
  add constraint FK_OCCUPATION_SETUP_T_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_PAYMENT_MODE_LOAD_T
prompt =======================================
prompt
create table GLAS_PAYMENT_MODE_LOAD_T
(
  org_id           NUMBER not null,
  payment_mode     VARCHAR2(10) not null,
  loading_rate     NUMBER(9,6),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE not null,
  flat_amount      NUMBER
)
;
alter table GLAS_PAYMENT_MODE_LOAD_T
  add constraint PK_PAYM_LOAD_SETUP_T primary key (ORG_ID, PAYMENT_MODE, LAST_UPDATE_DATE);
alter table GLAS_PAYMENT_MODE_LOAD_T
  add constraint FK_PAYM_LOAD_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_PROD_BEN_TERMS_T
prompt ====================================
prompt
create table GLAS_PROD_BEN_TERMS_T
(
  org_id            NUMBER not null,
  main_product_code NUMBER not null,
  sub_product_code  NUMBER not null,
  benefit_code      NUMBER not null,
  serial_no         NUMBER not null,
  policy_term       VARCHAR2(100),
  created_by        VARCHAR2(50),
  creation_date     DATE,
  last_updated_by   VARCHAR2(50),
  last_update_date  DATE,
  payment_term      VARCHAR2(1)
)
;
alter table GLAS_PROD_BEN_TERMS_T
  add primary key (ORG_ID, MAIN_PRODUCT_CODE, SUB_PRODUCT_CODE, BENEFIT_CODE, SERIAL_NO);

prompt
prompt Creating table GLAS_PROD_CAT_MAPPING_T
prompt ======================================
prompt
create table GLAS_PROD_CAT_MAPPING_T
(
  org_id           NUMBER not null,
  category_code    NUMBER not null,
  category_desc    VARCHAR2(500),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE
)
;
alter table GLAS_PROD_CAT_MAPPING_T
  add constraint PK_GLAS2_PROD_CAT_MAPPING primary key (ORG_ID, CATEGORY_CODE);

prompt
prompt Creating table GLAS_REINSURER_SETUP_T
prompt =====================================
prompt
create table GLAS_REINSURER_SETUP_T
(
  org_id           NUMBER not null,
  reinsurer_code   NUMBER not null,
  description      VARCHAR2(500),
  short_desc       VARCHAR2(50),
  active           VARCHAR2(1),
  created_by       VARCHAR2(50),
  creation_date    DATE,
  last_updated_by  VARCHAR2(50),
  last_update_date DATE,
  reinsurer_number VARCHAR2(8)
)
;
alter table GLAS_REINSURER_SETUP_T
  add constraint PK_REINSURER_SETUP primary key (ORG_ID, REINSURER_CODE);
alter table GLAS_REINSURER_SETUP_T
  add constraint FK_REINSURER_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_TREATY_DTL_SETUP_T
prompt ======================================
prompt
create table GLAS_TREATY_DTL_SETUP_T
(
  org_id                NUMBER not null,
  treaty_code           NUMBER not null,
  treaty_detail_code    NUMBER not null,
  effective_start_date  DATE,
  treaty_type           VARCHAR2(10),
  currency_code         VARCHAR2(10),
  age_basis             VARCHAR2(10),
  req_based_on          VARCHAR2(10),
  rate_basis            VARCHAR2(10),
  created_by            VARCHAR2(50),
  creation_date         DATE,
  last_updated_by       VARCHAR2(50),
  last_update_date      DATE,
  description           VARCHAR2(200),
  short_desc            VARCHAR2(50),
  effective_end_date    DATE,
  application_id        NUMBER not null,
  mapping_type          VARCHAR2(1),
  combine_retention_tag VARCHAR2(1),
  undwt_basis           VARCHAR2(3),
  calculation_basis     NUMBER,
  calculation_age_type  VARCHAR2(1)
)
;
alter table GLAS_TREATY_DTL_SETUP_T
  add constraint PK_TREATY_DTL_SETUP primary key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE);
alter table GLAS_TREATY_DTL_SETUP_T
  add constraint FK_TREATY_DTL_SETUP_ORG foreign key (ORG_ID)
  references TK_ORGANIZATION_SETUP_T (ORG_ID);

prompt
prompt Creating table GLAS_REINS_TREATY_MAPPING_T
prompt ==========================================
prompt
create table GLAS_REINS_TREATY_MAPPING_T
(
  org_id             NUMBER not null,
  reinsurer_code     NUMBER not null,
  treaty_code        NUMBER not null,
  treaty_detail_code NUMBER not null,
  created_by         VARCHAR2(50),
  creation_date      DATE,
  last_updated_by    VARCHAR2(50),
  last_update_date   DATE
)
;
alter table GLAS_REINS_TREATY_MAPPING_T
  add constraint PK_REINS_TREATY_MAP primary key (ORG_ID, REINSURER_CODE, TREATY_CODE, TREATY_DETAIL_CODE);
alter table GLAS_REINS_TREATY_MAPPING_T
  add constraint FK_REINS_TREATY_MAP_REINS foreign key (ORG_ID, REINSURER_CODE)
  references GLAS_REINSURER_SETUP_T (ORG_ID, REINSURER_CODE);
alter table GLAS_REINS_TREATY_MAPPING_T
  add constraint FK_REINS_TREATY_MAP_TREATY foreign key (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE)
  references GLAS_TREATY_DTL_SETUP_T (ORG_ID, TREATY_CODE, TREATY_DETAIL_CODE);


